{
  "version": 3,
  "file": "D:/SkyDrive/dev/martian-robots/src/scripts/main-min.js",
  "sources": [
    "../third-party/underscore-min.js",
    "common.js",
    "robot.js",
    "../third-party/requirejs-plugins/async.js",
    "../third-party/requirejs-plugins/propertyParser.js",
    "../third-party/requirejs-plugins/goog.js",
    "goog!visualization,1,packages:[corechart,geochart]",
    "marsGrid.js",
    "robotActions.js",
    "interface.js",
    "main.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA,ADyCA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvlKA,ADmKA;AClxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "//     Underscore.js 1.5.0\r\n//     http://underscorejs.org\r\n//     (c) 2009-2011 Jeremy Ashkenas, DocumentCloud Inc.\r\n//     (c) 2011-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n//     Underscore may be freely distributed under the MIT license.\r\n!function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,v=e.reduce,h=e.reduceRight,d=e.filter,g=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,_=Object.keys,w=i.bind,j=function(n){return n instanceof j?n:this instanceof j?(this._wrapped=n,void 0):new j(n)};\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=j),exports._=j):n._=j,j.VERSION=\"1.5.0\";var A=j.each=j.forEach=function(n,t,e){if(null!=n)if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a in n)if(j.has(n,a)&&t.call(e,n[a],a,n)===r)return};j.map=j.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e.push(t.call(r,n,u,i))}),e)};var E=\"Reduce of empty array with no initial value\";j.reduce=j.foldl=j.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduce===v)return e&&(t=j.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(E);return r},j.reduceRight=j.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduceRight===h)return e&&(t=j.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=j.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(E);return r},j.find=j.detect=function(n,t,r){var e;return O(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},j.filter=j.select=function(n,t,r){var e=[];return null==n?e:d&&n.filter===d?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&e.push(n)}),e)},j.reject=function(n,t,r){return j.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},j.every=j.all=function(n,t,e){t||(t=j.identity);var u=!0;return null==n?u:g&&n.every===g?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var O=j.some=j.any=function(n,t,e){t||(t=j.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};j.contains=j.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:O(n,function(n){return n===t})},j.invoke=function(n,t){var r=o.call(arguments,2),e=j.isFunction(t);return j.map(n,function(n){return(e?t:n[t]).apply(n,r)})},j.pluck=function(n,t){return j.map(n,function(n){return n[t]})},j.where=function(n,t,r){return j.isEmpty(t)?r?void 0:[]:j[r?\"find\":\"filter\"](n,function(n){for(var r in t)if(t[r]!==n[r])return!1;return!0})},j.findWhere=function(n,t){return j.where(n,t,!0)},j.max=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.max.apply(Math,n);if(!t&&j.isEmpty(n))return-1/0;var e={computed:-1/0,value:-1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a>e.computed&&(e={value:n,computed:a})}),e.value},j.min=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.min.apply(Math,n);if(!t&&j.isEmpty(n))return 1/0;var e={computed:1/0,value:1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a<e.computed&&(e={value:n,computed:a})}),e.value},j.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=j.random(r++),e[r-1]=e[t],e[t]=n}),e};var F=function(n){return j.isFunction(n)?n:function(t){return t[n]}};j.sortBy=function(n,t,r){var e=F(t);return j.pluck(j.map(n,function(n,t,u){return{value:n,index:t,criteria:e.call(r,n,t,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index<t.index?-1:1}),\"value\")};var k=function(n,t,r,e){var u={},i=F(null==t?j.identity:t);return A(n,function(t,a){var o=i.call(r,t,a,n);e(u,o,t)}),u};j.groupBy=function(n,t,r){return k(n,t,r,function(n,t,r){(j.has(n,t)?n[t]:n[t]=[]).push(r)})},j.countBy=function(n,t,r){return k(n,t,r,function(n,t){j.has(n,t)||(n[t]=0),n[t]++})},j.sortedIndex=function(n,t,r,e){r=null==r?j.identity:F(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;r.call(e,n[o])<u?i=o+1:a=o}return i},j.toArray=function(n){return n?j.isArray(n)?o.call(n):n.length===+n.length?j.map(n,j.identity):j.values(n):[]},j.size=function(n){return null==n?0:n.length===+n.length?n.length:j.keys(n).length},j.first=j.head=j.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:o.call(n,0,t)},j.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},j.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},j.rest=j.tail=j.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},j.compact=function(n){return j.filter(n,j.identity)};var R=function(n,t,r){return t&&j.every(n,j.isArray)?c.apply(r,n):(A(n,function(n){j.isArray(n)||j.isArguments(n)?t?a.apply(r,n):R(n,t,r):r.push(n)}),r)};j.flatten=function(n,t){return R(n,t,[])},j.without=function(n){return j.difference(n,o.call(arguments,1))},j.uniq=j.unique=function(n,t,r,e){j.isFunction(t)&&(e=r,r=t,t=!1);var u=r?j.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:j.contains(a,r))||(a.push(r),i.push(n[e]))}),i},j.union=function(){return j.uniq(j.flatten(arguments,!0))},j.intersection=function(n){var t=o.call(arguments,1);return j.filter(j.uniq(n),function(n){return j.every(t,function(t){return j.indexOf(t,n)>=0})})},j.difference=function(n){var t=c.apply(e,o.call(arguments,1));return j.filter(n,function(n){return!j.contains(t,n)})},j.zip=function(){return j.unzip.apply(j,o.call(arguments))},j.unzip=function(){for(var n=j.max(j.pluck(arguments,\"length\").concat(0)),t=new Array(n),r=0;n>r;r++)t[r]=j.pluck(arguments,\"\"+r);return t},j.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},j.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if(\"number\"!=typeof r)return e=j.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},j.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},j.range=function(n,t,r){arguments.length<=1&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=new Array(e);e>u;)i[u++]=n,n+=r;return i};var M=function(){};j.bind=function(n,t){var r,e;if(w&&n.bind===w)return w.apply(n,o.call(arguments,1));if(!j.isFunction(n))throw new TypeError;return r=o.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(o.call(arguments)));M.prototype=n.prototype;var u=new M;M.prototype=null;var i=n.apply(u,r.concat(o.call(arguments)));return Object(i)===i?i:u}},j.partial=function(n){var t=o.call(arguments,1);return function(){return n.apply(this,t.concat(o.call(arguments)))}},j.bindAll=function(n){var t=o.call(arguments,1);if(0===t.length)throw new Error(\"bindAll must be passed function names\");return A(t,function(t){n[t]=j.bind(n[t],n)}),n},j.memoize=function(n,t){var r={};return t||(t=j.identity),function(){var e=t.apply(this,arguments);return j.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},j.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},j.defer=function(n){return j.delay.apply(j,[n,1].concat(o.call(arguments,1)))},j.throttle=function(n,t,r){var e,u,i,a=null,o=0;r||(r={});var c=function(){o=new Date,a=null,i=n.apply(e,u)};return function(){var l=new Date;o||r.leading!==!1||(o=l);var f=t-(l-o);return e=this,u=arguments,0>=f?(clearTimeout(a),a=null,o=l,i=n.apply(e,u)):a||r.trailing===!1||(a=setTimeout(c,f)),i}},j.debounce=function(n,t,r){var e,u=null;return function(){var i=this,a=arguments,o=function(){u=null,r||(e=n.apply(i,a))},c=r&&!u;return clearTimeout(u),u=setTimeout(o,t),c&&(e=n.apply(i,a)),e}},j.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},j.wrap=function(n,t){return function(){var r=[n];return a.apply(r,arguments),t.apply(this,r)}},j.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},j.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},j.keys=_||function(n){if(n!==Object(n))throw new TypeError(\"Invalid object\");var t=[];for(var r in n)j.has(n,r)&&t.push(r);return t},j.values=function(n){var t=[];for(var r in n)j.has(n,r)&&t.push(n[r]);return t},j.pairs=function(n){var t=[];for(var r in n)j.has(n,r)&&t.push([r,n[r]]);return t},j.invert=function(n){var t={};for(var r in n)j.has(n,r)&&(t[n[r]]=r);return t},j.functions=j.methods=function(n){var t=[];for(var r in n)j.isFunction(n[r])&&t.push(r);return t.sort()},j.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},j.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},j.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)j.contains(r,u)||(t[u]=n[u]);return t},j.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]===void 0&&(n[r]=t[r])}),n},j.clone=function(n){return j.isObject(n)?j.isArray(n)?n.slice():j.extend({},n):n},j.tap=function(n,t){return t(n),n};var S=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof j&&(n=n._wrapped),t instanceof j&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case\"[object String]\":return n==String(t);case\"[object Number]\":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case\"[object Date]\":case\"[object Boolean]\":return+n==+t;case\"[object RegExp]\":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if(\"object\"!=typeof n||\"object\"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;var a=n.constructor,o=t.constructor;if(a!==o&&!(j.isFunction(a)&&a instanceof a&&j.isFunction(o)&&o instanceof o))return!1;r.push(n),e.push(t);var c=0,f=!0;if(\"[object Array]\"==u){if(c=n.length,f=c==t.length)for(;c--&&(f=S(n[c],t[c],r,e)););}else{for(var s in n)if(j.has(n,s)&&(c++,!(f=j.has(t,s)&&S(n[s],t[s],r,e))))break;if(f){for(s in t)if(j.has(t,s)&&!c--)break;f=!c}}return r.pop(),e.pop(),f};j.isEqual=function(n,t){return S(n,t,[],[])},j.isEmpty=function(n){if(null==n)return!0;if(j.isArray(n)||j.isString(n))return 0===n.length;for(var t in n)if(j.has(n,t))return!1;return!0},j.isElement=function(n){return!(!n||1!==n.nodeType)},j.isArray=x||function(n){return\"[object Array]\"==l.call(n)},j.isObject=function(n){return n===Object(n)},A([\"Arguments\",\"Function\",\"String\",\"Number\",\"Date\",\"RegExp\"],function(n){j[\"is\"+n]=function(t){return l.call(t)==\"[object \"+n+\"]\"}}),j.isArguments(arguments)||(j.isArguments=function(n){return!(!n||!j.has(n,\"callee\"))}),\"function\"!=typeof/./&&(j.isFunction=function(n){return\"function\"==typeof n}),j.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},j.isNaN=function(n){return j.isNumber(n)&&n!=+n},j.isBoolean=function(n){return n===!0||n===!1||\"[object Boolean]\"==l.call(n)},j.isNull=function(n){return null===n},j.isUndefined=function(n){return n===void 0},j.has=function(n,t){return f.call(n,t)},j.noConflict=function(){return n._=t,this},j.identity=function(n){return n},j.times=function(n,t,r){for(var e=Array(Math.max(0,n)),u=0;n>u;u++)e[u]=t.call(r,u);return e},j.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))};var I={escape:{\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"/\":\"&#x2F;\"}};I.unescape=j.invert(I.escape);var T={escape:new RegExp(\"[\"+j.keys(I.escape).join(\"\")+\"]\",\"g\"),unescape:new RegExp(\"(\"+j.keys(I.unescape).join(\"|\")+\")\",\"g\")};j.each([\"escape\",\"unescape\"],function(n){j[n]=function(t){return null==t?\"\":(\"\"+t).replace(T[n],function(t){return I[n][t]})}}),j.result=function(n,t){if(null==n)return void 0;var r=n[t];return j.isFunction(r)?r.call(n):r},j.mixin=function(n){A(j.functions(n),function(t){var r=j[t]=n[t];j.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),D.call(this,r.apply(j,n))}})};var N=0;j.uniqueId=function(n){var t=++N+\"\";return n?n+t:t},j.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g};var q=/(.)^/,B={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\t\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},z=/\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;j.template=function(n,t,r){var e;r=j.defaults({},r,j.templateSettings);var u=new RegExp([(r.escape||q).source,(r.interpolate||q).source,(r.evaluate||q).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(z,function(n){return\"\\\\\"+B[n]}),r&&(a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\"),e&&(a+=\"'+\\n((__t=(\"+e+\"))==null?'':__t)+\\n'\"),u&&(a+=\"';\\n\"+u+\"\\n__p+='\"),i=o+t.length,t}),a+=\"';\\n\",r.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{e=new Function(r.variable||\"obj\",\"_\",a)}catch(o){throw o.source=a,o}if(t)return e(t,j);var c=function(n){return e.call(this,n,j)};return c.source=\"function(\"+(r.variable||\"obj\")+\"){\\n\"+a+\"}\",c},j.chain=function(n){return j(n).chain()};var D=function(n){return this._chain?j(n).chain():n};j.mixin(j),A([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){var t=e[n];j.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),\"shift\"!=n&&\"splice\"!=n||0!==r.length||delete r[0],D.call(this,r)}}),A([\"concat\",\"join\",\"slice\"],function(n){var t=e[n];j.prototype[n]=function(){return D.call(this,t.apply(this._wrapped,arguments))}}),j.extend(j.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}.call(this);\r\n//# sourceMappingURL=underscore-min.map;\ndefine(\"underscore\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global._;\n    };\n}(this)));\n\n",
    "define('common',[],function() {\r\n\t\"use strict\";\r\n\t\r\n\tvar defaults = {\r\n\t\txBounds: 5, yBounds: 3, maxCoord: 50, maxInstruction: 100\r\n\t};\r\n\t\r\n\t/* \r\n\t * [1-9] check if value is a positive number \r\n\t * [0-9] check if value greater than 0\r\n\t */\r\n\tvar isNumber = function(value) {\r\n\t\tif(/^(\\-|\\+)?([1-9]+|Infinity)$/.test(value))\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t};\r\n\t\r\n\tvar defaultsObj = function(xBounds, yBounds, maxCoord, maxInstruction) {\r\n\t\tthis.xBounds = isNumber(xBounds) ? 5 : parseInt(xBounds, 10);\r\n\t\tthis.yBounds = isNumber(yBounds) ? 3 : parseInt(yBounds, 10);\r\n\t\tthis.maxCord = isNumber(maxCord) ? 50 : parseInt(maxCord, 10);\r\n\t\tthis.maxInstruction = isNumber(maxInstruction) ? 100 : parseInt(maxInstruction, 10);\r\n\t};\r\n\t\r\n\tvar isPosSafe = function(pos, posBounds) {\r\n\t\tif(pos < 0 || pos > parseInt(posBounds, 10)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn {\r\n\t\tisNumber: isNumber,\r\n\t\tdefaults: defaults,\r\n\t\tisPosSafe: isPosSafe\r\n\t};\r\n});\n",
    "define('robot',[\"common\"], function(common) {\r\n\t\"use strict\";\r\n\r\n\t// robot definition\r\n\tvar robot = function(name, xPos, yPos, orientation, isAlive) {\r\n\t\tthis.name = name;\r\n\t\tthis.xPos = parseInt(xPos, 10);\r\n\t\tthis.yPos = parseInt(yPos, 10);\r\n\t\t\r\n\t\tthis.coords = function() {\r\n\t\t\treturn this.xPos + \", \" + this.yPos;\r\n\t\t};\r\n\t\t\r\n\t\tthis.orientation = orientation.toUpperCase();\r\n\t\tthis.isAlive = isAlive;\r\n\t\t\r\n\t\tthis.isAliveStr = function() {\r\n\t\t\treturn (!this.isAlive) ? \" LOST\" : \"\";\r\n\t\t};\r\n\t\t\r\n\t\tthis.output = function() {\r\n\t\t\tvar outputStr = this.xPos + \" \" + this.yPos + \" \" + this.orientation + this.isAliveStr();\r\n\t\t\treturn outputStr;\r\n\t\t};\r\n\t\t\r\n\t\tthis.isBotValid = function() {\r\n\t\t\tif(!common.isPosSafe(this.xPos , common.defaults.maxCoord) || !common.isPosSafe(this.yPos, common.defaults.maxCoord)) {\r\n\t\t\t\tconsole.log(\"Error creating '%s'. A single coordinate must be a positive number less than %s!\", this.name, common.defaults.maxCoord);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\t\r\n\treturn {\r\n\t\trobot: robot\r\n\t};\r\n\t\r\n});\n",
    "/** @license\r\n * RequireJS plugin for async dependency load like JSONP and Google Maps\r\n * Author: Miller Medeiros\r\n * Version: 0.1.2 (2014/02/24)\r\n * Released under the MIT license\r\n */\r\ndefine('async',[],function(){\r\n\r\n    var DEFAULT_PARAM_NAME = 'callback',\r\n        _uid = 0;\r\n\r\n    function injectScript(src){\r\n        var s, t;\r\n        s = document.createElement('script'); s.type = 'text/javascript'; s.async = true; s.src = src;\r\n        t = document.getElementsByTagName('script')[0]; t.parentNode.insertBefore(s,t);\r\n    }\r\n\r\n    function formatUrl(name, id){\r\n        var paramRegex = /!(.+)/,\r\n            url = name.replace(paramRegex, ''),\r\n            param = (paramRegex.test(name))? name.replace(/.+!/, '') : DEFAULT_PARAM_NAME;\r\n        url += (url.indexOf('?') < 0)? '?' : '&';\r\n        return url + param +'='+ id;\r\n    }\r\n\r\n    function uid() {\r\n        _uid += 1;\r\n        return '__async_req_'+ _uid +'__';\r\n    }\r\n\r\n    return{\r\n        load : function(name, req, onLoad, config){\r\n            if(config.isBuild){\r\n                onLoad(null); //avoid errors on the optimizer\r\n            }else{\r\n                var id = uid();\r\n                //create a global variable that stores onLoad so callback\r\n                //function can define new module after async load\r\n                window[id] = onLoad;\r\n                injectScript(formatUrl(req.toUrl(name), id));\r\n            }\r\n        }\r\n    };\r\n});\r\n\n",
    "/**\r\n * Basic parser for URL properties\r\n * @author Miller Medeiros\r\n * @version 0.1.0 (2011/12/06)\r\n * MIT license\r\n */\r\ndefine('propertyParser',[],function(){\r\n\r\n    var rProps = /([\\w-]+)\\s*:\\s*(?:(\\[[^\\]]+\\])|([^,]+)),?/g, //match \"foo:bar\" and \"lorem:[ipsum,dolor]\" capturing name as $1 and val as $2 or $3\r\n        rArr = /^\\[([^\\]]+)\\]$/; //match \"[foo,bar]\" capturing \"foo,bar\"\r\n\r\n    function parseProperties(str){\r\n        var match, obj = {};\r\n        while (match = rProps.exec(str)) {\r\n            obj[ match[1] ] = typecastVal(match[2] || match[3]);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    function typecastVal(val){\r\n        if (rArr.test(val)){\r\n            val = val.replace(rArr, '$1').split(',');\r\n        } else if (val === 'null'){\r\n            val = null;\r\n        } else if (val === 'false'){\r\n            val = false;\r\n        } else if (val === 'true'){\r\n            val = true;\r\n        } else if (val === '' || val === \"''\" || val === '\"\"'){\r\n            val = '';\r\n        } else if (! isNaN(val)) {\r\n            //isNaN('') == false\r\n            val = +val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    //API\r\n    return {\r\n        parseProperties : parseProperties,\r\n        typecastVal : typecastVal\r\n    };\r\n});\r\n\n",
    "/** @license\r\n * RequireJS plugin for loading Google Ajax API modules thru `google.load`\r\n * Author: Miller Medeiros\r\n * Version: 0.2.0 (2011/12/06)\r\n * Released under the MIT license\r\n */\r\ndefine('goog',['async', 'propertyParser'], function (async, propertyParser) {\r\n\r\n    var rParts = /^([^,]+)(?:,([^,]+))?(?:,(.+))?/;\r\n\r\n    function parseName(name){\r\n        var match = rParts.exec(name),\r\n            data = {\r\n                moduleName : match[1],\r\n                version : match[2] || '1'\r\n            };\r\n        data.settings = propertyParser.parseProperties(match[3]);\r\n        return data;\r\n    }\r\n\r\n    return {\r\n        load : function(name, req, onLoad, config){\r\n            if (config.isBuild) {\r\n                onLoad(null); //avoid errors on the optimizer\r\n            } else {\r\n                var data = parseName(name),\r\n                    settings = data.settings;\r\n\r\n                settings.callback = onLoad;\r\n\r\n                req(['async!'+ (document.location.protocol === 'https:'? 'https' : 'http') +'://www.google.com/jsapi'], function(){\r\n                    google.load(data.moduleName, data.version, settings);\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n});\r\n\n",
    "\n",
    "/*\r\n * Using the google visualizations api to represent planet mars as a grid\r\n * dependencies:\r\n * 1. https://google-developers.appspot.com/chart/interactive/docs/gallery/bubblechart\r\n * 2. https://github.com/millermedeiros/requirejs-plugins\r\n */\r\n\r\ndefine('marsGrid',['common', 'goog!visualization,1,packages:[corechart,geochart]'], function(common) {\r\n\t\"use strict\";\r\n\t\r\n\tvar chart, options, data;\r\n\t\r\n\tvar drawChart = function() {\r\n    \r\n    var initializeBots = [\r\n      ['ID', 'X', 'Y', 'Orientation'],\r\n      ['Bot 1',    0,              0, 'N'],\r\n      ['Bot 2',    0,              1, 'E'],\r\n      ['Bot 3',    0,               2, 'S'],\r\n      ['Bot 4',    0,               3, 'W']\r\n    ];\r\n\r\n    data = google.visualization.arrayToDataTable(initializeBots); \r\n\r\n    options = {\r\n      title: 'The Planet Mars as a Grid',\r\n      bubble: {textStyle: {fontSize: 11}},\r\n      animation: {\r\n        duration: 1000,\r\n        easing: 'inAndOut',\r\n        startup: true\r\n      },\r\n      series: {'N': {color: 'red'},\r\n               'E': {color: 'yellow'},\r\n               'S': {color: 'blue'},\r\n               'W': {color: 'green'}\r\n      },\r\n      hAxis: {minValue: 0, maxValue: parseInt(common.defaults.xBounds, 10)},\r\n      vAxis: {minValue: 0, maxValue: parseInt(common.defaults.yBounds, 10)}\r\n    };\r\n\t\t\r\n    chart.draw(data, options);\r\n\t\t\r\n\t};\r\n  \r\n\tvar updateBotState = function(newState) {\r\n\t\tdata = google.visualization.arrayToDataTable(newState);\r\n    console.log(common.defaults.xBounds + \" \" + options);\r\n\t\tchart.draw(data, options);\r\n\t};\t\r\n\t\t\r\n  var initializeChart = function(targetElement) {\r\n\t\tchart = new google.visualization.BubbleChart(targetElement);\r\n    google.load(\"visualization\", \"1\", {packages:[\"corechart\"], callback: drawChart});\r\n  };\r\n\t\r\n\treturn {\r\n\t\tupdateBotState: updateBotState,\r\n\t\tinitializeChart: initializeChart\r\n\t};\r\n});\n",
    "define('robotActions',[\"underscore\", \"common\", \"robot\", \"marsGrid\"], function(_, common, robotObj, marsGrid) {\r\n\t\"use strict\";\r\n\r\n\tvar _lostList = []; //manages grid points of lost robots\r\n\tvar setBots = [['ID', 'X', 'Y', 'Orientation']];\r\n\r\n\t// cardinal points \"map\" with handy lookup methods\r\n\tvar _cardinalPoints = { \r\n\t\tpoints: { N:0, E:90, S:180, W:270 },\r\n\r\n\t\tgetPointName: function(findDegree) {\r\n\t\t\tfor (var p in this.points) {\r\n\t\t\t\tif (findDegree === this.points[p]) {\r\n\t\t\t\t\treturn p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDegree: function(findPoint) {\r\n\t\t\tfor (var p in this.points) {\r\n\t\t\t\tif (findPoint === p) {\r\n\t\t\t\t\treturn this.points[p];\r\n\t\t\t\t}\r\n\t\t\t}  \r\n\t\t}\r\n\t};\r\n\r\n\t// parse and process bot instructions\r\n\tvar instructBot = function (botName, positionStr, instructionsStr) {\r\n\t\tvar posArr = positionStr.trim().split(\" \");\r\n\r\n\t\tvar bot = new robotObj.robot(botName, posArr[0], posArr[1], posArr[2], true); // create a new robot based on instructions\r\n\t\t\r\n\t\t// only process instructions if the bot is valid\r\n\t\tif (bot.isBotValid()) {\r\n\t\t\tsetBots.push([positionStr, bot.xPos, bot.yPos, bot.orientation]);\r\n\t\t\tmarsGrid.updateBotState(setBots);\r\n\t\t\t\r\n\t\t\tinstructionsStr = instructionsStr.trim().substring(0, common.defaults.maxInstruction);\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < instructionsStr.length; i++) {\r\n\t\t\t\tif(_processCommands(instructionsStr.charAt(i).toUpperCase(), bot) === false) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tsetBots.pop();\r\n\t\t\t\tsetBots.push([bot.output(), bot.xPos, bot.yPos, bot.orientation]);\r\n\t\t\t\tmarsGrid.updateBotState(setBots)\r\n//\t\t\t\twindow.setInterval(marsGrid.updateBotState(setBots), 2000);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetBots.pop();\r\n\t\t\tsetBots.push([bot.output(), bot.xPos, bot.yPos, bot.orientation]);\r\n\t\t\tmarsGrid.updateBotState(setBots);\r\n\t\t\treturn bot.output();\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn \"Failed to create '\" + botName + \"', please view logs.\";\r\n\t\t}\r\n\t};\r\n\r\n\t// determines which type of move to execute: L/R/F\r\n\tvar _processCommands = function (char, bot) {\r\n\t\tswitch (char) {\r\n\t\t\tcase \"L\":\r\n\t\t\tcase \"R\":\r\n\t\t\t\tbot.orientation = _robotCommands.turnBot(bot.orientation, char);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"F\":\r\n\t\t\t\t_robotCommands.moveBot(bot);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: \r\n\t\t\t\tconsole.log(\"Invalid command received while processing '\" + bot.name + \"', moving to next character.\");\r\n\t\t}\r\n\r\n\t\treturn bot.isAlive; // dealbreaking flag, halts looping on false\r\n\t};\r\n\r\n\t// store command types in this object; this should support \"bolting\" on future commands. \r\n\t// _processCommands will need new keys to call new command types\r\n\tvar _robotCommands = {\r\n\t\tturnBot: function(orientation, char) {\r\n\t\t\treturn _turnBot(orientation, char);\r\n\t\t},\r\n\t\tmoveBot: function(bot) {\r\n\t\t\t_moveBot(bot);\r\n\t\t}\r\n\t};\r\n\r\n\t// turn bot L/R and return new orientaion\r\n\tvar _turnBot = function(orientation, direction) {\r\n\t\tvar angle = _cardinalPoints.getDegree(orientation);\r\n\r\n\t\tif(direction.toUpperCase() === \"R\") {\r\n\t\t\tangle = (angle === 270) ? 0 : angle + 90; // make sure angle never becomes 360 since that value is not mapped\r\n\t\t}\r\n\t\telse if (direction.toUpperCase() === \"L\") {\r\n\t\t\tangle = (angle === 0) ? 270 : angle - 90; // make sure angle never becomes 360 since that value is not mapped\r\n\t\t}\r\n\r\n\t\treturn _cardinalPoints.getPointName(angle); // orientation is defined in cardinal points so lets go back to that instead of angles\r\n\t};\r\n\r\n\tvar _processMotion = function(bot, tempPos, axis) {\r\n    axis = axis.toLowerCase();\r\n    switch (_hasScent(bot.coords(), tempPos, common.defaults[axis + \"Bounds\"])) {\r\n        case true:\r\n          break;\r\n        case false:\r\n          bot.isAlive = false;\r\n          _lostList.push(bot.xPos + \", \" + bot.yPos);\r\n          break;\r\n        case null:\r\n          bot[axis + \"Pos\"] = tempPos;\r\n          break;\r\n      }\r\n  };\r\n  \r\n  var _moveBot = function(bot) {\r\n\r\n\t\t// orientation determines which axis to increment/decrement along\r\n\t\tswitch (bot.orientation) {\r\n\t\t\t\tcase \"N\":\r\n          _processMotion(bot, (bot.yPos + 1), \"y\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"S\":\r\n\t\t\t\t\t_processMotion(bot, (bot.yPos - 1), \"y\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"E\":\r\n\t\t\t\t\t_processMotion(bot, (bot.xPos + 1), \"x\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"W\":\r\n\t\t\t\t\t_processMotion(bot, (bot.xPos - 1), \"x\");\r\n\t\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar _hasScent = function(posStr, tempPos, posBounds) {\r\n\r\n\t\tif (_.contains(_lostList, posStr) && !common.isPosSafe(tempPos,posBounds)) {\r\n\t\t\treturn true; \r\n//      check if location has scent by looking in the lost list\r\n//      then if the next move is fatal, don't move robot\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(!common.isPosSafe(tempPos,posBounds)) {\r\n\t\t\t\treturn false; \r\n//         if location does NOT have a scent and the next move is fatal let it happen, \r\n//        but add the location to the lost list and update the bot status to LOST\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn null; // if the next move is safe let it happen\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn {\r\n\t\tdefaults: common.defaults,\r\n\t\tinstructBot: instructBot\r\n\t};\r\n});\n",
    "/*\r\n * Controls the UI\r\n */\r\n\r\ndefine('interface',[\"robotActions\", \"common\", \"marsGrid\"], function(robotActions, common, marsGrid) {\r\n\t\"use strict\";\r\n\t\r\n\tvar errorStr = \"Your instructions are incorrectly formatted. \\n Please remember that the first line of input is used as the upper-right bounds.\";\r\n\tvar instructionsQueue = [];\r\n\tvar initBotsBtn = document.getElementById(\"initialize-bots\");\r\n\tvar inputArea = document.getElementById(\"input\"), outputArea = document.getElementById(\"output\");\r\n\tvar sampleInputBtn = document.getElementById(\"sample-input\");\r\n\tvar moveBotsBtn = document.getElementById(\"move-bots\");\r\n\t\r\n\t/*\r\n\t * this function validates the format of instructions.\r\n\t * a readable instruction is one that has at least 3 lines. \r\n\t * 1. upper bounds\r\n\t * 2. robot position\r\n\t * 3. robot movement instructions \r\n\t * \r\n\t */\r\n\t\r\n\tvar isInstructionReadable = function(inputStr) {\r\n\t\tif(inputStr.length === 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(inputStr.length > 0) {\r\n\t\t\tif(inputStr.split(\"\\n\").length < 3) {\r\n\t\t\t\t//we need at least 3 lines to try and do anything valuable\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(inputStr.split(\"\\n\").length >= 3) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tvar initializeBotPositions = function(inputStr) {\r\n\t\tvar setBots = [['ID', 'X', 'Y', 'Orientation']];\r\n\t\tvar inputArr = inputStr.split(\"\\n\\n\");\r\n\t\tvar output;\r\n\r\n\t\tfor(var i = 0; i < inputArr.length; i++) {\r\n\t\t\tvar currentInstructionSet = inputArr[i].split(\"\\n\");\r\n\t\t\t// the first line of the first instruction sets the bounds\r\n\t\t\tif (i === 0) {\r\n\t\t\t\tvar defaultsArr = currentInstructionSet[0].split(\" \");\r\n\t\t\t\tcommon.defaults.xBounds = common.isNumber(defaultsArr[0]) ? defaultsArr[0] : common.defaults.xBounds;\r\n\t\t\t\tcommon.defaults.yBounds = common.isNumber(defaultsArr[1]) ? defaultsArr[1] : common.defaults.yBounds;\r\n\t\t\t\tvar posArr = currentInstructionSet[1].trim().split(\" \");\r\n\t\t\t\t// args example (\"1 1 E\", 1, 1, \"E\")\r\n\t\t\t\tsetBots.push([currentInstructionSet[1], parseInt(posArr[0], 10), parseInt(posArr[1], 10), posArr[2]]); \r\n\t\t\t\t// args example (position string, instructions string)\t\r\n\t\t\t\tinstructionsQueue.push([currentInstructionSet[1], currentInstructionSet[2]]); \r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar posArr = currentInstructionSet[0].trim().split(\" \");\r\n\t\t\t\t// args example (\"1 1 E\", 1, 1, \"E\")\r\n\t\t\t\tsetBots.push([currentInstructionSet[0], parseInt(posArr[0], 10), parseInt(posArr[1], 10), posArr[2]]);\r\n\t\t\t\t// args example (position string, instructions string)\t\r\n\t\t\t\tinstructionsQueue.push([currentInstructionSet[0], currentInstructionSet[1]]); \r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tmarsGrid.updateBotState(setBots); \r\n\t};\r\n\t\r\n\tvar sampleInputBtnHandler = function() {\r\n    var sampleInputBtnStr = \"5 3 \\n\\\r\n1 1 E \\n\\\r\nRFRFRFRF \\n\\n\\\r\n3 2 N \\n\\\r\nFRRFLLFFRRFLL \\n\\n\\\r\n0 3 W \\n\\\r\nLLFFFLFLFL\";\r\n\t\t\r\n    sampleInputBtn.addEventListener(\"click\", function(event) {\r\n\t\t\tinputArea.value = sampleInputBtnStr;\r\n\t\t\t\r\n    }, false);\r\n\t\t\t\r\n\t};\r\n\t\r\n\tvar initBotsBtnHandler = function() {\r\n\t\tinitBotsBtn.addEventListener(\"click\", function(event) {\r\n\t\t\t\t\r\n\t\t\toutputArea.innerHTML = \"\";\r\n      \r\n      if(isInstructionReadable(inputArea.value)) {\r\n\t\t\t\tinitializeBotPositions(inputArea.value);\r\n\t\t\t\tmoveBotsBtn.removeAttribute(\"disabled\"); // enable move button\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\toutputArea.innerHTML = errorStr;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t}, false);\r\n\t};\r\n\t\r\n\tvar moveBotsBtnHandler = function() {\r\n    var output = \"\";\r\n    \r\n    moveBotsBtn.addEventListener(\"click\", function(event) {\r\n\t\toutputArea.innerHTML = \"\";\r\n      \r\n      if(isInstructionReadable(inputArea.value)) {\r\n\t\t\t\tfor(var j = 0; j < instructionsQueue.length; j++) {\r\n\t\t\t\t\tinstruction = instructionsQueue[j];\r\n\t\t\t\t\t// args: botName, initial position string, movement instructions\r\n\t\t\t\t\toutput += \"<p>\" + robotActions.instructBot(\"Bot #\" + j, instruction[0], instruction[1]) + \"</p>\"; \r\n\t\t\t\t}\r\n\t\t\t\tinputArea.value = \"\";\r\n\t\t\t\tmoveBotsBtn.setAttribute(\"disabled\",\"\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\toutputArea.innerHTML = errorStr;\r\n\t\t\t}\r\n//\t\toutputArea.innerHTML = output;\r\n    }, false);\r\n    \r\n\t};\r\n\t\r\n\tvar init = function() {\r\n\t\tmarsGrid.initializeChart(document.getElementById('planet-mars'));\r\n\t\tinitBotsBtnHandler();\r\n\t\tmoveBotsBtnHandler();\r\n\t\tsampleInputBtnHandler();\r\n\t};\r\n\t\t\r\n\treturn {\r\n\t\ttestInstructions: isInstructionReadable,\r\n\t\tinit: init\r\n\t};\r\n\t\r\n});\n",
    "/*\r\n * Third Party Dependency\r\n * https://github.com/millermedeiros/requirejs-plugins\r\n */\r\n\r\nrequire.config({\r\n\twaitSeconds : 15, //make sure it is enough to load all scripts\r\n\tshim: {\r\n\t\t'underscore': {\r\n\t\t\texports: \"_\"\r\n\t\t}\r\n\t},\r\n\tpaths: {\r\n\t\tpropertyParser: '../third-party/requirejs-plugins/propertyParser', // requirejs-plugins dependency\r\n\t\tasync: '../third-party/requirejs-plugins/async',\r\n\t\tgoog: '../third-party/requirejs-plugins/goog',\r\n\t\tunderscore: \"../third-party/underscore-min\"\r\n\t}\r\n});\r\n\r\nrequire([\"interface\"], function(interface) {\r\n\t\r\n\tinterface.init();\r\n\t\r\n});\ndefine(\"main\", function(){});\n\n"
  ]
}