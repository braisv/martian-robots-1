{"version":3,"file":"main-min.js","sources":["../third-party/underscore-min.js","common.js","robot.js","robotActions.js","../third-party/jquery-2.1.3.min.js","interface.js","main.js"],"names":[],"mappings":"CAKA,WAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,KAAA,EAAA,MAAA,UAAA,EAAA,OAAA,UAAA,EAAA,SAAA,UAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,EAAA,eAAA,EAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,YAAA,EAAA,MAAA,QAAA,EAAA,OAAA,KAAA,EAAA,EAAA,KAAA,EAAA,SAAA,GAAA,MAAA,aAAA,GAAA,EAAA,eAAA,QAAA,KAAA,SAAA,GAAA,GAAA,GAAA,GAAA,oBAAA,UAAA,mBAAA,SAAA,OAAA,UAAA,QAAA,OAAA,QAAA,GAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,GAAA,EAAA,KAAA,EAAA,QAAA,SAAA,EAAA,EAAA,GAAA,GAAA,MAAA,EAAA,GAAA,GAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,OAAA,IAAA,EAAA,UAAA,EAAA,QAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,WAAA,KAAA,GAAA,KAAA,GAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,OAAA,GAAA,IAAA,EAAA,QAAA,SAAA,EAAA,EAAA,GAAA,GAAA,KAAA,OAAA,OAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GAAA,IAAA,GAAA,6CAAA,GAAA,OAAA,EAAA,MAAA,EAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,UAAA,OAAA,CAAA,IAAA,MAAA,IAAA,MAAA,GAAA,EAAA,SAAA,EAAA,MAAA,KAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,MAAA,EAAA,KAAA,IAAA,WAAA,EAAA,OAAA,IAAA,EAAA,YAAA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,UAAA,OAAA,CAAA,IAAA,MAAA,IAAA,MAAA,GAAA,EAAA,caAAA,SAAA,GAAA,GAAA,GAAA,EAAA,KAAA,UAAA,EAAA,OAAA,GAAA,OAAA,EAAA,KAAA,GAAA,SAAA,GAAA,MAAA,GAAA,MAAA,EAAA,SAAA,GAAA,MAAA,GAAA,QAAA,EAAA,IAAA,OAAA,EAAA,WAAA,SAAA,GAAA,GAAA,GAAA,EAAA,MAAA,EAAA,EAAA,KAAA,UAAA,GAAA,OAAA,GAAA,OAAA,EAAA,SAAA,GAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,IAAA,WAAA,MAAA,GAAA,MAAA,MAAA,EAAA,EAAA,KAAA,aAAA,EAAA,MAAA,WAAA,IAAA,GAAA,GAAA,EAAA,IAAA,EAAA,MAAA,UAAA,UAAA,OAAA,IAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,MAAA,UAAA,GAAA,EAAA,OAAA,IAAA,EAAA,OAAA,SAAA,EAAA,GAAA,GAAA,MAAA,EAAA,QAAA,KAAA,GAAA,MAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,IAAA,EAAA,QAAA,SAAA,EAAA,EAAA,GAAA,GAAA,MAAA,EAAA,MAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,MAAA,IAAA,EAAA,CAAA,GAAA,gBAAA,GAAA,MAAA,GAAA,EAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,UAAA,EAAA,MAAA,GAAA,QAAA,EAAA,EAAA,MAAA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,IAAA,EAAA,YAAA,SAAA,EAAA,EAAA,GAAA,GAAA,MAAA,EAAA,MAAA,EAAA,IAAA,GAAA,MAAA,CAAA,IAAA,GAAA,EAAA,ceAAA,IAAA,MAAA,GAAA,MAAA,EAAA,EAAA,OAAA,EAAA,KAAA,YAAA,GAAA,UAAA,EAAA,SAAA,IAAA,GAAA,GAAA,EAAA,GAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,KAAA,YAAA,OAAA,QAAA,KAAA,EAAA,EAAA,IAAA,EAAA,QAAA,SAAA,GAAA,GAAA,GAAA,EAAA,KAAA,UAAA,EAAA,OAAA,YAAA,MAAA,GAAA,MAAA,KAAA,EAAA,OAAA,EAAA,KAAA,eAAA,EAAA,QAAA,SAAA,GAAA,GAAA,GAAA,EAAA,KAAA,UAAA,EAAA,IAAA,IAAA,EAAA,OAAA,KAAA,IAAA,OAAA,wCAAA,OAAA,GAAA,EAAA,SAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,KAAA,GAAA,EAAA,QAAA,SAAA,EAAA,GAAA,GAAA,KAAA,OAAA,KAAA,EAAA,EAAA,UAAA,WAAA,GAAA,GAAA,EAAA,MAAA,KAAA,UAAA,OAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,KAAA,aAAA,EAAA,MAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,KAAA,UAAA,EAAA,OAAA,YAAA,WAAA,MAAA,GAAA,MAAA,KAAA,IAAA,IAAA,EAAA,MAAA,SAAA,GAAA,MAAA,GAAA,MAAA,MAAA,GAAA,EAAA,GAAA,OAAA,EAAA,KAAA,UAAA,MAAA,EAAA,SAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,KAAA,KAAA,IAAA,GAAA,WAAA,EAAA,GAAA,MAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,GAAA,OAAA,YAAA,GAAA,GAAA,GAAA,KAAA,IAAA,EAAA,WAAA,IAAA,EAAA,EAAA,IAAA,GAAA,GAAA,EAAA,EAAA,OAAA,GAAA,KAAA,EAAA,UAAA,GAAA,GAAA,aAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA,IAAA,GAAA,EAAA,YAAA,IAAA,EAAA,WAAA,EAAA,IAAA,IAAA,EAAA,SAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,OAAA,YAAA,GAAA,GAAA,KAAA,EAAA,UAAA,EAAA,WAAA,EAAA,KAAA,IAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,CAAA,OAAA,cAAA,GAAA,EAAA,WAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,IAAA,IAAA,EAAA,KAAA,SAAA,GAAA,GAAA,GAAA,GAAA,CAAA,OAAA,YAAA,MAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,MAAA,KAAA,WAAA,EAAA,KAAA,KAAA,EAAA,KAAA,SAAA,EAAA,GAAA,MAAA,YAAA,GAAA,IAAA,EAAA,OAAA,GAAA,MAAA,EAAA,WAAA,EAAA,MAAA,KAAA,KAAA,EAAA,QAAA,WAAA,GAAA,GAAA,SAAA,OAAA,YAAA,IAAA,GAAA,GAAA,UAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,GAAA,MAAA,KAAA,GAAA,OAAA,GAAA,KAAA,EAAA,MAAA,SAAA,EAAA,GAAA,MAAA,YAAA,QAAA,EAAA,EAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,KAAA,GAAA,SAAA,GAAA,GAAA,IAAA,OAAA,GAAA,KAAA,IAAA,WAAA,iBAAA,IAAA,KAAA,KAAA,GAAA,KAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAAA,IAAA,EAAA,OAAA,SAAA,GAAA,GAAA,KAAA,KAAA,GAAA,KAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GAAA,OAAA,IAAA,EAAA,MAAA,SAAA,GAAA,GAAA,KAAA,KAAA,GAAA,KAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,IAAA,OAAA,IAAA,EAAA,OAAA,SAAA,GAAA,GAAA,KAAA,KAAA,GAAA,KAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,OAAA,IAAA,EAAA,UAAA,EAAA,QAAA,SAAA,GAAA,GAAA,KAAA,KAAA,GAAA,KAAA,GAAA,EAAA,WAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,GAAA,QAAA,EAAA,OAAA,SAAA,GAAA,MAAA,GAAA,EAAA,KAAA,UAAA,GAAA,SAAA,GAAA,GAAA,EAAA,IAAA,GAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,SAAA,GAAA,GAAA,MAAA,EAAA,EAAA,MAAA,EAAA,EAAA,KAAA,UAAA,GAAA,OAAA,GAAA,EAAA,SAAA,GAAA,IAAA,KAAA,EAAA,GAAA,EAAA,MAAA,GAAA,EAAA,KAAA,SAAA,GAAA,GAAA,MAAA,EAAA,EAAA,MAAA,EAAA,EAAA,KAAA,UAAA,GAAA,KAAA,GAAA,KAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,OAAA,IAAA,EAAA,SAAA,SAAA,GAAA,MAAA,GAAA,EAAA,KAAA,UAAA,GAAA,SAAA,GAAA,GAAA,EAAA,IAAA,GAAA,KAAA,GAAA,SAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,GAAA,EAAA,MAAA,SAAA,GAAA,MAAA,GAAA,SAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,EAAA,UAAA,GAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,MAAA,GAAA,GAAA,EAAA,IAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,MAAA,KAAA,GAAA,EAAA,GAAA,EAAA,CAAA,IAAA,MAAA,GAAA,MAAA,EAAA,MAAA,KAAA,CAAA,aAAA,KAAA,EAAA,EAAA,UAAA,YAAA,KAAA,EAAA,EAAA,SAAA,IAAA,GAAA,EAAA,KAAA,EAAA,IAAA,GAAA,EAAA,KAAA,GAAA,OAAA,CAAA,QAAA,GAAA,IAAA,kBAAA,MAAA,IAAA,OAAA,EAAA,KAAA,kBAAA,MAAA,KAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,CAAA,KAAA,gBAAA,IAAA,mBAAA,OAAA,IAAA,CAAA,KAAA,kBAAA,MAAA,GAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,WAAA,EAAA,YAAA,EAAA,WAAA,GAAA,gBAAA,IAAA,gBAAA,GAAA,OAAA,CAAA,KAAA,GAAA,GAAA,EAAA,OAAA,KAAA,GAAA,EAAA,IAAA,EAAA,MAAA,GAAA,IAAA,CAAA,IAAA,GAAA,EAAA,YAAA,EAAA,EAAA,WAAA,IAAA,IAAA,KAAA,EAAA,WAAA,IAAA,YAAA,IAAA,EAAA,WAAA,IAAA,YAAA,IAAA,OAAA,CAAA,GAAA,KAAA,GAAA,EAAA,KAAA,EAAA,IAAA,GAAA,EAAA,GAAA,CAAA,IAAA,kBAAA,GAAA,GAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,OAAA,KAAA,MAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,WAAA,CAAA,IAAA,GAAA,KAAA,GAAA,GAAA,EAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,EAAA,CAAA,IAAA,IAAA,GAAA,GAAA,EAAA,IAAA,EAAA,KAAA,IAAA,KAAA,IAAA,GAAA,MAAA,GAAA,MAAA,EAAA,MAAA,EAAA,GAAA,QAAA,SAAA,EAAA,GAAA,MAAA,GAAA,EAAA,UAAA,EAAA,QAAA,SAAA,GAAA,GAAA,MAAA,EAAA,OAAA,CAAA,IAAA,EAAA,QAAA,IAAA,EAAA,SAAA,GAAA,MAAA,KAAA,EAAA,MAAA,KAAA,GAAA,KAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,OAAA,CAAA,QAAA,GAAA,EAAA,UAAA,SAAA,GAAA,SAAA,GAAA,IAAA,EAAA,WAAA,EAAA,QAAA,GAAA,SAAA,GAAA,MAAA,kBAAA,EAAA,KAAA,IAAA,EAAA,SAAA,SAAA,GAAA,MAAA,KAAA,OAAA,IAAA,GAAA,YAAA,WAAA,SAAA,SAAA,OAAA,UAAA,SAAA,GAAA,EAAA,KAAA,GAAA,SAAA,GAAA,MAAA,GAAA,KAAA,IAAA,WAAA,EAAA,OAAA,EAAA,YAAA,aAAA,EAAA,YAAA,SAAA,GAAA,SAAA,IAAA,EAAA,IAAA,EAAA,aAAA,kBAAA,MAAA,EAAA,WAAA,SAAA,GAAA,MAAA,kBAAA,KAAA,EAAA,SAAA,SAAA,GAAA,MAAA,UAAA,KAAA,MAAA,WAAA,KAAA,EAAA,MAAA,SAAA,GAAA,MAAA,GAAA,SAAA,IAAA,IAAA,GAAA,EAAA,UAAA,SAAA,GAAA,MAAA,MAAA,GAAA,KAAA,GAAA,oBAAA,EAAA,KAAA,IAAA,EAAA,OAAA,SAAA,GAAA,MAAA,QAAA,GAAA,EAAA,YAAA,SAAA,GAAA,MAAA,UAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,IAAA,EAAA,WAAA,WAAA,MAAA,GAAA,EAAA,EAAA,MAAA,EAAA,SAAA,SAAA,GAAA,MAAA,IAAA,EAAA,MAAA,SAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,MAAA,KAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,IAAA,EAAA,OAAA,SAAA,EAAA,GAAA,MAAA,OAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,MAAA,KAAA,UAAA,EAAA,EAAA,IAAA,IAAA,IAAA,QAAA,IAAA,QAAA,IAAA,OAAA,IAAA,OAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,GAAA,SAAA,EAAA,OAAA,EAAA,OAAA,IAAA,IAAA,OAAA,GAAA,QAAA,IAAA,EAAA,KAAA,EAAA,QAAA,KAAA,IAAA,IAAA,KAAA,SAAA,GAAA,QAAA,IAAA,EAAA,KAAA,EAAA,UAAA,KAAA,KAAA,IAAA,KAAA,GAAA,MAAA,SAAA,YAAA,SAAA,GAAA,EAAA,GAAA,SAAA,GAAA,MAAA,OAAA,EAAA,IAAA,GAAA,GAAA,QAAA,EAAA,GAAA,SAAA,GAAA,MAAA,GAAA,GAAA,QAAA,EAAA,OAAA,SAAA,EAAA,GAAA,GAAA,MAAA,EAAA,MAAA,OAAA,IAAA,GAAA,EAAA,EAAA,OAAA,GAAA,WAAA,GAAA,EAAA,KAAA,GAAA,GAAA,EAAA,MAAA,SAAA,GAAA,EAAA,EAAA,UAAA,GAAA,SAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,UAAA,GAAA,WAAA,GAAA,IAAA,KAAA,SAAA,OAAA,GAAA,MAAA,EAAA,WAAA,EAAA,KAAA,KAAA,EAAA,MAAA,EAAA,OAAA,IAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,GAAA,KAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAAA,EAAA,kBAAA,SAAA,kBAAA,YAAA,mBAAA,OAAA,mBAAA,IAAA,GAAA,OAAA,GAAA,IAAA,IAAA,KAAA,KAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,SAAA,QAAA,SAAA,SAAA,EAAA,8BAAA,GAAA,SAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,YAAA,EAAA,EAAA,iBAAA,IAAA,GAAA,GAAA,UAAA,EAAA,QAAA,GAAA,QAAA,EAAA,aAAA,GAAA,QAAA,EAAA,UAAA,GAAA,QAAA,KAAA,KAAA,KAAA,KAAA,EAAA,EAAA,EAAA,QAAA,GAAA,QAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,IAAA,EAAA,MAAA,EAAA,GAAA,QAAA,EAAA,SAAA,GAAA,MAAA,KAAA,EAAA,KAAA,IAAA,GAAA,cAAA,EAAA,kCAAA,IAAA,GAAA,cAAA,EAAA,wBAAA,IAAA,GAAA,OAAA,EAAA,YAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,OAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,OAAA,EAAA,4FAAA,EAAA,eAAA,KAAA,EAAA,GAAA,UAAA,EAAA,UAAA,MAAA,IAAA,GAAA,MAAA,GAAA,KAAA,GAAA,OAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,GAAA,SAAA,GAAA,MAAA,GAAA,KAAA,KAAA,EAAA,GAAA,OAAA,GAAA,OAAA,aAAA,EAAA,UAAA,OAAA,OAAA,EAAA,IAAA,GAAA,EAAA,MAAA,SAAA,GAAA,MAAA,GAAA,GAAA,QAAA,IAAA,GAAA,SAAA,GAAA,MAAA,MAAA,OAAA,EAAA,GAAA,QAAA,EAAA,GAAA,MAAA,GAAA,GAAA,MAAA,OAAA,UAAA,QAAA,OAAA,SAAA,WAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,UAAA,GAAA,WAAA,GAAA,GAAA,KAAA,QAAA,OAAA,GAAA,MAAA,EAAA,WAAA,SAAA,GAAA,UAAA,GAAA,IAAA,EAAA,cAAA,GAAA,GAAA,EAAA,KAAA,KAAA,MAAA,GAAA,SAAA,OAAA,SAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,UAAA,GAAA,WAAA,MAAA,GAAA,KAAA,KAAA,EAAA,MAAA,KAAA,SAAA,eAAA,EAAA,OAAA,EAAA,WAAA,MAAA,WAAA,MAAA,MAAA,QAAA,EAAA,MAAA,MAAA,WAAA,MAAA,MAAA,aAAA,KAAA,MAEA,OAAA,aAAA,SAAA,GACA,MAAA,YACA,GAAA,EACA,OAAA,IAAA,EAAA,IAEA,OAEA,OCdA,UAAA,cAAA,WAGA,GAAA,IACA,QAAA,EAAA,QAAA,EAAA,SAAA,GAAA,eAAA,KAOA,EAAA,SAAA,GACA,MAAA,8BAAA,KAAA,IACA,GACA,GAUA,EAAA,SAAA,EAAA,GACA,MAAA,GAAA,GAAA,EAAA,SAAA,EAAA,KACA,GAGA,EAIA,QACA,SAAA,EACA,SAAA,EACA,UAAA,KCpCA,OAAA,SAAA,UAAA,SAAA,GAIA,GAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,KAAA,KAAA,EACA,KAAA,KAAA,SAAA,EAAA,IACA,KAAA,KAAA,SAAA,EAAA,IAEA,KAAA,OAAA,WACA,MAAA,MAAA,KAAA,KAAA,KAAA,MAGA,KAAA,YAAA,EAAA,cACA,KAAA,QAAA,EAEA,KAAA,WAAA,WACA,MAAA,MAAA,QAAA,GAAA,SAGA,KAAA,OAAA,WACA,GAAA,GAAA,KAAA,KAAA,IAAA,KAAA,KAAA,IAAA,KAAA,YAAA,KAAA,YACA,OAAA,IAGA,KAAA,WAAA,WACA,MAAA,GAAA,UAAA,KAAA,KAAA,EAAA,SAAA,WAAA,EAAA,UAAA,KAAA,KAAA,EAAA,SAAA,WAKA,GAJA,QAAA,IAAA,mFAAA,KAAA,KAAA,EAAA,SAAA,WACA,IAQA,QACA,MAAA,KAIA,OCzCA,gBAAA,aAAA,SAAA,SAAA,SAAA,EAAA,EAAA,GAGA,GAAA,MAGA,GACA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAEA,aAAA,SAAA,GACA,IAAA,GAAA,KAAA,MAAA,OACA,GAAA,IAAA,KAAA,OAAA,GACA,MAAA,IAKA,UAAA,SAAA,GACA,IAAA,GAAA,KAAA,MAAA,OACA,GAAA,IAAA,EACA,MAAA,MAAA,OAAA,KAOA,EAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,MAAA,KAEA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAGA,IAAA,EAAA,aAAA,CACA,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,eAEA,KAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,OAAA,GAAA,cAAA,MAAA,EADA,KAMA,MAAA,GAAA,SAGA,MAAA,qBAAA,EAAA,wBAKA,EAAA,SAAA,EAAA,GACA,OAAA,GACA,IAAA,IACA,IAAA,IACA,EAAA,YAAA,EAAA,QAAA,EAAA,YAAA,EACA,MACA,KAAA,IACA,EAAA,QAAA,EACA,MACA,SACA,QAAA,IAAA,8CAAA,EAAA,KAAA,gCAGA,MAAA,GAAA,SAKA,GACA,QAAA,SAAA,EAAA,GACA,MAAA,GAAA,EAAA,IAEA,QAAA,SAAA,GACA,EAAA,KAKA,EAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,UAAA,EASA,OAPA,MAAA,EAAA,cACA,EAAA,MAAA,EAAA,EAAA,EAAA,GAEA,MAAA,EAAA,gBACA,EAAA,IAAA,EAAA,IAAA,EAAA,IAGA,EAAA,aAAA,IAGA,EAAA,SAAA,EAAA,EAAA,GAEA,OADA,EAAA,EAAA,cACA,EAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,YACA,KAAA,EACA,KACA,MAAA,EACA,EAAA,SAAA,EACA,EAAA,KAAA,EAAA,KAAA,KAAA,EAAA,KACA,MACA,KAAA,MACA,EAAA,EAAA,OAAA,IAKA,EAAA,SAAA,GAGA,OAAA,EAAA,aACA,IAAA,IACA,EAAA,EAAA,EAAA,KAAA,EAAA,IACA,MACA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,EAAA,IACA,MACA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,EAAA,IACA,MACA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,EAAA,OAMA,EAAA,SAAA,EAAA,EAAA,GAEA,MAAA,GAAA,SAAA,EAAA,KAAA,EAAA,UAAA,EAAA,IACA,EAKA,EAAA,UAAA,EAAA,GAMA,MALA,EAWA,QACA,SAAA,EAAA,SACA,YAAA,MCnJA,SAAA,EAAA,GAAA,gBAAA,SAAA,gBAAA,QAAA,QAAA,OAAA,QAAA,EAAA,SAAA,EAAA,GAAA,GAAA,SAAA,GAAA,IAAA,EAAA,SAAA,KAAA,IAAA,OAAA,2CAAA,OAAA,GAAA,IAAA,EAAA,IAAA,mBAAA,QAAA,OAAA,KAAA,SAAA,EAAA,GAAA,QAAA,GAAA,GAAA,GAAA,GAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,OAAA,aAAA,GAAA,EAAA,SAAA,IAAA,EAAA,IAAA,EAAA,UAAA,GAAA,EAAA,UAAA,GAAA,IAAA,GAAA,gBAAA,IAAA,EAAA,GAAA,EAAA,IAAA,GAAA,QAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,WAAA,GAAA,MAAA,GAAA,KAAA,EAAA,SAAA,EAAA,GAAA,QAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,IAAA,EAAA,SAAA,MAAA,GAAA,KAAA,EAAA,SAAA,GAAA,MAAA,KAAA,IAAA,GAAA,IAAA,gBAAA,GAAA,CAAA,GAAA,GAAA,KAAA,GAAA,MAAA,GAAA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,SAAA,GAAA,MAAA,GAAA,KAAA,EAAA,IAAA,IAAA,IAAA,QAAA,GAAA,EAAA,GAAA,MAAA,EAAA,EAAA,KAAA,IAAA,EAAA,WAAA,MAAA,GAAA,QAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAAA,OAAA,GAAA,KAAA,EAAA,MAAA,QAAA,SAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,QAAA,KAAA,EAAA,oBAAA,mBAAA,GAAA,GAAA,EAAA,oBAAA,OAAA,GAAA,GAAA,EAAA,QAAA,QAAA,KAAA,OAAA,eAAA,KAAA,SAAA,GAAA,IAAA,WAAA,YAAA,KAAA,QAAA,EAAA,QAAA,EAAA,MAAA,QAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,SAAA,GAAA,IAAA,EAAA,SAAA,GAAA,EAAA,QAAA,EAAA,QAAA,GAAA,OAAA,cAAA,EAAA,EAAA,aAAA,GAAA,gBAAA,GAAA,CAAA,IAAA,EAAA,SAAA,GAAA,EAAA,UAAA,GAAA,EAAA,SAAA,EAAA,MAAA,EAAA,KAAA,GAAA,EAAA,GAAA,KAAA,GAAA,EAAA,UAAA,GAAA,EAAA,MAAA,IAAA,GAAA,IAAA,EAAA,EAAA,OAAA,GAAA,MAAA,OAAA,GACA,QAAA,KAAA,OAAA,EAAA,QAAA,KAAA,OAAA,EAAA,QAAA,KAAA,IAAA,MAAA,GAAA,cAAA,MAAA,KAAA,QAAA,GAAA,EAAA,GAAA,MAAA,GAAA,SAAA,EAAA,UAAA,EAAA,SAAA,KAAA,EAAA,SAAA,EAAA,EAAA,WAAA,MAAA,EAAA,qBAAA,SAAA,IAAA,EAAA,YAAA,EAAA,cAAA,cAAA,UAAA,EAAA,QAAA,GAAA,GAAA,MAAA,GAAA,MAAA,OAAA,EAAA,aAAA,SAAA,IAAA,EAAA,KAAA,EAAA,QAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAAA,EAAA,KAAA,OAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,gBAAA,QAAA,EAAA,QAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,cAAA,GAAA,GAAA,IAAA,EAAA,GAAA,eAAA,QAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAA,IAAA,EAAA,SAAA,CAAA,GAAA,GAAA,QAAA,KAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,QAAA,OAAA,GAAA,OAAA,EAAA,SAAA,KAAA,IAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,QAAA,KAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,IAAA,EAAA,KAAA,QAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,qBAAA,EAAA,qBAAA,GAAA,KAAA,EAAA,iBAAA,EAAA,iBAAA,GAAA,OAAA,OAAA,UAAA,GAAA,GAAA,EAAA,SAAA,EAAA,GAAA,EAAA,OAAA,GAAA,GAAA,EAAA,QAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,SAAA,aAAA,WAAA,GAAA,GAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,UAAA,GAAA,aAAA,KAAA,EAAA,aAAA,EAAA,cAAA,QAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,cAAA,IAAA,SAAA,EAAA,MAAA,EAAA,EAAA,0BAAA,EAAA,EAAA,wBAAA,EAAA,KAAA,EAAA,QAAA,EAAA,IAAA,EAAA,GAAA,UAAA,OAAA,GAAA,SAAA,EAAA,QAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,KAAA,EAAA,EAAA,EAAA,GAAA,SAAA,GAAA,IAAA,IAAA,IAAA,EAAA,mDAAA,SAAA,EAAA,iBAAA,EAAA,GAAA,GAAA,gBAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,GAAA,UAAA,GAAA,GAAA,GAAA,EAAA,QAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,OAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,iBAAA,IAAA,EAAA,IAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,cAAA,KAAA,EAAA,EAAA,MAAA,EAAA,IAAA,GAAA,KAAA,IAAA,GAAA,KAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,MAAA,EAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,EAAA,SAAA,IAAA,SAAA,EAAA,EAAA,GAAA,EAAA,QAAA,GAAA,EAAA,GAAA,OAAA,IAAA,WAAA,MAAA,gBAAA,MAAA,KAAA,KAAA,IAAA,GAAA,MAAA,KAAA,aAAA,QAAA,GAAA,EAAA,GAAA,GAAA,IAAA,GAAA,MAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GAAA,cAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,GAAA,EAAA,GAAA,GAAA,EAAA,IAAA,GAAA,MAAA,EAAA,OAAA,GAAA,QAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,KAAA,EAAA,OAAA,GAAA,KAAA,IAAA,EAAA,EAAA,IAAA,GAAA,KAAA,EAAA,IAAA,MAAA,EAAA,QAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,KAAA,EAAA,SAAA,WAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,GAAA,YAAA,IAAA,GAAA,EAAA,IAAA,EAAA,UAAA,GAAA,IAAA,EAAA,IAAA,WAAA,IAAA,GAAA,EAAA,IAAA,EAAA,SAAA,GAAA,GAAA,SAAA,EAAA,MAAA,GAAA,EAAA,IAAA,EAAA,UAAA,GAAA,IAAA,EAAA,GAAA,YAAA,IAAA,GAAA,EAAA,IAAA,EAAA,SAAA,GAAA,GAAA,SAAA,EAAA,IAAA,OAAA,GAAA,QAAA,GAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,YAAA,EAAA,aAAA,EAAA,GAAA,GAAA,EAAA,eAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,IAAA,GAAA,GAAA,MAAA,EAAA,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,MAAA,KAAA,EAAA,EAAA,MAAA,IAAA,GAAA,KAAA,GAAA,MAAA,EAAA,GAAA,IAAA,EAAA,qBAAA,IAAA,EAAA,MAAA,IAAA,EAAA,WAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAA,WAAA,EAAA,GAAA,KAAA,QAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,GAAA,IAAA,EAAA,cAAA,EAAA,EAAA,MAAA,QAAA,GAAA,EAAA,IAAA,SAAA,IAAA,EAAA,MAAA,QAAA,IAAA,KAAA,EAAA,MAAA,SAAA,GAAA,KAAA,EAAA,GAAA,GAAA,OAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,GAAA,GAAA,SAAA,GAAA,GAAA,GAAA,IAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,QAAA,GAAA,SAAA,EAAA,MAAA,SAAA,KAAA,EAAA,MAAA,UAAA,EAAA,MAAA,QAAA,EAAA,EAAA,IAAA,GAAA,QAAA,OAAA,GAAA,QAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,IAAA,GAAA,UAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,QAAA,KAAA,MAAA,YAAA,WAAA,GAAA,SAAA,GAAA,EAAA,MAAA,QAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,SAAA,GAAA,EAAA,UAAA,GAAA,CAAA,OAAA,KAAA,EAAA,QAAA,EAAA,MAAA,GAAA,EAAA,QAAA,GAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GAAA,QAAA,OAAA,GAAA,MAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,GAAA,MAAA,GAAA,QAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,SAAA,GAAA,QAAA,EAAA,EAAA,YAAA,EAAA,MAAA,MAAA,EAAA,WAAA,EAAA,SAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,MAAA,KAAA,WAAA,EAAA,UAAA,MAAA,EAAA,WAAA,EAAA,OAAA,WAAA,EAAA,OAAA,WAAA,EAAA,WAAA,EAAA,MAAA,EAAA,MAAA,QAAA,EAAA,MAAA,YAAA,IAAA,EAAA,WAAA,UAAA,IAAA,SAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,WAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,eAAA,EAAA,EAAA,UAAA,EAAA,WAAA,GAAA,SAAA,EAAA,IAAA,EAAA,WAAA,EAAA,QAAA,iBAAA,EAAA,WAAA,EAAA,SAAA,SAAA,EAAA,OAAA,WAAA,EAAA,SAAA,EAAA,SAAA,GAAA,EAAA,UAAA,EAAA,SAAA,GAAA,EAAA,UAAA,EAAA,SAAA,KAAA,KAAA,IAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,KAAA,GAAA,CAAA,SAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,KAAA,EAAA,OAAA,QAAA,CAAA,GAAA,SAAA,IAAA,GAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,GAAA,MAAA,IAAA,EAAA,cAAA,GAAA,YAAA,SAAA,EAAA,EAAA,EAAA,UAAA,KAAA,EAAA,QAAA,OAAA,CAAA,EAAA,UAAA,KAAA,EAAA,EAAA,QAAA,EAAA,GAAA,OAAA,EAAA,aAAA,IAAA,EAAA,QAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,WAAA,EAAA,GAAA,SAAA,EAAA,KAAA,WAAA,GAAA,EAAA,IAAA,OAAA,EAAA,SAAA,KAAA,IAAA,GAAA,EAAA,MAAA,EAAA,EAAA,EAAA,KAAA,KAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,KAAA,EAAA,GAAA,EAAA,MAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,UAAA,GAAA,WAAA,EAAA,EAAA,KAAA,QAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,CAAA,KAAA,IAAA,GAAA,GAAA,EAAA,EAAA,UAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,QAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,EAAA,GAAA,QAAA,GAAA,IAAA,EAAA,EAAA,SAAA,GAAA,GAAA,UAAA,GAAA,CAAA,EAAA,EAAA,OAAA,SAAA,GAAA,EAAA,KAAA,IAAA,GAAA,IAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,GAAA,EAAA,QAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,WAAA,OAAA,iBAAA,GAAA,OAAA,EAAA,WAAA,GAAA,EAAA,OAAA,CAAA,KAAA,GAAA,GAAA,IAAA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,UAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,IAAA,EAAA,OAAA,GAAA,IAAA,EAAA,OAAA,GAAA,WAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,YAAA,GAAA,KAAA,IAAA,EAAA,EAAA,SAAA,KAAA,EAAA,MAAA,EAAA,UAAA,GAAA,KAAA,EAAA,QAAA,GAAA,kBAAA,GAAA,mBAAA,EAAA,gBAAA,EAAA,UAAA,IAAA,IAAA,SAAA,EAAA,SAAA,UAAA,YAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,cAAA,IAAA,EAAA,KAAA,OAAA,OAAA,GAAA,OAAA,KAAA,GAAA,GAAA,KAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,OAAA,CAAA,IAAA,EAAA,MAAA,KAAA,KAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,GAAA,IAAA,EAAA,OAAA,GAAA,EAAA,YAAA,GAAA,EAAA,IAAA,EAAA,WAAA,GAAA,EAAA,IAAA,QAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,EAAA,KAAA,eAAA,EAAA,EAAA,IAAA,GAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,EAAA,MAAA,MAAA,EAAA,OAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,KAAA,QAAA,EAAA,KAAA,MAAA,KAAA,EAAA,GAAA,EAAA,GAAA,MAAA,EAAA,OAAA,GAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,SAAA,EAAA,SAAA,EAAA,KAAA,UAAA,KAAA,EAAA,KAAA,KAAA,EAAA,KAAA,UAAA,KAAA,EAAA,KAAA,MAAA,OAAA,EAAA,KAAA,QACA,QAAA,GAAA,GAAA,MAAA,UAAA,EAAA,GAAA,gBAAA,KAAA,EAAA,EAAA,EAAA,IAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,cAAA,MAAA,OAAA,IAAA,EAAA,WAAA,GAAA,KAAA,EAAA,EAAA,MAAA,MAAA,EAAA,IAAA,EAAA,EAAA,MAAA,IAAA,KAAA,EAAA,GAAA,EAAA,QAAA,QAAA,KAAA,EAAA,GAAA,EAAA,QAAA,KAAA,IAAA,QAAA,GAAA,EAAA,EAAA,EAAA,GAAA,QAAA,GAAA,GAAA,GAAA,EAAA,OAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,OAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,gBAAA,IAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,QAAA,EAAA,UAAA,QAAA,GAAA,EAAA,IAAA,KAAA,EAAA,GAAA,MAAA,EAAA,IAAA,EAAA,OAAA,GAAA,EAAA,UAAA,MAAA,EAAA,MAAA,EAAA,KAAA,QAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,aAAA,eAAA,KAAA,IAAA,GAAA,SAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GAAA,EAAA,GAAA,OAAA,IAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,QAAA,GAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,UAAA,MAAA,EAAA,IAAA,EAAA,QAAA,SAAA,IAAA,EAAA,EAAA,UAAA,EAAA,kBAAA,gBAAA,IAAA,EAAA,IAAA,IAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,KAAA,GAAA,CAAA,EAAA,QAAA,EAAA,OAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,IAAA,GAAA,CAAA,IAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,IAAA,EAAA,IAAA,EAAA,QAAA,GAAA,EAAA,IAAA,OAAA,QAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,IAAA,IAAA,GAAA,WAAA,EAAA,EAAA,eAAA,EAAA,WAAA,EAAA,KAAA,EAAA,EAAA,QAAA,GAAA,GAAA,EAAA,eAAA,KAAA,EAAA,EAAA,eAAA,IAAA,IAAA,GAAA,GAAA,EAAA,aAAA,EAAA,EAAA,WAAA,EAAA,EAAA,WAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,MAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,IAAA,EAAA,CAAA,GAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,KAAA,IAAA,EAAA,IAAA,IAAA,GAAA,GAAA,EAAA,EAAA,MAAA,KAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA,KAAA,EAAA,EAAA,EAAA,GAAA,EAAA,MAAA,IAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,OAAA,GAAA,KAAA,EAAA,GAAA,GAAA,EAAA,UAAA,EAAA,EAAA,OAAA,KAAA,EAAA,EAAA,GAAA,MAAA,GAAA,OAAA,MAAA,cAAA,MAAA,EAAA,EAAA,sBAAA,EAAA,OAAA,IAAA,OAAA,MAAA,UAAA,KAAA,GAAA,QAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,QAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,gBAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,SAAA,IAAA,GAAA,WAAA,EAAA,KAAA,GAAA,EAAA,EAAA,OAAA,KAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,QAAA,GAAA,GAAA,MAAA,GAAA,SAAA,GAAA,EAAA,IAAA,EAAA,UAAA,EAAA,YAFA,GAAA,MAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,eAAA,KAAA,EAAA,EAAA,SAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,MAAA,IAAA,GAAA,GAAA,KAAA,EAAA,IAAA,GAAA,qCAAA,GAAA,QAAA,GAAA,eAAA,GAAA,SAAA,EAAA,GAAA,MAAA,GAAA,cAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,YAAA,EAAA,SAAA,GAAA,OAAA,EAAA,QAAA,WAAA,MAAA,GAAA,KAAA,OAAA,IAAA,SAAA,GAAA,MAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KAAA,QAAA,KAAA,GAAA,EAAA,KAAA,OAAA,UAAA,SAAA,GAAA,GAAA,GAAA,EAAA,MAAA,KAAA,cAAA,EAAA,OAAA,GAAA,WAAA,KAAA,EAAA,QAAA,KAAA,QAAA,GAAA,KAAA,SAAA,EAAA,GAAA,MAAA,GAAA,KAAA,KAAA,EAAA,IAAA,IAAA,SAAA,GAAA,MAAA,MAAA,UAAA,EAAA,IAAA,KAAA,SAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,OAAA,MAAA,WAAA,MAAA,MAAA,UAAA,EAAA,MAAA,KAAA,aAAA,MAAA,WAAA,MAAA,MAAA,GAAA,IAAA,KAAA,WAAA,MAAA,MAAA,GAAA,KAAA,GAAA,SAAA,GAAA,GAAA,GAAA,KAAA,OAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,MAAA,UAAA,GAAA,GAAA,EAAA,GAAA,KAAA,SAAA,IAAA,WAAA,MAAA,MAAA,YAAA,KAAA,YAAA,OAAA,KAAA,EAAA,KAAA,EAAA,KAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,GAAA,OAAA,WAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,UAAA,OAAA,GAAA,CAAA,KAAA,iBAAA,KAAA,EAAA,EAAA,EAAA,UAAA,OAAA,KAAA,gBAAA,IAAA,EAAA,WAAA,KAAA,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,EAAA,EAAA,IAAA,GAAA,OAAA,EAAA,UAAA,IAAA,IAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,cAAA,KAAA,EAAA,EAAA,QAAA,MAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,QAAA,GAAA,MAAA,EAAA,GAAA,EAAA,cAAA,GAAA,KAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,SAAA,IAAA,EAAA,GAAA,GAAA,OAAA,IAAA,EAAA,QAAA,QAAA,UAAA,EAAA,KAAA,UAAA,QAAA,MAAA,IAAA,SAAA,EAAA,MAAA,SAAA,GAAA,KAAA,IAAA,OAAA,IAAA,KAAA,aAAA,WAAA,SAAA,GAAA,MAAA,aAAA,EAAA,KAAA,IAAA,QAAA,MAAA,QAAA,SAAA,SAAA,GAAA,MAAA,OAAA,GAAA,IAAA,EAAA,QAAA,UAAA,SAAA,GAAA,OAAA,EAAA,QAAA,IAAA,EAAA,WAAA,GAAA,GAAA,GAAA,cAAA,SAAA,GAAA,MAAA,WAAA,EAAA,KAAA,IAAA,EAAA,UAAA,EAAA,SAAA,IAAA,EAAA,EAAA,cAAA,EAAA,KAAA,EAAA,YAAA,UAAA,kBAAA,GAAA,GAAA,cAAA,SAAA,GAAA,GAAA,EAAA,KAAA,IAAA,GAAA,OAAA,CAAA,QAAA,GAAA,KAAA,SAAA,GAAA,MAAA,OAAA,EAAA,EAAA,GAAA,gBAAA,IAAA,kBAAA,GAAA,EAAA,EAAA,KAAA,KAAA,eAAA,IAAA,WAAA,SAAA,GAAA,GAAA,GAAA,EAAA,IAAA,GAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,QAAA,eAAA,EAAA,EAAA,cAAA,UAAA,EAAA,KAAA,EAAA,EAAA,KAAA,YAAA,GAAA,WAAA,YAAA,IAAA,EAAA,KAAA,UAAA,SAAA,GAAA,MAAA,GAAA,QAAA,GAAA,OAAA,QAAA,GAAA,KAAA,SAAA,SAAA,EAAA,GAAA,MAAA,GAAA,UAAA,EAAA,SAAA,gBAAA,EAAA,eAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,GAAA,KAAA,GAAA,SAAA,KAAA,IAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,GAAA,KAAA,EAAA,UAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,IAAA,KAAA,GAAA,SAAA,KAAA,IAAA,GAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,IAAA,KAAA,EAAA,KAAA,OAAA,IAAA,KAAA,SAAA,GAAA,MAAA,OAAA,EAAA,IAAA,EAAA,IAAA,QAAA,GAAA,KAAA,UAAA,SAAA,EAAA,GAAA,GAAA,GAAA,KAAA,OAAA,OAAA,IAAA,EAAA,OAAA,IAAA,EAAA,MAAA,EAAA,gBAAA,IAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,GAAA,QAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,MAAA,SAAA,EAAA,GAAA,IAAA,GAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,OAAA,GAAA,OAAA,EAAA,GAAA,KAAA,SAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,OAAA,IAAA,IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,MAAA,GAAA,EAAA,KAAA,OAAA,KAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,MAAA,GAAA,EAAA,KAAA,EAAA,OAAA,GAAA,SAAA,IAAA,KAAA,EAAA,MAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,CAAA,OAAA,gBAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,EAAA,EAAA,KAAA,UAAA,GAAA,EAAA,WAAA,MAAA,GAAA,MAAA,GAAA,KAAA,EAAA,OAAA,EAAA,KAAA,cAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,GAAA,QAAA,IAAA,KAAA,IAAA,QAAA,IAAA,EAAA,KAAA,gEAAA,MAAA,KAAA,SAAA,EAAA,GAAA,EAAA,WAAA,EAAA,KAAA,EAAA,eAAA,IAAA,IAAA,SAAA,GAAA,QAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,KAAA,EAAA,EAAA,eAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,SAAA,gBAAA,KAAA,GAAA,IAAA,GAAA,IAAA,GAAA,KAAA,EAAA,MAAA,EAAA,KAAA,GAAA,EAAA,CAAA,GAAA,KAAA,IAAA,EAAA,GAAA,KAAA,IAAA,GAAA,EAAA,EAAA,IAAA,GAAA,IAAA,EAAA,CAAA,GAAA,EAAA,EAAA,eAAA,IAAA,IAAA,EAAA,WAAA,MAAA,EAAA,IAAA,EAAA,KAAA,EAAA,MAAA,GAAA,KAAA,GAAA,MAAA,IAAA,EAAA,gBAAA,EAAA,EAAA,cAAA,eAAA,KAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,MAAA,GAAA,KAAA,GAAA,MAAA,CAAA,GAAA,EAAA,GAAA,MAAA,GAAA,MAAA,EAAA,EAAA,qBAAA,IAAA,CAAA,KAAA,EAAA,EAAA,KAAA,EAAA,uBAAA,MAAA,GAAA,MAAA,EAAA,EAAA,uBAAA,IAAA,EAAA,GAAA,EAAA,OAAA,IAAA,EAAA,KAAA,IAAA,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,IAAA,GAAA,WAAA,EAAA,SAAA,cAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,aAAA,OAAA,EAAA,EAAA,QAAA,GAAA,QAAA,EAAA,aAAA,KAAA,GAAA,EAAA,QAAA,EAAA,MAAA,EAAA,EAAA,OAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,KAAA,IAAA,EAAA,EAAA,aAAA,EAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,IAAA,MAAA,GAAA,MAAA,EAAA,EAAA,iBAAA,IAAA,EAAA,MAAA,IAAA,QAAA,GAAA,EAAA,gBAAA,QAAA,MAAA,GAAA,EAAA,QAAA,GAAA,MAAA,EAAA,EAAA,GAAA,QAAA,KAAA,QAAA,GAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,KAAA,EAAA,mBAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,OAAA,GAAA,QAAA,GAAA,GAAA,MAAA,GAAA,IAAA,EAAA,EAAA,QAAA,GAAA,GAAA,GAAA,GAAA,EAAA,cAAA,MAAA,KAAA,QAAA,EAAA,GAAA,MAAA,GAAA,OAAA,EAAA,QAAA,EAAA,YAAA,EAAA,WAAA,YAAA,GAAA,EAAA,MAAA,QAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,MAAA,KAAA,EAAA,EAAA,OAAA,KAAA,EAAA,WAAA,EAAA,IAAA,EAAA,QAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,UAAA,IAAA,EAAA,YAAA,EAAA,aAAA,KAAA,EAAA,aAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,aAAA,GAAA,IAAA,EAAA,MAAA,EAAA,OAAA,GAAA,EAAA,GAAA,QAAA,GAAA,GAAA,MAAA,UAAA,GAAA,GAAA,GAAA,EAAA,SAAA,aAAA,OAAA,UAAA,GAAA,EAAA,OAAA,GAAA,QAAA,GAAA,GAAA,MAAA,UAAA,GAAA,GAAA,GAAA,EAAA,SAAA,aAAA,QAAA,UAAA,GAAA,WAAA,IAAA,EAAA,OAAA,GAAA,QAAA,GAAA,GAAA,MAAA,GAAA,SAAA,GAAA,MAAA,IAAA,EAAA,EAAA,SAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,KAAA,EAAA,OAAA,GAAA,EAAA,EAAA,OAAA,KAAA,EAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,GAAA,EAAA,SAAA,QAAA,GAAA,GAAA,MAAA,IAAA,mBAAA,GAAA,sBAAA,EAAA,QAAA,MAAA,QAAA,GAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,GAAA,KAAA,OAAA,GAAA,QAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,eeAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,SAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,IAAA,GAAA,6HAAA,GAAA,sBAAA,GAAA,mCAAA,GAAA,GAAA,QAAA,IAAA,MAAA,GAAA,MAAA,GAAA,KAAA,GAAA,OAAA,GAAA,gBAAA,GAAA,2DAAA,GAAA,OAAA,GAAA,OAAA,GAAA,KAAA,GAAA,wFAAA,GAAA,eAAA,GAAA,GAAA,QAAA,GAAA,IAAA,KAAA,GAAA,GAAA,QAAA,IAAA,GAAA,8BAAA,GAAA,KAAA,KAAA,GAAA,GAAA,QAAA,IAAA,GAAA,KAAA,GAAA,KAAA,GAAA,GAAA,QAAA,IAAA,GAAA,WAAA,GAAA,IAAA,GAAA,KAAA,GAAA,GAAA,QAAA,IAAA,GAAA,iBAAA,GAAA,OAAA,KAAA,GAAA,GAAA,QAAA,IAAA,GAAA,GAAA,QAAA,IAAA,GAAA,KAAA,IAAA,GAAA,GAAA,QAAA,MAAA,GAAA,KAAA,MAAA,GAAA,QAAA,QAAA,GAAA,KAAA,IAAA,GAAA,QAAA,KAAA,GAAA,QAAA,IAAA,MAAA,KAAA,KAAA,GAAA,QAAA,IAAA,IAAA,OAAA,GAAA,QAAA,IAAA,IAAA,MAAA,GAAA,QAAA,yDAAA,GAAA,+BAAA,GAAA,cAAA,GAAA,aAAA,GAAA,SAAA,KAAA,KAAA,GAAA,QAAA,OAAA,GAAA,KAAA,KAAA,aAAA,GAAA,QAAA,IAAA,GAAA,mDAAA,GAAA,mBAAA,GAAA,mBAAA,MAAA,GAAA,sCAAA,GAAA,SAAA,GAAA,yBAAA,GAAA,mCAAA,GAAA,OAAA,GAAA,QAAA,GAAA,GAAA,QAAA,qBAAA,GAAA,MAAA,GAAA,OAAA,MAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,KAAA,EAAA,KAAA,OAAA,KAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,aAAA,EAAA,OAAA,OAAA,aAAA,GAAA,GAAA,MAAA,KAAA,EAAA,QAAA,GAAA,WAAA,IAAA,KAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,YAAA,EAAA,YAAA,EAAA,EAAA,WAAA,QAAA,SAAA,MAAA,IAAA,GAAA,MAAA,EAAA,OAAA,SAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,KAAA,KAAA,SAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,MAAA,SAAA,GAAA,GAAA,GAAA,IAAA,EAAA,eAAA,GAAA,eAAA,OAAA,GAAA,SAAA,EAAA,UAAA,GAAA,EAAA,EAAA,YAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,eAAA,EAAA,CAAA,OAAA,KAAA,GAAA,IAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,YAAA,GAAA,IAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,iBAAA,SAAA,IAAA,GAAA,EAAA,aAAA,EAAA,YAAA,WAAA,KAAA,GAAA,EAAA,GAAA,EAAA,WAAA,EAAA,SAAA,GAAA,MAAA,GAAA,UAAA,KAAA,EAAA,aAAA,eAAA,EAAA,qBAAA,EAAA,SAAA,GAAA,MAAA,GAAA,YAAA,EAAA,cAAA,MAAA,EAAA,qBAAA,KAAA,SAAA,EAAA,uBAAA,GAAA,KAAA,EAAA,wBAAA,EAAA,QAAA,EAAA,SAAA,GAAA,MAAA,GAAA,YAAA,GAAA,GAAA,GAAA,EAAA,oBAAA,EAAA,kBAAA,GAAA,SAAA,EAAA,SAAA,EAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,gBAAA,EAAA,CAAA,GAAA,GAAA,EAAA,eAAA,EAAA,OAAA,IAAA,EAAA,YAAA,QAAA,EAAA,OAAA,GAAA,SAAA,GAAA,GAAA,GAAA,EAAA,QAAA,GAAA,GAAA,OAAA,UAAA,GAAA,MAAA,GAAA,aAAA,QAAA,YAAA,GAAA,KAAA,GAAA,EAAA,OAAA,GAAA,SAAA,GAAA,GAAA,GAAA,EAAA,QAAA,GAAA,GAAA,OAAA,UAAA,GAAA,GAAA,GAAA,mBAAA,GAAA,kBAAA,EAAA,iBAAA,KAAA,OAAA,IAAA,EAAA,QAAA,KAAA,EAAA,KAAA,IAAA,EAAA,qBAAA,SAAA,EAAA,GAAA,MAAA,mBAAA,GAAA,qBAAA,EAAA,qBAAA,GAAA,EAAA,IAAA,EAAA,iBAAA,GAAA,QAAA,SAAA,EAAA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,EAAA,qBAAA,EAAA,IAAA,MAAA,EAAA,CAAA,KAAA,EAAA,EAAA,MAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,OAAA,GAAA,MAAA,IAAA,EAAA,KAAA,MAAA,EAAA,wBAAA,SAAA,EAAA,GAAA,MAAA,GAAA,EAAA,uBAAA,GAAA,QAAA,KAAA,MAAA,EAAA,IAAA,GAAA,KAAA,EAAA,qBAAA,EAAA,SAAA,GAAA,EAAA,YAAA,GAAA,UAAA,UAAA,EAAA,qBAAA,EAAA,iEAAA,EAAA,iBAAA,wBAAA,QAAA,EAAA,KAAA,SAAA,GAAA,gBAAA,EAAA,iBAAA,cAAA,QAAA,EAAA,KAAA,MAAA,GAAA,aAAA,GAAA,KAAA,EAAA,iBAAA,QAAA,EAAA,MAAA,QAAA,EAAA,KAAA,MAAA,EAAA,iBAAA,YAAA,QAAA,EAAA,KAAA,YAAA,EAAA,iBAAA,KAAA,EAAA,MAAA,QAAA,EAAA,KAAA,cAAA,EAAA,SAAA,GAAA,GAAA,GAAA,EAAA,cAAA,QAAA,GAAA,aAAA,OAAA,UAAA,EAAA,YAAA,GAAA,aAAA,OAAA,KAAA,EAAA,iBAAA,YAAA,QAAA,EAAA,KAAA,OAAA,GAAA,eAAA,EAAA,iBAAA,YAAA,QAAA,EAAA,KAAA,WAAA,aAAA,EAAA,iBAAA,QAAA,EAAA,KAAA,YAAA,EAAA,gBAAA,GAAA,KAAA,EAAA,EAAA,SAAA,EAAA,uBAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,SAAA,GAAA,EAAA,kBAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,aAAA,EAAA,KAAA,KAAA,MAAA,EAAA,EAAA,QAAA,GAAA,QAAA,EAAA,KAAA,MAAA,EAAA,EAAA,QAAA,GAAA,QAAA,EAAA,KAAA,MAAA,EAAA,GAAA,KAAA,EAAA,yBAAA,EAAA,GAAA,GAAA,KAAA,EAAA,UAAA,SAAA,EAAA,GAAA,GAAA,GAAA,IAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,KAAA,MAAA,GAAA,IAAA,EAAA,YAAA,EAAA,SAAA,EAAA,SAAA,GAAA,EAAA,yBAAA,GAAA,EAAA,wBAAA,MAAA,SAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,YAAA,GAAA,IAAA,EAAA,OAAA,CAAA,QAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,IAAA,EAAA,MAAA,IAAA,EAAA,CAAA,IAAA,IAAA,EAAA,yBAAA,EAAA,uBAAA,OAAA,GAAA,GAAA,GAAA,EAAA,eAAA,MAAA,EAAA,eAAA,GAAA,EAAA,wBAAA,GAAA,EAAA,EAAA,IAAA,EAAA,cAAA,EAAA,wBAAA,KAAA,EAAA,IAAA,GAAA,EAAA,gBAAA,GAAA,EAAA,EAAA,GAAA,GAAA,IAAA,GAAA,EAAA,ggBAAA,SAAA,EAAA,GAAA,IAAA,EAAA,eAAA,KAAA,GAAA,EAAA,GAAA,EAAA,EAAA,QAAA,GAAA,aAAA,EAAA,kBAAA,GAAA,GAAA,EAAA,KAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,GAAA,EAAA,mBAAA,EAAA,UAAA,KAAA,EAAA,SAAA,SAAA,MAAA,GAAA,MAAA,IAAA,MAAA,GAAA,EAAA,EAAA,MAAA,IAAA,OAAA,GAAA,EAAA,SAAA,SAAA,EAAA,GAAA,OAAA,EAAA,eAAA,KAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,KAAA,SAAA,EAAA,IAAA,EAAA,eAAA,KAAA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,WAAA,EAAA,eAAA,EAAA,GAAA,EAAA,KAAA,EAAA,WAAA,EAAA,eAAA,EAAA,EAAA,GAAA,GAAA,MAAA,OAAA,UAAA,EAAA,EAAA,EAAA,aAAA,EAAA,EAAA,aAAA,IAAA,EAAA,EAAA,iBAAA,KAAA,EAAA,UAAA,EAAA,MAAA,MAAA,EAAA,MAAA,SAAA,GAAA,KAAA,IAAA,OAAA,0CAAA,IAAA,EAAA,WAAA,SAAA,GAAA,GAAA,GAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,GAAA,EAAA,iBAAA,GAAA,EAAA,YAAA,EAAA,MAAA,GAAA,EAAA,KAAA,GAAA,EAAA,CAAA,KAAA,EAAA,EAAA,MAAA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,MAAA,KAAA,EAAA,OAAA,EAAA,GAAA,GAAA,MAAA,GAAA,KAAA,GAAA,EAAA,EAAA,QAAA,SAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,KAAA,EAAA,CAAA,GAAA,gBAAA,GAAA,YAAA,MAAA,GAAA,WAAA,KAAA,EAAA,EAAA,WAAA,EAAA,EAAA,EAAA,YAAA,GAAA,EAAA,OAAA,IAAA,IAAA,GAAA,IAAA,EAAA,MAAA,GAAA,cAAA,MAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,WAAA,YAAA,GAAA,aAAA,EAAA,MAAA,GAAA,cAAA,QAAA,UAAA,KAAA,IAAA,aAAA,OAAA,GAAA,KAAA,IAAA,cAAA,KAAA,IAAA,kBAAA,OAAA,GAAA,KAAA,IAAA,oBAAA,WAAA,KAAA,SAAA,GAAA,MAAA,GAAA,GAAA,EAAA,GAAA,QAAA,GAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,QAAA,GAAA,IAAA,OAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,GAAA,KAAA,EAAA,MAAA,EAAA,IAAA,MAAA,SAAA,GAAA,MAAA,GAAA,GAAA,EAAA,GAAA,cAAA,QAAA,EAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,SAAA,EAAA,IAAA,QAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,QAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,GAAA,OAAA,SAAA,GAAA,GAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,OAAA,IAAA,MAAA,KAAA,EAAA,IAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,KAAA,KAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,QAAA,IAAA,EAAA,OAAA,GAAA,EAAA,UAAA,EAAA,GAAA,EAAA,GAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,QAAA,IAAA,SAAA,GAAA,GAAA,GAAA,EAAA,QAAA,GAAA,IAAA,aAAA,OAAA,MAAA,EAAA,WAAA,OAAA,GAAA,SAAA,GAAA,MAAA,GAAA,UAAA,EAAA,SAAA,gBAAA,IAAA,MAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,IAAA,OAAA,KAAA,EAAA,GAAA,QAAA,MAAA,GAAA,IAAA,EAAA,IAAA,GAAA,SAAA,EAAA,EAAA,SAAA,GAAA,MAAA,GAAA,KAAA,gBAAA,GAAA,WAAA,EAAA,WAAA,mBAAA,GAAA,cAAA,EAAA,acAAA,kBAAA,EAAA,EAAA,WAAA,EAAA,GAAA,EAAA,SAAA,cAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,GAAA,EAAA,CAAA,KAAA,GAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,SAAA,gBAAA,EAAA,IAAA,EAAA,SAAA,OAAA,CAAA,GAAA,EAAA,SAAA,IAAA,GAAA,cAAA,OAAA,EAAA,GAAA,GAAA,EAAA,EAAA,WAAA,EAAA,WAAA,GAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,WAAA,GAAA,IAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,OAAA,GAAA,IAAA,EAAA,YAAA,GAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,IAAA,IAAA,GAAA,EAAA,KAAA,EAAA,QAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OAAA,IAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,EAAA,SAAA,gBAAA,EAAA,IAAA,EAAA,cAAA,IAAA,KAAA,EAAA,KAAA,EAAA,QAAA,IAAA,EAAA,IAAA,IAAA,MAAA,MAAA,IAAA,EAAA,IAAA,GAAA,EAAA,IAAA,GAAA,EAAA,GAAA,KAAA,OAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,QAAA,IAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,MAAA,uBAAA,EAAA,OAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,WAAA,eAAA,EAAA,eAAA,EAAA,SAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,OAAA,KAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,SAAA,GAAA,MAAA,GAAA,EAAA,EAAA,KAAA,IAAA,SAAA,IAAA,EAAA,SAAA,GAAA,GAAA,MAAA,KAAA,EAAA,EAAA,EAAA,QAAA,GAAA,MAAA,OAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,MAAA,EAAA,EAAA,OAAA,MAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,GAAA,MAAA,SAAA,EAAA,EAAA,GAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,MAAA,EAAA,SAAA,IAAA,EAAA,SAAA,GAAA,MAAA,UAAA,GAAA,MAAA,GAAA,EAAA,GAAA,OAAA,KAAA,SAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,QAAA,GAAA,IAAA,SAAA,GAAA,OAAA,EAAA,aAAA,EAAA,WAAA,EAAA,IAAA,QAAA,GAAA,MAAA,KAAA,EAAA,SAAA,GAAA,MAAA,IAAA,KAAA,GAAA,KAAA,EAAA,MAAA,qBAAA,GAAA,EAAA,EAAA,QAAA,GAAA,IAAA,cAAA,SAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,aAAA,aAAA,EAAA,aAAA,QAAA,MAAA,GAAA,EAAA,cAAA,IAAA,GAAA,IAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,aAAA,IAAA,EAAA,SAAA,QAAA,KAAA,OAAA,SAAA,GAAA,GAAA,GAAA,EAAA,UAAA,EAAA,SAAA,IAAA,OAAA,IAAA,EAAA,MAAA,KAAA,EAAA,IAAA,KAAA,SAAA,GAAA,MAAA,KAAA,GAAA,MAAA,SAAA,GAAA,MAAA,KAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,OAAA,EAAA,WAAA,QAAA,SAAA,GAAA,MAAA,GAAA,YAAA,GAAA,SAAA,SAAA,GAAA,MAAA,GAAA,YAAA,GAAA,QAAA,SAAA,GAAA,GAAA,GAAA,EAAA,SAAA,aAAA,OAAA,UAAA,KAAA,EAAA,SAAA,WAAA,KAAA,EAAA,UAAA,SAAA,SAAA,GAAA,MAAA,GAAA,YAAA,EAAA,WAAA,cAAA,EAAA,YAAA,GAAA,MAAA,SAAA,GAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,EAAA,YAAA,GAAA,EAAA,SAAA,EAAA,OAAA,CAAA,QAAA,GAAA,OAAA,SAAA,GAAA,OAAA,EAAA,QAAA,MAAA,IAAA,OAAA,SAAA,GAAA,MAAA,IAAA,KAAA,EAAA,WAAA,MAAA,SAAA,GAAA,MAAA,IAAA,KAAA,EAAA,WAAA,OAAA,SAAA,GAAA,GAAA,GAAA,EAAA,SAAA,aAAA,OAAA,UAAA,GAAA,WAAA,EAAA,MAAA,WAAA,GAAA,KAAA,SAAA,GAAA,GAAA,EAAA,OAAA,UAAA,EAAA,SAAA,eAAA,SAAA,EAAA,OAAA,OAAA,EAAA,EAAA,aAAA,UAAA,SAAA,EAAA,gBAAA,MAAA,EAAA,WAAA,OAAA,KAAA,KAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,EAAA,KAAA,KAAA,EAAA,SAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,OAAA,KAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,OAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,GAAA,EAAA,KAAA,EAAA,OAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,OAAA,OAAA,EAAA,QAAA,IAAA,EAAA,QAAA,EAAA,KAAA,KAAA,OAAA,EAAA,UAAA,EAAA,MAAA,EAAA,UAAA,EAAA,OAAA,GAAA,EAAA,QAAA,GAAA,EAAA,EAAA,KAAA,KAAA,QAAA,EAAA,OAAA,GAAA,EAAA,QAAA,GAAA,EAAA,EAAA,OAAA,GAAA,UAAA,EAAA,QAAA,EAAA,QAAA,EAAA,WAAA,GAAA,GAAA,EAAA,EAAA,SAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,UAAA,GAAA,GAAA,IAAA,EAAA,GAAA,KAAA,OAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,GAAA,EAAA,KAAA,OAAA,GAAA,GAAA,EAAA,GAAA,KAAA,MAAA,EAAA,EAAA,QAAA,EAAA,MAAA,MAAA,EAAA,KAAA,EAAA,GAAA,QAAA,GAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,KAAA,IAAA,GAAA,SAAA,EAAA,GAAA,GAAA,KAAA,KAAA,EAAA,MAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,QAAA,EAAA,MAAA,MAAA,EAAA,KAAA,EAAA,QAAA,IAAA,EAAA,EAAA,MAAA,EAAA,QAAA,KAAA,EAAA,MAAA,MAAA,GAAA,EAAA,OAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,GAAA,MAAA,IAAA,EAAA,EAAA,QAAA,SAAA,EAAA,GAAA,GAAA,GAAA,KAAA,KAAA,EAAA,EAAA,EAAA,IAAA,KAAA,EAAA,CAAA,IAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAA,EAAA,MAAA,IAAA,EAAA,EAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,kBAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,UAAA,EAAA,IAAA,EAAA,MAAA,IAAA,EAAA,OAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,MAAA,GAAA,EAAA,OAAA,GAAA,QAAA,EAAA,EAAA,IAAA,MAAA,EAAA,SAAA,IAAA,EAAA,UAAA,GAAA,EAAA,SAAA,EAAA,GAAA,MAAA,CAAA,GAAA,GAAA,EAAA,KAAA,GAAA,EAAA,QAAA,GAAA,QAAA,GAAA,IAAA,QAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,EAAA,YAAA,EAAA,EAAA,MAAA,EAAA,QAAA,MAAA,QAAA,IAAA,EAAA,GAAA,aAAA,KAAA,GAAA,EAAA,EAAA,OAAA,MAAA,EAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,QAAA,IAAA,EAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,QAAA,GAAA,QAAA,GAAA,IAAA,GAAA,KAAA,EAAA,GAAA,OAAA,EAAA,EAAA,aAAA,IAAA,CAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,GAAA,MAAA,EAAA,GAAA,CAAA,QAAA,OAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,aAAA,GAAA,GAAA,EAAA,WAAA,EAAA,MAAA,IAAA,KAAA,GAAA,KAAA,MAAA,EAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,aAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,wBAAA,EAAA,cAAA,UAAA,EAAA,SAAA,GAAA,MAAA,GAAA,UAAA,mBAAA,MAAA,EAAA,WAAA,aAAA,WAAA,EAAA,yBAAA,SAAA,EAAA,EAAA,GAAA,MAAA,GAAA,OAAA,EAAA,aAAA,EAAA,SAAA,EAAA,cAAA,EAAA,KAAA,EAAA,YAAA,EAAA,SAAA,GAAA,MAAA,GAAA,UAAA,WAAA,EAAA,WAAA,aAAA,QAAA,IAAA,KAAA,EAAA,WAAA,aAAA,YAAA,EAAA,QAAA,SAAA,EAAA,EAAA,GAAA,MAAA,IAAA,UAAA,EAAA,SAAA,cAAA,OAAA,EAAA,eAAA,EAAA,SAAA,GAAA,MAAA,OAAA,EAAA,aAAA,eAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,GAAA,OAAA,EAAA,MAAA,EAAA,EAAA,eAAA,EAAA,EAAA,iBAAA,KAAA,EAAA,UAAA,EAAA,MAAA,OAAA,GAAA,EAAA,GAAA,KAAA,GAAA,EAAA,KAAA,GAAA,UAAA,EAAA,KAAA,KAAA,EAAA,KAAA,QAAA,EAAA,OAAA,GAAA,WAAA,EAAA,KAAA,GAAA,QAAA,EAAA,SAAA,GAAA,MAAA,EAAA,SAAA,GAAA,QAAA,IAAA,IAAA,EAAA,KAAA,MAAA,aAAA,GAAA,6BAAA,GAAA,gBAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,OAAA,KAAA,EAAA,QAAA,EAAA,KAAA,IAAA,EAAA,QAAA,IAAA,EAAA,SAAA,EAAA,KAAA,gBAAA,EAAA,IAAA,MAAA,EAAA,KAAA,QAAA,EAAA,EAAA,KAAA,EAAA,SAAA,GAAA,MAAA,KAAA,EAAA,aAAA,EAAA,GAAA,QAAA,KAAA,SAAA,GAAA,GAAA,GAAA,EAAA,KAAA,OAAA,KAAA,EAAA,IAAA,IAAA,gBAAA,GAAA,MAAA,MAAA,UAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,SAAA,EAAA,GAAA,MAAA,OAAA,IAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,OAAA,GAAA,KAAA,UAAA,EAAA,EAAA,EAAA,OAAA,GAAA,GAAA,EAAA,SAAA,KAAA,SAAA,KAAA,SAAA,IAAA,EAAA,EAAA,GAAA,OAAA,SAAA,GAAA,MAAA,MAAA,UAAA,EAAA,KAAA,OAAA,KAAA,IAAA,SAAA,GAAA,MAAA,MAAA,UAAA,EAAA,KAAA,OAAA,KAAA,GAAA,SAAA,GAAA,QAAA,EAAA,KAAA,gBAAA,IAAA,GAAA,KAAA,GAAA,EAAA,GAAA,OAAA,GAAA,SAAA,IAAA,IAAA,GAAA,sCAAA,GAAA,EAAA,GAAA,KAAA,SAAA,EAAA,GAAA,GAAA,GAAA,CAAA,KAAA,EAAA,MAAA,KAAA,IAAA,gBAAA,GAAA,CAAA,GAAA,EAAA,MAAA,EAAA,IAAA,MAAA,EAAA,EAAA,OAAA,IAAA,EAAA,QAAA,GAAA,KAAA,EAAA,MAAA,GAAA,KAAA,IAAA,IAAA,EAAA,IAAA,EAAA,OAAA,GAAA,EAAA,QAAA,GAAA,IAAA,KAAA,GAAA,KAAA,YAAA,GAAA,KAAA,EAAA,IAAA,EAAA,GAAA,CAAA,GAAA,EAAA,YAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,KAAA,EAAA,UAAA,EAAA,GAAA,GAAA,EAAA,SAAA,EAAA,eAAA,EAAA,GAAA,IAAA,GAAA,KAAA,EAAA,KAAA,EAAA,cAAA,GAAA,IAAA,IAAA,GAAA,EAAA,WAAA,KAAA,IAAA,KAAA,GAAA,EAAA,IAAA,KAAA,KAAA,EAAA,EAAA,GAAA,OAAA,MAAA,MAAA,GAAA,EAAA,eAAA,EAAA,IAAA,GAAA,EAAA,aAAA,KAAA,OAAA,EAAA,KAAA,GAAA,GAAA,KAAA,QAAA,EAAA,KAAA,SAAA,EAAA,KAAA,MAAA,GAAA,UAAA,KAAA,QAAA,KAAA,GAAA,EAAA,KAAA,OAAA,EAAA,MAAA,EAAA,WAAA,GAAA,mBAAA,IAAA,MAAA,GAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,WAAA,KAAA,SAAA,EAAA,SAAA,KAAA,QAAA,EAAA,SAAA,EAAA,UAAA,EAAA,OAAA,IAAA,UAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,IAAA,iCAAA,IAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,GAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,GAAA,MAAA,EAAA,SAAA,GAAA,EAAA,EAAA,KAAA,IAAA,EAAA,UAAA,GAAA,IAAA,EAAA,SAAA,CAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,KAAA,GAAA,KAAA,GAAA,MAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,GAAA,MAAA,EAAA,EAAA,EAAA,YAAA,IAAA,EAAA,UAAA,IAAA,GAAA,EAAA,KAAA,EAAA,OAAA,MAAA,EAAA,GAAA,QAAA,IAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,MAAA,OAAA,MAAA,OAAA,WAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,SAAA,KAAA,EAAA,IAAA,OAAA,KAAA,QAAA,SAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,KAAA,EAAA,GAAA,KAAA,IAAA,gBAAA,GAAA,EAAA,EAAA,GAAA,KAAA,SAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,KAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,WAAA,GAAA,EAAA,SAAA,KAAA,EAAA,EAAA,MAAA,GAAA,GAAA,IAAA,EAAA,UAAA,EAAA,KAAA,gBAAA,EAAA,IAAA,CAAA,EAAA,KAAA,EAAA,OAAA,MAAA,MAAA,UAAA,EAAA,OAAA,EAAA,EAAA,OAAA,GAAA,IAAA,MAAA,SAAA,GAAA,MAAA,GAAA,gBAAA,GAAA,EAAA,KAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,KAAA,EAAA,OAAA,EAAA,GAAA,GAAA,KAAA,IAAA,KAAA,GAAA,WAAA,KAAA,QAAA,UAAA,OAAA,IAAA,IAAA,SAAA,EAAA,GAAA,MAAA,MAAA,UAAA,EAAA,OAAA,EAAA,MAAA,KAAA,MAAA,EAAA,EAAA,OAAA,QAAA,SAAA,GAAA,MAAA,MAAA,IAAA,MAAA,EAAA,KAAA,WAAA,KAAA,WAAA,OAAA,OAAA,EAAA,MAAA,OAAA,SAAA,GAAA,GAAA,GAAA,EAAA,UAAA,OAAA,IAAA,KAAA,EAAA,SAAA,EAAA,MAAA,QAAA,SAAA,GAAA,MAAA,GAAA,IAAA,EAAA,eAAA,aAAA,SAAA,EAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,aAAA,IAAA,KAAA,SAAA,GAAA,MAAA,GAAA,EAAA,gBAAA,KAAA,SAAA,GAAA,MAAA,GAAA,EAAA,oBAAA,QAAA,SAAA,GAAA,MAAA,GAAA,IAAA,EAAA,gBAAA,QAAA,SAAA,GAAA,MAAA,GAAA,IAAA,EAAA,oBAAA,UAAA,SAAA,EAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,cAAA,IAAA,UAAA,SAAA,EAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,kBAAA,IAAA,SAAA,SAAA,GAAA,MAAA,GAAA,SAAA,EAAA,gBAAA,WAAA,IAAA,SAAA,SAAA,GAAA,MAAA,GAAA,QAAA,EAAA,aAAA,SAAA,SAAA,GAAA,MAAA,GAAA,iBAAA,EAAA,SAAA,EAAA,cAAA,SAAA,EAAA,GAAA,EAAA,GAAA,GAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,KAAA,EAAA,EAAA,OAAA,UAAA,EAAA,MAAA,MAAA,EAAA,GAAA,GAAA,gBAAA,KAAA,EAAA,EAAA,OAAA,EAAA,IAAA,KAAA,OAAA,IAAA,GAAA,IAAA,EAAA,OAAA,GAAA,GAAA,KAAA,IAAA,EAAA,WAAA,KAAA,UAAA,KAAA,IAAA,IAAA,OAAA,KAAA,GAAA,UAAA,SAAA,GAAA,EAAA,gBAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,UAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,EAAA,SAAA,GAAA,IAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,GAAA,MAAA,EAAA,GAAA,EAAA,OAAA,GAAA,EAAA,YAAA,CAAA,GAAA,CAAA,OAAA,GAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,KAAA,EAAA,YAAA,GAAA,IAAA,WAAA,GAAA,EAAA,CAAA,GAAA,GAAA,EAAA,QAAA,QAAA,GAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,KAAA,EAAA,cAAA,EAAA,EAAA,QAAA,EAAA,IAAA,IAAA,EAAA,KAAA,GAAA,GAAA,EAAA,QAAA,WAAA,GAAA,EAAA,MAAA,WAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,OAAA,OAAA,WAAA,MAAA,IAAA,EAAA,KAAA,UAAA,SAAA,EAAA,GAAA,IAAA,GAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,IAAA,IAAA,EAAA,OAAA,EAAA,GAAA,IAAA,GAAA,GAAA,IAAA,GAAA,GAAA,OAAA,MAAA,IAAA,SAAA,GAAA,MAAA,GAAA,EAAA,QAAA,EAAA,GAAA,MAAA,IAAA,EAAA,SAAA,MAAA,WAAA,MAAA,MAAA,EAAA,EAAA,MAAA,QAAA,WAAA,MAAA,GAAA,EAAA,EAAA,OAAA,MAAA,SAAA,WAAA,OAAA,GAAA,KAAA,WAAA,MAAA,GAAA,OAAA,GAAA,EAAA,UAAA,MAAA,OAAA,WAAA,OAAA,GAAA,SAAA,SAAA,EAAA,GAAA,OAAA,GAAA,IAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,MAAA,EAAA,QAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,IAAA,MAAA,KAAA,WAAA,MAAA,GAAA,SAAA,KAAA,WAAA,MAAA,MAAA,WAAA,QAAA,GAAA,OAAA,IAAA,EAAA,QAAA,SAAA,SAAA,GAAA,GAAA,KAAA,UAAA,OAAA,EAAA,UAAA,eAAA,aAAA,SAAA,OAAA,EAAA,UAAA,eAAA,aAAA,SAAA,WAAA,EAAA,UAAA,YAAA,EAAA,UAAA,GAAA,MAAA,WAAA,MAAA,IAAA,OAAA,WAAA,MAAA,GAAA,KAAA,WAAA,KAAA,WAAA,MAAA,KAAA,WAAA,GAAA,GAAA,SAAA,OAAA,GAAA,SAAA,SAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAAA,WAAA,GAAA,GAAA,GAAA,EAAA,MAAA,KAAA,UAAA,IAAA,EAAA,WAAA,EAAA,SAAA,EAAA,UAAA,KAAA,EAAA,SAAA,KAAA,EAAA,QAAA,SAAA,EAAA,QAAA,EAAA,EAAA,GAAA,QAAA,OAAA,EAAA,EAAA,UAAA,KAAA,GAAA,GAAA,eAAA,EAAA,OAAA,WAAA,QAAA,SAAA,GAAA,MAAA,OAAA,EAAA,EAAA,OAAA,EAAA,GAAA,IAAA,IAAA,OAAA,GAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,GAAA,EAAA,IAAA,WAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,QAAA,EAAA,GAAA,GAAA,MAAA,EAAA,EAAA,IAAA,WAAA,MAAA,GAAA,EAAA,GAAA,QAAA,OAAA,EAAA,EAAA,KAAA,WAAA,MAAA,EAAA,EAAA,GAAA,QAAA,EAAA,WAAA,EAAA,QAAA,GAAA,GAAA,EAAA,KAAA,EAAA,GAAA,GAAA,KAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,WAAA,EAAA,EAAA,OAAA,EAAA,IAAA,GAAA,GAAA,EAAA,WAAA,EAAA,SAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,WAAA,EAAA,SAAA,EAAA,EAAA,GAAA,MAAA,UAAA,GAAA,EAAA,GAAA,KAAA,EAAA,GAAA,UAAA,OAAA,EAAA,EAAA,KAAA,WAAA,EAAA,IAAA,EAAA,EAAA,WAAA,EAAA,KAAA,GAAA,EAAA,YAAA,EAAA,IAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,WAAA,EAAA,GAAA,SAAA,EAAA,GAAA,UAAA,KAAA,EAAA,EAAA,EAAA,IAAA,KAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,MAAA,CAAA,OAAA,IAAA,EAAA,YAAA,EAAA,GAAA,EAAA,YAAA,IAAA,GAAA,GAAA,GAAA,MAAA,SAAA,GAAA,MAAA,GAAA,MAAA,UAAA,KAAA,GAAA,MAAA,EAAA,QAAA,SAAA,EAAA,UAAA,EAAA,UAAA,SAAA,GAAA,EAAA,EAAA,YAAA,EAAA,OAAA,IAAA,MAAA,SAAA,IAAA,KAAA,IAAA,EAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,KAAA,KAAA,EAAA,UAAA,IAAA,GAAA,YAAA,GAAA,IAAA,EAAA,GAAA,iBAAA,EAAA,GAAA,eAAA,SAAA,EAAA,GAAA,IAAA,eAAA,EAAA,MAAA,QAAA,SAAA,GAAA,MAAA,MAAA,GAAA,EAAA,WAAA,aAAA,EAAA,WAAA,WAAA,EAAA,QAAA,EAAA,iBAAA,mBAAA,GAAA,GAAA,EAAA,iBAAA,OAAA,GAAA,KAAA,GAAA,QAAA,IAAA,EAAA,MAAA,SAAA,IAAA,IAAA,EAAA,OAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,MAAA,CAAA,IAAA,WAAA,EAAA,KAAA,GAAA,CAAA,GAAA,CAAA,KAAA,IAAA,GAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,IAAA,SAAA,IAAA,GAAA,EAAA,EAAA,WAAA,KAAA,GAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,SAAA,GAAA,MAAA,KAAA,EAAA,UAAA,IAAA,EAAA,YAAA,EAAA,UAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,WAAA,EAAA,WAAA,IAAA,SAAA,GAAA,IAAA,EAAA,QAAA,GAAA,MAAA,EAAA,IAAA,MAAA,EAAA,EAAA,KAAA,QAAA,KAAA,EAAA,CAAA,EAAA,EAAA,KAAA,KAAA,EAAA,KAAA,UAAA,MAAA,GAAA,OAAA,iBAAA,EAAA,GAAA,MAAA,GAAA,EAAA,KAAA,SAAA,EAAA,EAAA,OAAA,EAAA,IAAA,MAAA,MAAA,MAAA,KAAA,KAAA,MAAA,OAAA,GAAA,IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,KAAA,IAAA,GAAA,EAAA,KAAA,MAAA,EAAA,IAAA,gBAAA,GAAA,EAAA,GAAA,MAAA,IAAA,EAAA,cAAA,GAAA,EAAA,OAAA,KAAA,MAAA,GAAA,OAAA,KAAA,IAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,IAAA,IAAA,SAAA,EAAA,GAAA,GAAA,GAAA,KAAA,MAAA,KAAA,IAAA,GAAA,OAAA,UAAA,EAAA,EAAA,EAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,UAAA,GAAA,GAAA,gBAAA,IAAA,SAAA,GAAA,EAAA,KAAA,IAAA,EAAA,GAAA,SAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,UAAA,MAAA,KAAA,IAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EAAA,KAAA,MAAA,EAAA,IAAA,SAAA,EAAA,KAAA,MAAA,UAAA,CAAA,EAAA,QAAA,GAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,UAAA,GAAA,IAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,IAAA,GAAA,EAAA,MAAA,UAAA,EAAA,EAAA,MAAA,MAAA,WAAA,GAAA,EAAA,MAAA,QAAA,SAAA,GAAA,OAAA,EAAA,cAAA,KAAA,MAAA,EAAA,KAAA,gBAAA,QAAA,SAAA,GAAA,EAAA,KAAA,gBAAA,MAAA,MAAA,EAAA,KAAA,WAAA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,gCAAA,GAAA,UAAA,GAAA,QAAA,QAAA,SAAA,GAAA,MAAA,IAAA,QAAA,IAAA,GAAA,QAAA,IAAA,KAAA,SAAA,EAAA,EAAA,GAAA,MAAA,IAAA,OAAA,EAAA,EAAA,IACA,WAAA,SAAA,EAAA,GAAA,GAAA,OAAA,EAAA,IAAA,MAAA,SAAA,EAAA,EAAA,GAAA,MAAA,IAAA,OAAA,EAAA,EAAA,IAAA,YAAA,SAAA,EAAA,GAAA,GAAA,OAAA,EAAA,MAAA,EAAA,GAAA,QAAA,KAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,CAAA,GAAA,KAAA,SAAA,EAAA,GAAA,IAAA,GAAA,IAAA,EAAA,WAAA,GAAA,IAAA,EAAA,iBAAA,CAAA,IAAA,EAAA,EAAA,OAAA,KAAA,EAAA,KAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,QAAA,WAAA,EAAA,EAAA,UAAA,EAAA,MAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,EAAA,gBAAA,GAAA,MAAA,GAAA,MAAA,gBAAA,GAAA,KAAA,KAAA,WAAA,GAAA,IAAA,KAAA,KAAA,GAAA,KAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,UAAA,EAAA,IAAA,GAAA,SAAA,EAAA,CAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,SAAA,EAAA,MAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,SAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,QAAA,SAAA,EAAA,MAAA,OAAA,MAAA,KAAA,WAAA,GAAA,GAAA,GAAA,IAAA,KAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,KAAA,EAAA,QAAA,MAAA,SAAA,GAAA,GAAA,IAAA,KAAA,EAAA,MAAA,KAAA,EAAA,UAAA,OAAA,EAAA,MAAA,IAAA,WAAA,SAAA,GAAA,MAAA,MAAA,KAAA,WAAA,GAAA,OAAA,KAAA,QAAA,EAAA,QAAA,MAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,IAAA,GAAA,GAAA,MAAA,QAAA,EAAA,GAAA,IAAA,EAAA,GAAA,KAAA,GAAA,EAAA,QAAA,GAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,UAAA,IAAA,EAAA,KAAA,IAAA,OAAA,QAAA,QAAA,SAAA,EAAA,GAAA,EAAA,GAAA,IAAA,IAAA,GAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,YAAA,EAAA,GAAA,EAAA,WAAA,EAAA,QAAA,EAAA,GAAA,gBAAA,IAAA,EAAA,EAAA,QAAA,KAAA,IAAA,OAAA,GAAA,EAAA,QAAA,oBAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,GAAA,EAAA,MAAA,QAAA,YAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,YAAA,OAAA,IAAA,IAAA,EAAA,IAAA,GAAA,OAAA,EAAA,GAAA,MAAA,EAAA,UAAA,eAAA,IAAA,WAAA,GAAA,OAAA,GAAA,EAAA,QAAA,WAAA,EAAA,GAAA,QAAA,MAAA,SAAA,EAAA,GAAA,GAAA,GAAA,CAAA,OAAA,gBAAA,KAAA,EAAA,EAAA,EAAA,KAAA,KAAA,UAAA,OAAA,EAAA,EAAA,MAAA,KAAA,GAAA,GAAA,SAAA,EAAA,KAAA,KAAA,KAAA,WAAA,GAAA,GAAA,EAAA,MAAA,KAAA,EAAA,EAAA,GAAA,YAAA,KAAA,GAAA,OAAA,GAAA,eAAA,EAAA,IAAA,EAAA,QAAA,KAAA,MAAA,QAAA,SAAA,GAAA,MAAA,MAAA,KAAA,WAAA,EAAA,QAAA,KAAA,MAAA,WAAA,SAAA,GAAA,MAAA,MAAA,MAAA,GAAA,UAAA,QAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,WAAA,EAAA,KAAA,EAAA,KAAA,OAAA,EAAA,aAAA,GAAA,EAAA,YAAA,GAAA,IAAA,KAAA,gBAAA,KAAA,EAAA,EAAA,EAAA,QAAA,EAAA,GAAA,KAAA,KAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,cAAA,GAAA,EAAA,QAAA,IAAA,EAAA,MAAA,IAAA,GAAA,OAAA,KAAA,EAAA,QAAA,KAAA,IAAA,IAAA,sCAAA,OAAA,IAAA,MAAA,QAAA,SAAA,QAAA,GAAA,SAAA,EAAA,GAAA,MAAA,GAAA,GAAA,EAAA,SAAA,EAAA,IAAA,EAAA,aAAA,EAAA,SAAA,EAAA,cAAA,IAAA,GAAA,yBAAA,WAAA,GAAA,GAAA,EAAA,yBAAA,EAAA,EAAA,YAAA,EAAA,cAAA,QAAA,EAAA,EAAA,cAAA,QAAA,GAAA,aAAA,OAAA,SAAA,EAAA,aAAA,UAAA,WAAA,EAAA,aAAA,OAAA,KAAA,EAAA,YAAA,GAAA,EAAA,WAAA,EAAA,WAAA,GAAA,WAAA,GAAA,UAAA,QAAA,EAAA,UAAA,yBAAA,EAAA,iBAAA,EAAA,WAAA,GAAA,UAAA,eAAA,IAAA,IAAA,WAAA,GAAA,eAAA,aAAA,EAAA,IAAA,IAAA,OAAA,GAAA,uCAAA,GAAA,kCAAA,GAAA,sBAAA,GAAA,OAAA,UAAA,IAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,UAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,EAAA,YAAA,EAAA,EAAA,UAAA,EAAA,EAAA,OAAA,SAAA,GAAA,aAAA,KAAA,IAAA,EAAA,MAAA,YAAA,EAAA,KAAA,EAAA,MAAA,SAAA,MAAA,EAAA,WAAA,SAAA,GAAA,GAAA,IAAA,MAAA,MAAA,IAAA,EAAA,EAAA,OAAA,KAAA,EAAA,GAAA,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,IAAA,MAAA,KAAA,OAAA,IAAA,EAAA,EAAA,MAAA,QAAA,OAAA,GAAA,EAAA,EAAA,aAAA,EAAA,WAAA,EAAA,EAAA,EAAA,MAAA,QAAA,OAAA,EAAA,EAAA,QAAA,KAAA,EAAA,SAAA,EAAA,KAAA,EAAA,QAAA,EAAA,KAAA,EAAA,KAAA,SAAA,EAAA,aAAA,GAAA,EAAA,KAAA,MAAA,aAAA,KAAA,GAAA,UAAA,EAAA,KAAA,MAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,cAAA,EAAA,EAAA,OAAA,EAAA,MAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GAAA,EAAA,kBAAA,EAAA,iBAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,IAAA,KAAA,EAAA,GAAA,EAAA,QAAA,OAAA,EAAA,QAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,MAAA,OAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,IAAA,EAAA,EAAA,QAAA,CAAA,IAAA,GAAA,GAAA,IAAA,MAAA,MAAA,IAAA,EAAA,EAAA,OAAA,KAAA,GAAA,EAAA,GAAA,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,IAAA,MAAA,KAAA,OAAA,EAAA,CAAA,IAAA,EAAA,EAAA,MAAA,QAAA,OAAA,GAAA,EAAA,EAAA,aAAA,EAAA,WAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,GAAA,QAAA,UAAA,EAAA,KAAA,iBAAA,WAAA,EAAA,EAAA,EAAA,OAAA,KAAA,EAAA,EAAA,IAAA,GAAA,IAAA,EAAA,UAAA,GAAA,EAAA,OAAA,EAAA,MAAA,IAAA,EAAA,KAAA,EAAA,YAAA,GAAA,IAAA,EAAA,WAAA,OAAA,IAAA,EAAA,YAAA,EAAA,OAAA,EAAA,GAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,OAAA,KAAA,EAAA,GAAA,KAAA,EAAA,SAAA,EAAA,UAAA,EAAA,SAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GAAA,EAAA,YAAA,EAAA,EAAA,EAAA,cAAA,GAAA,QAAA,KAAA,IAAA,GAAA,EAAA,MAAA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,cAAA,WAAA,GAAA,OAAA,GAAA,OAAA,EAAA,aAAA,QAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,KAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,EAAA,aAAA,EAAA,UAAA,MAAA,OAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,UAAA,IAAA,EAAA,WAAA,GAAA,KAAA,EAAA,EAAA,MAAA,aAAA,EAAA,QAAA,MAAA,IAAA,EAAA,EAAA,MAAA,KAAA,EAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,QAAA,KAAA,GAAA,KAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,EAAA,gBAAA,IAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,KAAA,EAAA,aAAA,EAAA,UAAA,GAAA,QAAA,UAAA,EAAA,KAAA,iBAAA,WAAA,KAAA,EAAA,OAAA,OAAA,EAAA,SAAA,EAAA,OAAA,GAAA,EAAA,MAAA,GAAA,GAAA,EAAA,UAAA,GAAA,IAAA,EAAA,EAAA,MAAA,QAAA,OAAA,IAAA,EAAA,SAAA,EAAA,QAAA,MAAA,EAAA,MAAA,GAAA,CAAA,IAAA,IAAA,EAAA,WAAA,EAAA,SAAA,GAAA,CAAA,IAAA,EAAA,EAAA,cAAA,EAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA,YAAA,EAAA,EAAA,EAAA,WAAA,EAAA,KAAA,GAAA,EAAA,CAAA,MAAA,EAAA,eAAA,IAAA,EAAA,KAAA,EAAA,aAAA,EAAA,cAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,UAAA,EAAA,GAAA,GAAA,IAAA,EAAA,eAAA,EAAA,OAAA,GAAA,IAAA,EAAA,UAAA,GAAA,EAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,WAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,GAAA,EAAA,UAAA,GAAA,EAAA,iBAAA,OAAA,GAAA,KAAA,EAAA,GAAA,EAAA,sBAAA,EAAA,UAAA,EAAA,SAAA,MAAA,EAAA,MAAA,MAAA,IAAA,EAAA,WAAA,IAAA,GAAA,EAAA,WAAA,EAAA,MAAA,EAAA,SAAA,KAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,MAAA,EAAA,MAAA,UAAA,EAAA,EAAA,KAAA,EAAA,MAAA,UAAA,OAAA,IAAA,EAAA,GAAA,IAAA,EAAA,SAAA,SAAA,SAAA,GAAA,EAAA,EAAA,MAAA,IAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,WAAA,GAAA,GAAA,IAAA,KAAA,eAAA,EAAA,UAAA,EAAA,EAAA,MAAA,QAAA,EAAA,SAAA,IAAA,EAAA,GAAA,EAAA,EAAA,eAAA,MAAA,EAAA,aAAA,EAAA,YAAA,KAAA,KAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,MAAA,SAAA,KAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,wBAAA,IAAA,EAAA,cAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,SAAA,QAAA,EAAA,mCAAA,EAAA,cAAA,EAAA,aAAA,KAAA,EAAA,cAAA,EAAA,UAAA,EAAA,EAAA,KAAA,EAAA,KAAA,IAAA,EAAA,MAAA,QAAA,EAAA,eAAA,QAAA,EAAA,SAAA,MAAA,EAAA,KAAA,GAAA,SAAA,IAAA,EAAA,OAAA,MAAA,IAAA,EAAA,iBAAA,EAAA,mBAAA,OAAA,GAAA,cAAA,EAAA,aAAA,KAAA,KAAA,GAAA,EAAA,SAAA,SAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,cAAA,EAAA,EAAA,MAAA,IAAA,GAAA,EAAA,YAAA,EAAA,QAAA,UAAA,EAAA,MAAA,KAAA,IAAA,KAAA,EAAA,EAAA,YAAA,KAAA,GAAA,EAAA,YAAA,GAAA,UAAA,EAAA,KAAA,CAAA,IAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,SAAA,IAAA,SAAA,EAAA,KAAA,EAAA,GAAA,EAAA,aAAA,EAAA,EAAA,MAAA,MAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,MAAA,IAAA,QAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GAAA,QAAA,EAAA,MAAA,KAAA,EAAA,SAAA,IAAA,MAAA,GAAA,EAAA,QAAA,EAAA,MAAA,KAAA,KAAA,SAAA,EAAA,MAAA,KAAA,GAAA,MAAA,wHAAA,MAAA,KAAA,YAAA,UAAA,MAAA,4BAAA,MAAA,KAAA,OAAA,SAAA,EAAA,GAAA,MAAA,OAAA,EAAA,QAAA,EAAA,MAAA,MAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,IAAA,YAAA,MAAA,uFAAA,MAAA,KAAA,OAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,OAAA,EAAA,OAAA,MAAA,EAAA,UAAA,EAAA,EAAA,OAAA,eAAA,EAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,GAAA,EAAA,YAAA,GAAA,EAAA,YAAA,IAAA,GAAA,EAAA,YAAA,GAAA,EAAA,YAAA,GAAA,EAAA,MAAA,EAAA,SAAA,GAAA,EAAA,WAAA,GAAA,EAAA,WAAA,IAAA,GAAA,EAAA,WAAA,GAAA,EAAA,WAAA,IAAA,EAAA,OAAA,SAAA,IAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA;GAAA,IAAA,SAAA,GAAA,GAAA,EAAA,EAAA,SAAA,MAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,SAAA,EAAA,KAAA,IAAA,KAAA,SAAA,GAAA,EAAA,GAAA,KAAA,GAAA,KAAA,WAAA,GAAA,KAAA,GAAA,KAAA,aAAA,EAAA,EAAA,MAAA,KAAA,MAAA,OAAA,EAAA,OAAA,KAAA,MAAA,EAAA,GAAA,GAAA,MAAA,GAAA,EAAA,EAAA,OAAA,KAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,OAAA,GAAA,IAAA,EAAA,OAAA,WAAA,EAAA,OAAA,EAAA,OAAA,YAAA,EAAA,OAAA,EAAA,OAAA,EAAA,GAAA,GAAA,SAAA,MAAA,UAAA,GAAA,OAAA,QAAA,WAAA,MAAA,QAAA,KAAA,KAAA,OAAA,KAAA,SAAA,GAAA,QAAA,aAAA,WAAA,MAAA,QAAA,WAAA,MAAA,QAAA,KAAA,KAAA,MAAA,KAAA,QAAA,GAAA,QAAA,aAAA,YAAA,OAAA,QAAA,WAAA,MAAA,aAAA,KAAA,MAAA,KAAA,OAAA,EAAA,SAAA,KAAA,UAAA,KAAA,SAAA,GAAA,QAAA,SAAA,SAAA,GAAA,MAAA,GAAA,SAAA,EAAA,OAAA,OAAA,cAAA,aAAA,SAAA,GAAA,SAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,cAAA,YAAA,EAAA,WAAA,SAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,OAAA,GAAA,GAAA,MAAA,GAAA,KAAA,EAAA,aAAA,EAAA,kBAAA,GAAA,EAAA,MAAA,QAAA,EAAA,KAAA,GAAA,EAAA,MAAA,SAAA,KAAA,EAAA,GAAA,EAAA,sBAAA,EAAA,mBAAA,EAAA,YAAA,SAAA,EAAA,EAAA,GAAA,EAAA,qBAAA,EAAA,oBAAA,EAAA,GAAA,IAAA,EAAA,MAAA,SAAA,EAAA,GAAA,MAAA,gBAAA,GAAA,OAAA,GAAA,EAAA,MAAA,KAAA,cAAA,EAAA,KAAA,KAAA,EAAA,KAAA,KAAA,mBAAA,EAAA,kBAAA,SAAA,EAAA,kBAAA,EAAA,eAAA,EAAA,EAAA,GAAA,KAAA,KAAA,EAAA,GAAA,EAAA,OAAA,KAAA,GAAA,KAAA,UAAA,GAAA,EAAA,WAAA,EAAA,WAAA,KAAA,EAAA,UAAA,IAAA,GAAA,GAAA,MAAA,EAAA,IAAA,EAAA,MAAA,WAAA,mBAAA,EAAA,qBAAA,EAAA,8BAAA,EAAA,eAAA,WAAA,GAAA,GAAA,KAAA,aAAA,MAAA,mBAAA,EAAA,GAAA,EAAA,gBAAA,EAAA,kBAAA,gBAAA,WAAA,GAAA,GAAA,KAAA,aAAA,MAAA,qBAAA,EAAA,GAAA,EAAA,iBAAA,EAAA,mBAAA,yBAAA,WAAA,GAAA,GAAA,KAAA,aAAA,MAAA,8BAAA,EAAA,GAAA,EAAA,0BAAA,EAAA,2BAAA,KAAA,oBAAA,EAAA,MAAA,WAAA,YAAA,WAAA,WAAA,aAAA,cAAA,aAAA,cAAA,SAAA,EAAA,GAAA,EAAA,MAAA,QAAA,IAAA,aAAA,EAAA,SAAA,EAAA,OAAA,SAAA,GAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,cAAA,EAAA,EAAA,SAAA,SAAA,GAAA,IAAA,IAAA,EAAA,SAAA,EAAA,MAAA,EAAA,KAAA,EAAA,SAAA,EAAA,EAAA,QAAA,MAAA,KAAA,WAAA,EAAA,KAAA,GAAA,MAAA,EAAA,gBAAA,EAAA,MAAA,MAAA,UAAA,KAAA,YAAA,SAAA,EAAA,GAAA,GAAA,GAAA,SAAA,GAAA,EAAA,MAAA,SAAA,EAAA,EAAA,OAAA,EAAA,MAAA,IAAA,IAAA,GAAA,GAAA,MAAA,QAAA,IAAA,MAAA,WAAA,GAAA,GAAA,KAAA,eAAA,KAAA,EAAA,GAAA,OAAA,EAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,GAAA,GAAA,GAAA,OAAA,EAAA,GAAA,GAAA,GAAA,IAAA,SAAA,WAAA,GAAA,GAAA,KAAA,eAAA,KAAA,EAAA,GAAA,OAAA,EAAA,GAAA,CAAA,GAAA,GAAA,OAAA,EAAA,EAAA,IAAA,EAAA,oBAAA,EAAA,GAAA,GAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,QAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,CAAA,IAAA,gBAAA,GAAA,CAAA,gBAAA,KAAA,EAAA,GAAA,EAAA,EAAA,OAAA,KAAA,IAAA,GAAA,KAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,MAAA,GAAA,MAAA,GAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,QAAA,MAAA,IAAA,gBAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,KAAA,EAAA,EAAA,MAAA,KAAA,EAAA,MAAA,KAAA,OAAA,KAAA,IAAA,EAAA,EAAA,EAAA,SAAA,GAAA,MAAA,KAAA,IAAA,GAAA,EAAA,MAAA,KAAA,YAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,KAAA,KAAA,WAAA,EAAA,MAAA,IAAA,KAAA,EAAA,EAAA,EAAA,MAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,MAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,CAAA,IAAA,GAAA,EAAA,gBAAA,EAAA,UAAA,MAAA,GAAA,EAAA,UAAA,EAAA,EAAA,gBAAA,IAAA,EAAA,UAAA,EAAA,SAAA,IAAA,EAAA,UAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,IAAA,IAAA,gBAAA,GAAA,CAAA,IAAA,IAAA,GAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAAA,OAAA,MAAA,OAAA,KAAA,GAAA,kBAAA,MAAA,EAAA,EAAA,EAAA,QAAA,KAAA,IAAA,EAAA,GAAA,KAAA,KAAA,WAAA,EAAA,MAAA,OAAA,KAAA,EAAA,EAAA,MAAA,QAAA,SAAA,EAAA,GAAA,MAAA,MAAA,KAAA,WAAA,EAAA,MAAA,QAAA,EAAA,EAAA,SAAA,eAAA,SAAA,EAAA,GAAA,GAAA,GAAA,KAAA,EAAA,OAAA,GAAA,EAAA,MAAA,QAAA,EAAA,EAAA,GAAA,GAAA,SAAA,IAAA,IAAA,0EAAA,GAAA,YAAA,GAAA,YAAA,GAAA,0BAAA,GAAA,oCAAA,GAAA,4BAAA,GAAA,cAAA,GAAA,2CAAA,IAAA,QAAA,EAAA,+BAAA,aAAA,OAAA,EAAA,UAAA,YAAA,KAAA,EAAA,oBAAA,uBAAA,IAAA,EAAA,iBAAA,oBAAA,IAAA,EAAA,qBAAA,yBAAA,UAAA,EAAA,GAAA,IAAA,IAAA,SAAA,GAAA,OAAA,GAAA,MAAA,GAAA,MAAA,GAAA,SAAA,GAAA,QAAA,GAAA,MAAA,GAAA,GAAA,GAAA,GAAA,EAAA,QAAA,MAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,WAAA,GAAA,EAAA,EAAA,SAAA,EAAA,cAAA,EAAA,MAAA,EAAA,gBAAA,IAAA,EAAA,UAAA,KAAA,EAAA,UAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,QAAA,GAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,UAAA,EAAA,OAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,WAAA,GAAA,cAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,yBAAA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,WAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EAAA,EAAA,UAAA,GAAA,OAAA,IAAA,GAAA,KAAA,GAAA,CAAA,IAAA,EAAA,GAAA,EAAA,YAAA,EAAA,cAAA,QAAA,GAAA,GAAA,KAAA,KAAA,GAAA,KAAA,GAAA,cAAA,EAAA,GAAA,IAAA,GAAA,SAAA,EAAA,UAAA,EAAA,GAAA,EAAA,QAAA,GAAA,aAAA,EAAA,GAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,SAAA,GAAA,MAAA,EAAA,EAAA,YAAA,EAAA,EAAA,WAAA,EAAA,YAAA,OAAA,GAAA,KAAA,EAAA,eAAA,GAAA,KAAA,EAAA,YAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,KAAA,GAAA,KAAA,EAAA,QAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,cAAA,GAAA,EAAA,EAAA,EAAA,YAAA,GAAA,UAAA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,MAAA,GAAA,KAAA,EAAA,MAAA,KAAA,EAAA,KAAA,EAAA,OAAA,IAAA,UAAA,SAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MAAA,QAAA,EAAA,EAAA,UAAA,EAAA,EAAA,IAAA,IAAA,CAAA,GAAA,EAAA,WAAA,KAAA,EAAA,EAAA,GAAA,SAAA,IAAA,EAAA,GAAA,MAAA,KAAA,CAAA,GAAA,EAAA,OAAA,IAAA,IAAA,GAAA,OAAA,EAAA,GAAA,EAAA,MAAA,OAAA,EAAA,GAAA,EAAA,YAAA,EAAA,EAAA,EAAA,OAAA,IAAA,MAAA,UAAA,IAAA,MAAA,SAAA,IAAA,MAAA,EAAA,GAAA,cAAA,EAAA,GAAA,QAAA,KAAA,SAAA,GAAA,MAAA,IAAA,KAAA,SAAA,GAAA,MAAA,UAAA,EAAA,EAAA,KAAA,MAAA,KAAA,QAAA,KAAA,YAAA,IAAA,KAAA,UAAA,KAAA,KAAA,UAAA,IAAA,KAAA,YAAA,KAAA,YAAA,MAAA,KAAA,EAAA,UAAA,SAAA,OAAA,WAAA,MAAA,MAAA,SAAA,UAAA,SAAA,GAAA,GAAA,IAAA,KAAA,UAAA,KAAA,KAAA,UAAA,IAAA,KAAA,SAAA,CAAA,GAAA,GAAA,EAAA,KAAA,EAAA,GAAA,YAAA,OAAA,QAAA,WAAA,MAAA,MAAA,SAAA,UAAA,SAAA,GAAA,GAAA,IAAA,KAAA,UAAA,KAAA,KAAA,UAAA,IAAA,KAAA,SAAA,CAAA,GAAA,GAAA,EAAA,KAAA,EAAA,GAAA,aAAA,EAAA,EAAA,gBAAA,OAAA,WAAA,MAAA,MAAA,SAAA,UAAA,SAAA,GAAA,KAAA,YAAA,KAAA,WAAA,aAAA,EAAA,SAAA,MAAA,WAAA,MAAA,MAAA,SAAA,UAAA,SAAA,GAAA,KAAA,YAAA,KAAA,WAAA,aAAA,EAAA,KAAA,gBAAA,OAAA,SAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,MAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,GAAA,IAAA,EAAA,UAAA,EAAA,UAAA,EAAA,IAAA,EAAA,aAAA,GAAA,EAAA,SAAA,EAAA,cAAA,IAAA,EAAA,EAAA,EAAA,WAAA,EAAA,WAAA,YAAA,GAAA,OAAA,OAAA,MAAA,WAAA,IAAA,GAAA,GAAA,EAAA,EAAA,OAAA,EAAA,KAAA,IAAA,IAAA,IAAA,EAAA,WAAA,EAAA,UAAA,EAAA,GAAA,IAAA,EAAA,YAAA,GAAA,OAAA,OAAA,MAAA,SAAA,EAAA,GAAA,MAAA,GAAA,MAAA,GAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,KAAA,IAAA,WAAA,MAAA,GAAA,MAAA,KAAA,EAAA,MAAA,KAAA,SAAA,GAAA,MAAA,IAAA,KAAA,SAAA,GAAA,GAAA,GAAA,KAAA,OAAA,EAAA,EAAA,EAAA,KAAA,MAAA,IAAA,SAAA,GAAA,IAAA,EAAA,SAAA,MAAA,GAAA,SAAA,IAAA,gBAAA,KAAA,GAAA,KAAA,KAAA,IAAA,GAAA,KAAA,KAAA,GAAA,KAAA,GAAA,eAAA,CAAA,EAAA,EAAA,QAAA,GAAA,YAAA,KAAA,KAAA,EAAA,EAAA,IAAA,EAAA,KAAA,OAAA,IAAA,EAAA,WAAA,EAAA,UAAA,EAAA,GAAA,IAAA,EAAA,UAAA,EAAA,GAAA,EAAA,MAAA,KAAA,GAAA,KAAA,QAAA,OAAA,IAAA,KAAA,EAAA,UAAA,SAAA,YAAA,WAAA,GAAA,GAAA,UAAA,EAAA,OAAA,MAAA,SAAA,UAAA,SAAA,GAAA,EAAA,KAAA,WAAA,EAAA,UAAA,EAAA,OAAA,GAAA,EAAA,aAAA,EAAA,QAAA,IAAA,EAAA,QAAA,EAAA,UAAA,KAAA,KAAA,UAAA,OAAA,SAAA,GAAA,MAAA,MAAA,OAAA,GAAA,IAAA,SAAA,SAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,OAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,WAAA,EAAA,IAAA,GAAA,EAAA,GAAA,gBAAA,KAAA,EAAA,YAAA,GAAA,KAAA,GAAA,MAAA,MAAA,KAAA,SAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,KAAA,EAAA,EAAA,SAAA,EAAA,SAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,cAAA,EAAA,KAAA,GAAA,eAAA,EAAA,MAAA,EAAA,EAAA,WAAA,IAAA,EAAA,WAAA,SAAA,EAAA,GAAA,GAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,GAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,MAAA,GAAA,GAAA,GAAA,GAAA,EAAA,MAAA,EAAA,EAAA,EAAA,YAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,GAAA,cAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,GAAA,KAAA,EAAA,MAAA,MAAA,GAAA,OAAA,EAAA,eAAA,EAAA,SAAA,EAAA,KAAA,EAAA,IAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,WAAA,EAAA,YAAA,QAAA,GAAA,MAAA,MAAA,SAAA,EAAA,MAAA,SAAA,SAAA,UAAA,UAAA,aAAA,SAAA,YAAA,QAAA,WAAA,eAAA,SAAA,EAAA,GAAA,EAAA,GAAA,GAAA,SAAA,GAAA,IAAA,GAAA,GAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,KAAA,OAAA,GAAA,EAAA,EAAA,IAAA,GAAA,GAAA,EAAA,MAAA,EAAA,EAAA,MAAA,OAAA,MAAA,UAAA,KAAA,IAAA,IAAA,MAAA,GAAA,UAAA,GAAA,GAAA,QAAA,KAAA,GAAA,kBAAA,KAAA,GAAA,SAAA,GAAA,MAAA,GAAA,cAAA,YAAA,OAAA,EAAA,cAAA,YAAA,iBAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,QAAA,WAAA,QAAA,KAAA,EAAA,MAAA,QAAA,uKAAA,EAAA,UAAA,GAAA,EAAA,YAAA,EAAA,IAAA,GAAA,EAAA,iBAAA,EAAA,KAAA,GAAA,OAAA,EAAA,IAAA,EAAA,QAAA,EAAA,MAAA,EAAA,YAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,cAAA,OAAA,EAAA,EAAA,cAAA,MAAA,GAAA,QAAA,EAAA,MAAA,eAAA,cAAA,EAAA,WAAA,GAAA,MAAA,eAAA,GAAA,EAAA,gBAAA,gBAAA,EAAA,MAAA,eAAA,EAAA,MAAA,QAAA,gFAAA,EAAA,YAAA,GAAA,EAAA,kBAAA,EAAA,OAAA,GAAA,cAAA,WAAA,MAAA,KAAA,GAAA,kBAAA,WAAA,MAAA,OAAA,GAAA,IAAA,GAAA,oBAAA,WAAA,GAAA,GAAA,EAAA,EAAA,YAAA,EAAA,cAAA,OAAA,OAAA,GAAA,MAAA,QAAA,EAAA,MAAA,QAAA,8HAAA,EAAA,MAAA,YAAA,EAAA,MAAA,MAAA,IAAA,EAAA,MAAA,MAAA,MAAA,EAAA,YAAA,GAAA,GAAA,WAAA,EAAA,iBAAA,EAAA,MAAA,aAAA,EAAA,YAAA,GAAA,EAAA,YAAA,GAAA,SAAA,EAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,KAAA,IAAA,GAAA,EAAA,GAAA,EAAA,MAAA,GAAA,EAAA,MAAA,GAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,MAAA,KAAA,IAAA,GAAA,EAAA,MAAA,GAAA,EAAA,EAAA,OAAA,GAAA,IAAA,IAAA,4BAAA,GAAA,GAAA,QAAA,KAAA,GAAA,SAAA,KAAA,GAAA,GAAA,QAAA,YAAA,GAAA,IAAA,KAAA,IAAA,SAAA,WAAA,WAAA,SAAA,QAAA,SAAA,IAAA,cAAA,IAAA,WAAA,OAAA,IAAA,SAAA,IAAA,MAAA,KAAA,GAAA,QAAA,UAAA,SAAA,IAAA,SAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,GAAA,EAAA,EAAA,UAAA,OAAA,KAAA,EAAA,IAAA,MAAA,WAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,GAAA,UAAA,QAAA,YAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,IAAA,EAAA,UAAA,IAAA,EAAA,UAAA,EAAA,MAAA,CAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,UAAA,GAAA,EAAA,EAAA,KAAA,OAAA,GAAA,EAAA,SAAA,KAAA,EAAA,SAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,IAAA,EAAA,SAAA,GAAA,SAAA,EAAA,GAAA,OAAA,IAAA,UAAA,EAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,QAAA,GAAA,WAAA,IAAA,EAAA,GAAA,KAAA,MAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,eAAA,MAAA,GAAA,IAAA,IAAA,WAAA,GAAA,EAAA,UAAA,KAAA,GAAA,MAAA,EAAA,iBAAA,KAAA,GAAA,IAAA,EAAA,QAAA,gBAAA,EAAA,GAAA,WAAA,GAAA,OAAA,IAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,QAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,UAAA,EAAA,OAAA,GAAA,EAAA,SAAA,KAAA,EAAA,SAAA,GAAA,EAAA,EAAA,MAAA,IAAA,EAAA,EAAA,SAAA,IAAA,EAAA,SAAA,GAAA,GAAA,OAAA,KAAA,EAAA,EAAA,IAAA,GAAA,EAAA,IAAA,SAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,WAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,KAAA,GAAA,GAAA,EAAA,WAAA,GAAA,KAAA,GAAA,EAAA,UAAA,GAAA,GAAA,EAAA,GAAA,KAAA,EAAA,MAAA,SAAA,SAAA,SAAA,EAAA,GAAA,EAAA,SAAA,IAAA,IAAA,SAAA,EAAA,EAAA,GAAA,MAAA,GAAA,GAAA,KAAA,EAAA,IAAA,EAAA,aAAA,IAAA,EAAA,YAAA,EAAA,KAAA,EAAA,GAAA,WAAA,MAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,OAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,aAAA,EAAA,GAAA,GAAA,OAAA,EAAA,SAAA,YAAA,EAAA,EAAA,oBAAA,SAAA,EAAA,GAAA,MAAA,GAAA,EAAA,KAAA,GAAA,QAAA,gBAAA,GAAA,EAAA,gBAAA,SAAA,EAAA,MAAA,OAAA,GAAA,QAAA,GAAA,OAAA,SAAA,SAAA,EAAA,GAAA,EAAA,SAAA,EAAA,IAAA,OAAA,SAAA,GAAA,IAAA,GAAA,GAAA,EAAA,KAAA,EAAA,gBAAA,GAAA,EAAA,MAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,KAAA,GAAA,KAAA,KAAA,EAAA,SAAA,EAAA,GAAA,IAAA,KAAA,EAAA,GAAA,QAAA,IAAA,SAAA,EAAA,GAAA,MAAA,IAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,KAAA,EAAA,CAAA,IAAA,EAAA,QAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,GAAA,MAAA,UAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,UAAA,OAAA,IAAA,KAAA,WAAA,MAAA,GAAA,MAAA,IAAA,KAAA,WAAA,MAAA,GAAA,OAAA,OAAA,SAAA,GAAA,MAAA,iBAAA,GAAA,EAAA,KAAA,OAAA,KAAA,OAAA,KAAA,KAAA,WAAA,GAAA,MAAA,EAAA,MAAA,OAAA,EAAA,MAAA,YAAA,EAAA,MAAA,EAAA,EAAA,WAAA,YAAA,EAAA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,KAAA,KAAA,EAAA,KAAA,KAAA,EAAA,KAAA,OAAA,GAAA,QAAA,KAAA,QAAA,EAAA,KAAA,MAAA,KAAA,IAAA,KAAA,MAAA,KAAA,IAAA,EAAA,KAAA,KAAA,IAAA,EAAA,UAAA,GAAA,GAAA,OAAA,IAAA,WAAA,GAAA,GAAA,EAAA,UAAA,KAAA,KAAA,OAAA,IAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,UAAA,SAAA,IAAA,OAAA,IAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,UAAA,KAAA,KAAA,OAAA,MAAA,IAAA,EAAA,KAAA,QAAA,SAAA,EAAA,OAAA,KAAA,QAAA,EAAA,KAAA,QAAA,SAAA,EAAA,EAAA,EAAA,KAAA,QAAA,UAAA,EAAA,KAAA,KAAA,KAAA,IAAA,KAAA,OAAA,EAAA,KAAA,MAAA,KAAA,QAAA,MAAA,KAAA,QAAA,KAAA,KAAA,KAAA,KAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,UAAA,SAAA,IAAA,MAAA,OAAA,EAAA,UAAA,KAAA,UAAA,EAAA,UAAA,EAAA,WAAA,UAAA,IAAA,SAAA,GAAA,GAAA,EAAA,OAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,OAAA,MAAA,EAAA,KAAA,MAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,GAAA,KAAA,EAAA,MAAA,EAAA,GAAA,KAAA,EAAA,MAAA,GAAA,EAAA,KAAA,QAAA,MAAA,EAAA,KAAA,MAAA,EAAA,SAAA,EAAA,QAAA,EAAA,SAAA,EAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,UAAA,EAAA,UAAA,YAAA,IAAA,SAAA,GAAA,EAAA,KAAA,UAAA,EAAA,KAAA,aAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,OAAA,SAAA,GAAA,MAAA,IAAA,MAAA,SAAA,GAAA,MAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,IAAA,EAAA,GAAA,EAAA,UAAA,KAAA,EAAA,GAAA,OAAA,IAAA,IAAA,GAAA,GAAA,yBAAA,GAAA,GAAA,QAAA,iBAAA,GAAA,cAAA,KAAA,GAAA,cAAA,IAAA,GAAA,IAAA,KAAA,SAAA,EAAA,GAAA,GAAA,GAAA,KAAA,YAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,UAAA,GAAA,GAAA,MAAA,GAAA,EAAA,UAAA,IAAA,OAAA,IAAA,IAAA,GAAA,KAAA,EAAA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,GAAA,GAAA,CAAA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,EAAA,SAAA,KAAA,EAAA,EAAA,MAAA,IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,EAAA,EAAA,OAAA,IAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,IAAA,IAAA,GAAA,UAAA,EAAA,OAAA,GAAA,QAAA,SAAA,EAAA,GAAA,EAAA,WAAA,IAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,MAAA,IAAA,KAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,OAAA,GAAA,GAAA,QAAA,IAAA,UAAA,SAAA,EAAA,GAAA,EAAA,GAAA,QAAA,GAAA,GAAA,KAAA,MAAA,EAAA,MAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,gBAAA,GAAA,EAAA,UAAA,IAAA,SAAA,IAAA,GAAA,GAAA,EAAA,WAAA,IAAA,EAAA,SAAA,EAAA,OAAA,GAAA,GAAA,IAAA,EAAA,WAAA,IAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,gBAAA,GAAA,SAAA,EAAA,SAAA,EAAA,WAAA,GAAA,GAAA,OAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,GAAA,OAAA,UAAA,MAAA,EAAA,OAAA,EAAA,SAAA,KAAA,EAAA,MAAA,MAAA,EAAA,IAAA,EAAA,SAAA,EAAA,SAAA,WAAA,EAAA,WAAA,EAAA,MAAA,EAAA,IAAA,KAAA,MAAA,EAAA,OAAA,EAAA,QAAA,KAAA,EAAA,QAAA,GAAA,EAAA,GAAA,QAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,MAAA,MAAA,OAAA,IAAA,IAAA,UAAA,GAAA,OAAA,MAAA,SAAA,QAAA,GAAA,EAAA,EAAA,IAAA,QAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,cAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,WAAA,GAAA,GAAA,EAAA,KAAA,EAAA,UAAA,GAAA,IAAA,GAAA,GAAA,IAAA,KAAA,YAAA,EAAA,MAAA,GAAA,OAAA,GAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,KAAA,KAAA,GAAA,KAAA,MAAA,EAAA,MAAA,IAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,SAAA,GAAA,GAAA,GAAA,EAAA,WAAA,GAAA,KAAA,EAAA,GAAA,OAAA,gBAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,KAAA,GAAA,KAAA,MAAA,GAAA,SAAA,KAAA,KAAA,WAAA,GAAA,IAAA,EAAA,EAAA,MAAA,GAAA,EAAA,aAAA,EAAA,EAAA,OAAA,EAAA,GAAA,IAAA,KAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,MAAA,EAAA,EAAA,QAAA,KAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,MAAA,GAAA,KAAA,IAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,OAAA,KAAA,EAAA,GAAA,OAAA,MAAA,MAAA,GAAA,EAAA,GAAA,QAAA,IAAA,EAAA,GAAA,KAAA,KAAA,GAAA,GAAA,EAAA,EAAA,OAAA,EAAA,KAAA,IAAA,IAAA,EAAA,QAAA,KAAA,MAAA,OAAA,SAAA,GAAA,MAAA,MAAA,IAAA,EAAA,GAAA,MAAA,KAAA,KAAA,WAAA,GAAA,GAAA,EAAA,GAAA,IAAA,MAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,cAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,OAAA,CAAA,KAAA,EAAA,QAAA,EAAA,EAAA,MAAA,KAAA,MAAA,GAAA,EAAA,MAAA,EAAA,KAAA,KAAA,MAAA,GAAA,EAAA,EAAA,OAAA,KAAA,EAAA,GAAA,OAAA,MAAA,EAAA,GAAA,QAAA,IAAA,EAAA,GAAA,KAAA,MAAA,GAAA,EAAA,OAAA,EAAA,GAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,QAAA,EAAA,GAAA,OAAA,KAAA,YAAA,GAAA,YAAA,EAAA,MAAA,SAAA,OAAA,QAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,GAAA,iBAAA,GAAA,EAAA,MAAA,KAAA,WAAA,KAAA,QAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,MAAA,UAAA,EAAA,QAAA,QAAA,EAAA,QAAA,YAAA,EAAA,UAAA,QAAA,QAAA,QAAA,SAAA,QAAA,QAAA,YAAA,QAAA,WAAA,SAAA,EAAA,GAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,MAAA,QAAA,EAAA,EAAA,EAAA,MAAA,EAAA,UAAA,EAAA,GAAA,KAAA,WAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,KAAA,GAAA,EAAA,MAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,GAAA,KAAA,EAAA,KAAA,GAAA,EAAA,OAAA,IAAA,EAAA,GAAA,QAAA,EAAA,GAAA,OAAA,GAAA,QAAA,EAAA,GAAA,MAAA,SAAA,GAAA,EAAA,OAAA,KAAA,GAAA,IAAA,EAAA,GAAA,QAAA,EAAA,OAAA,OAAA,EAAA,GAAA,SAAA,GAAA,EAAA,GAAA,MAAA,WAAA,KAAA,GAAA,YAAA,EAAA,GAAA,KAAA,EAAA,GAAA,YAAA,EAAA,GAAA,KAAA,WAAA,cAAA,IAAA,GAAA,MAAA,EAAA,GAAA,QAAA,KAAA,IAAA,KAAA,IAAA,SAAA,KAAA,EAAA,GAAA,MAAA,SAAA,EAAA,GAAA,MAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,GAAA,KAAA,KAAA,MAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,WAAA,EAAA,EAAA,GAAA,KAAA,WAAA,aAAA,OAAA,WAAA,GAAA,GAAA,EAAA,cAAA,SAAA,EAAA,EAAA,cAAA,UAAA,EAAA,EAAA,YAAA,EAAA,cAAA,UAAA,GAAA,KAAA,WAAA,EAAA,QAAA,KAAA,EAAA,MAAA,EAAA,YAAA,EAAA,SAAA,EAAA,UAAA,EAAA,EAAA,aAAA,EAAA,SAAA,EAAA,EAAA,cAAA,SAAA,EAAA,MAAA,IAAA,EAAA,KAAA,QAAA,EAAA,WAAA,MAAA,EAAA,QAAA,IAAA,IAAA,GAAA,GAAA,EAAA,KAAA,UAAA,GAAA,GAAA,QAAA,KAAA,SAAA,EAAA,GAAA,MAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,UAAA,OAAA,IAAA,WAAA,SAAA,GAAA,MAAA,MAAA,KAAA,WAAA,EAAA,WAAA,KAAA,QAAA,EAAA,QAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,QAAA,GAAA,eAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,IAAA,GAAA,EAAA,SAAA,KAAA,EAAA,EAAA,cAAA,EAAA,EAAA,UAAA,KAAA,EAAA,KAAA,MAAA,KAAA,KAAA,GAAA,GAAA,KAAA,SAAA,EAAA,GAAA,OAAA,IAAA,QAAA,EAAA,EAAA,IAAA,EAAA,IAAA,GAAA,EAAA,EAAA,KAAA,KAAA,EAAA,GAAA,MAAA,EAAA,OAAA,GAAA,OAAA,EAAA,GAAA,OAAA,IAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,GAAA,EAAA,aAAA,EAAA,EAAA,IAAA,OAAA,GAAA,WAAA,EAAA,IAAA,QACA,WAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAAA,IAAA,GAAA,IAAA,EAAA,SAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,QAAA,IAAA,EAAA,EAAA,KAAA,MAAA,KAAA,KAAA,KAAA,EAAA,IAAA,GAAA,EAAA,gBAAA,IAAA,WAAA,MAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,YAAA,UAAA,GAAA,EAAA,SAAA,EAAA,SAAA,CAAA,GAAA,GAAA,EAAA,KAAA,OAAA,GAAA,aAAA,OAAA,GAAA,IAAA,EAAA,MAAA,GAAA,QAAA,IAAA,IAAA,SAAA,EAAA,EAAA,GAAA,MAAA,MAAA,EAAA,EAAA,WAAA,EAAA,GAAA,EAAA,aAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,KAAA,MAAA,KAAA,OAAA,MAAA,QAAA,SAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,CAAA,OAAA,KAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,GAAA,EAAA,cAAA,KAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,qCAAA,GAAA,GAAA,QAAA,KAAA,SAAA,EAAA,GAAA,MAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,UAAA,OAAA,IAAA,WAAA,SAAA,GAAA,MAAA,MAAA,KAAA,iBAAA,MAAA,EAAA,QAAA,IAAA,QAAA,EAAA,QAAA,SAAA,MAAA,UAAA,QAAA,aAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,EAAA,IAAA,IAAA,EAAA,SAAA,GAAA,IAAA,EAAA,EAAA,QAAA,IAAA,EAAA,EAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,OAAA,IAAA,UAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,OAAA,IAAA,QAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,QAAA,WAAA,UAAA,IAAA,SAAA,GAAA,MAAA,GAAA,aAAA,aAAA,GAAA,KAAA,EAAA,WAAA,EAAA,KAAA,EAAA,SAAA,QAAA,EAAA,cAAA,EAAA,UAAA,UAAA,IAAA,SAAA,GAAA,GAAA,GAAA,EAAA,UAAA,OAAA,IAAA,EAAA,YAAA,EAAA,WAAA,cAAA,QAAA,EAAA,MAAA,WAAA,WAAA,YAAA,cAAA,cAAA,UAAA,UAAA,SAAA,cAAA,mBAAA,WAAA,EAAA,QAAA,KAAA,eAAA,MAAA,IAAA,IAAA,aAAA,GAAA,GAAA,QAAA,SAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,gBAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,MAAA,IAAA,EAAA,WAAA,GAAA,MAAA,MAAA,KAAA,SAAA,GAAA,EAAA,MAAA,SAAA,EAAA,KAAA,KAAA,EAAA,KAAA,aAAA,IAAA,EAAA,IAAA,GAAA,GAAA,IAAA,MAAA,QAAA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,WAAA,EAAA,WAAA,IAAA,EAAA,UAAA,KAAA,QAAA,GAAA,KAAA,KAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA,QAAA,IAAA,EAAA,KAAA,IAAA,GAAA,EAAA,IAAA,GAAA,EAAA,KAAA,GAAA,EAAA,YAAA,IAAA,EAAA,UAAA,GAAA,MAAA,OAAA,YAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,UAAA,QAAA,gBAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,MAAA,IAAA,EAAA,WAAA,GAAA,MAAA,MAAA,KAAA,SAAA,GAAA,EAAA,MAAA,YAAA,EAAA,KAAA,KAAA,EAAA,KAAA,aAAA,IAAA,EAAA,IAAA,GAAA,GAAA,IAAA,MAAA,QAAA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,WAAA,EAAA,WAAA,IAAA,EAAA,UAAA,KAAA,QAAA,GAAA,KAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,QAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,QAAA,IAAA,EAAA,IAAA,IAAA,GAAA,EAAA,EAAA,KAAA,GAAA,GAAA,EAAA,YAAA,IAAA,EAAA,UAAA,GAAA,MAAA,OAAA,YAAA,SAAA,EAAA,GAAA,GAAA,SAAA,EAAA,OAAA,iBAAA,IAAA,WAAA,EAAA,EAAA,KAAA,SAAA,GAAA,KAAA,YAAA,GAAA,KAAA,KAAA,EAAA,WAAA,GAAA,SAAA,GAAA,EAAA,MAAA,YAAA,EAAA,KAAA,KAAA,EAAA,KAAA,UAAA,GAAA,IAAA,WAAA,GAAA,WAAA,EAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,MAAA,QAAA,EAAA,EAAA,MAAA,EAAA,SAAA,GAAA,EAAA,YAAA,GAAA,EAAA,SAAA,QAAA,IAAA,IAAA,YAAA,KAAA,KAAA,WAAA,GAAA,IAAA,KAAA,gBAAA,KAAA,WAAA,KAAA,UAAA,KAAA,WAAA,KAAA,EAAA,GAAA,GAAA,IAAA,KAAA,kBAAA,OAAA,SAAA,SAAA,GAAA,IAAA,GAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,OAAA,EAAA,EAAA,IAAA,GAAA,IAAA,KAAA,GAAA,WAAA,IAAA,KAAA,GAAA,UAAA,KAAA,QAAA,GAAA,KAAA,QAAA,IAAA,EAAA,OAAA,CAAA,QAAA,IAAA,IAAA,IAAA,KAAA,GAAA,GAAA,QAAA,IAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,OAAA,WAAA,QAAA,EAAA,EAAA,WAAA,GAAA,KAAA,KAAA,SAAA,GAAA,GAAA,EAAA,KAAA,KAAA,WAAA,EAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,MAAA,OAAA,EAAA,MAAA,EAAA,EAAA,GAAA,gBAAA,GAAA,GAAA,GAAA,EAAA,QAAA,KAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,MAAA,OAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,SAAA,KAAA,OAAA,EAAA,SAAA,KAAA,SAAA,eAAA,GAAA,OAAA,IAAA,SAAA,EAAA,IAAA,KAAA,EAAA,WAAA,KAAA,MAAA,OAAA,GAAA,EAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,eAAA,GAAA,OAAA,IAAA,UAAA,EAAA,EAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,MAAA,gBAAA,GAAA,EAAA,QAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,UAAA,EAAA,QAAA,UAAA,QAAA,IAAA,SAAA,GAAA,GAAA,GAAA,EAAA,KAAA,KAAA,EAAA,QAAA,OAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KAAA,MAAA,QAAA,IAAA,SAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,cAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,MAAA,EAAA,UAAA,IAAA,IAAA,EAAA,YAAA,EAAA,SAAA,OAAA,EAAA,aAAA,cAAA,EAAA,WAAA,UAAA,EAAA,SAAA,EAAA,WAAA,aAAA,CAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,MAAA,EAAA,GAAA,KAAA,GAAA,MAAA,IAAA,IAAA,SAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,UAAA,GAAA,EAAA,EAAA,OAAA,KAAA,EAAA,EAAA,IAAA,EAAA,SAAA,EAAA,QAAA,EAAA,MAAA,IAAA,KAAA,GAAA,EAAA,OAAA,KAAA,EAAA,cAAA,IAAA,OAAA,EAAA,MAAA,QAAA,YAAA,WAAA,EAAA,SAAA,OAAA,IAAA,SAAA,EAAA,GAAA,MAAA,GAAA,QAAA,GAAA,EAAA,QAAA,EAAA,QAAA,EAAA,GAAA,MAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,SAAA,MAAA,IAAA,SAAA,GAAA,MAAA,QAAA,EAAA,aAAA,SAAA,KAAA,EAAA,UAAA,EAAA,KAAA,0MAAA,MAAA,KAAA,SAAA,EAAA,GAAA,EAAA,GAAA,GAAA,SAAA,EAAA,GAAA,MAAA,WAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QAAA,MAAA,EAAA,GAAA,QAAA,MAAA,SAAA,EAAA,GAAA,MAAA,MAAA,WAAA,GAAA,WAAA,GAAA,IAAA,KAAA,SAAA,EAAA,EAAA,GAAA,MAAA,MAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,MAAA,MAAA,IAAA,EAAA,KAAA,IAAA,SAAA,SAAA,EAAA,EAAA,EAAA,GAAA,MAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,WAAA,SAAA,EAAA,EAAA,GAAA,MAAA,KAAA,UAAA,OAAA,KAAA,IAAA,EAAA,MAAA,KAAA,IAAA,EAAA,GAAA,KAAA,KAAA,IAAA,IAAA,EAAA,MAAA,GAAA,IAAA,GAAA,UAAA,SAAA,GAAA,MAAA,MAAA,MAAA,EAAA,KAAA,EAAA,SAAA,SAAA,GAAA,GAAA,GAAA,CAAA,KAAA,GAAA,gBAAA,GAAA,MAAA,KAAA,KAAA,EAAA,GAAA,WAAA,EAAA,EAAA,gBAAA,EAAA,YAAA,MAAA,GAAA,EAAA,OAAA,QAAA,GAAA,EAAA,qBAAA,eAAA,SAAA,EAAA,MAAA,gBAAA,GAAA,EAAA,IAAA,IAAA,OAAA,GAAA,gBAAA,GAAA,6BAAA,GAAA,4DAAA,GAAA,iBAAA,GAAA,QAAA,GAAA,4DAAA,MAAA,MAAA,GAAA,KAAA,OAAA,KAAA,GAAA,EAAA,SAAA,KAAA,GAAA,GAAA,KAAA,GAAA,kBAAA,GAAA,QAAA,OAAA,EAAA,gBAAA,QAAA,cAAA,IAAA,GAAA,KAAA,MAAA,QAAA,GAAA,KAAA,GAAA,IAAA,QAAA,EAAA,aAAA,EAAA,OAAA,EAAA,YAAA,mDAAA,SAAA,IAAA,GAAA,KAAA,aAAA,KAAA,YAAA,IAAA,4BAAA,KAAA,qCAAA,UAAA,IAAA,MAAA,KAAA,OAAA,KAAA,QAAA,gBAAA,IAAA,cAAA,KAAA,eAAA,KAAA,gBAAA,YAAA,SAAA,OAAA,aAAA,EAAA,YAAA,EAAA,UAAA,WAAA,EAAA,UAAA,aAAA,KAAA,EAAA,SAAA,IAAA,UAAA,SAAA,EAAA,GAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,cAAA,GAAA,EAAA,EAAA,aAAA,IAAA,cAAA,EAAA,IAAA,cAAA,EAAA,IAAA,KAAA,SAAA,EAAA,GAAA,QAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,KAAA,IAAA,EAAA,EAAA,GAAA,aAAA,GAAA,EAAA,OAAA,EAAA,GAAA,GAAA,EAAA,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,KAAA,IAAA,GAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,aAAA,EAAA,EAAA,kBAAA,iBAAA,IAAA,EAAA,aAAA,GAAA,GAAA,EAAA,EAAA,kBAAA,QAAA,IAAA,EAAA,KAAA,GAAA,IAAA,MAAA,GAAA,SAAA,EAAA,KAAA,EAAA,YAAA,MAAA,EAAA,EAAA,eAAA,EAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,KAAA,EAAA,GAAA,IAAA,KAAA,EAAA,QAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,YAAA,GAAA,GAAA,GAAA,EAAA,EAAA,YAAA,GAAA,EAAA,EAAA,IAAA,EAAA,WAAA,GAAA,EAAA,EAAA,IAAA,EAAA,WAAA,GAAA,EAAA,OAAA,GAAA,EAAA,QAAA,EAAA,cAAA,aAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,IAAA,IAAA,EAAA,QAAA,gBAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,QAAA,cAAA,gBAAA,KAAA,EAAA,EAAA,EAAA,QAAA,EAAA,KAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,aAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,EAAA,UAAA,eAAA,EAAA,EAAA,eAAA,KAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GAAA,WAAA,EAAA,kBAAA,SAAA,GAAA,GAAA,EAAA,IAAA,IAAA,EAAA,CAAA,IAAA,EAAA,IAAA,KAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,GAAA,eAAA,EAAA,EAAA,GAAA,EAAA,EAAA,eAAA,MAAA,OAAA,EAAA,KAAA,GAAA,sBAAA,WAAA,MAAA,KAAA,EAAA,EAAA,MAAA,iBAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,aAAA,OAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,GAAA,MAAA,iBAAA,SAAA,GAAA,MAAA,KAAA,EAAA,SAAA,GAAA,MAAA,WAAA,SAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,QAAA,GAAA,OAAA,EAAA,EAAA,QAAA,OAAA,OAAA,MAAA,SAAA,GAAA,GAAA,GAAA,GAAA,CAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,GAAA,MAAA,IAAA,EAAA,QAAA,GAAA,SAAA,EAAA,IAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,GAAA,EAAA,KAAA,IAAA,IAAA,QAAA,GAAA,IAAA,QAAA,GAAA,GAAA,GAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA,UAAA,EAAA,KAAA,EAAA,UAAA,KAAA,cAAA,MAAA,MAAA,IAAA,MAAA,EAAA,cAAA,EAAA,GAAA,KAAA,EAAA,IAAA,eAAA,EAAA,eAAA,GAAA,EAAA,KAAA,GAAA,IAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,UAAA,EAAA,GAAA,KAAA,WAAA,GAAA,KAAA,UAAA,GAAA,GAAA,KAAA,UAAA,EAAA,MAAA,EAAA,aAAA,gBAAA,GAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,cAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,OAAA,GAAA,IAAA,EAAA,UAAA,EAAA,MAAA,QAAA,aAAA,EAAA,KAAA,EAAA,KAAA,cAAA,EAAA,YAAA,GAAA,KAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,aAAA,EAAA,OAAA,EAAA,EAAA,MAAA,GAAA,KAAA,GAAA,IAAA,KAAA,EAAA,WAAA,GAAA,MAAA,EAAA,SAAA,IAAA,EAAA,IAAA,GAAA,KAAA,GAAA,EAAA,QAAA,GAAA,OAAA,MAAA,GAAA,GAAA,KAAA,GAAA,IAAA,KAAA,KAAA,OAAA,EAAA,aAAA,EAAA,aAAA,IAAA,EAAA,iBAAA,oBAAA,EAAA,aAAA,IAAA,EAAA,KAAA,IAAA,EAAA,iBAAA,gBAAA,EAAA,KAAA,MAAA,EAAA,MAAA,EAAA,YAAA,EAAA,eAAA,GAAA,EAAA,cAAA,EAAA,iBAAA,eAAA,EAAA,aAAA,EAAA,iBAAA,SAAA,EAAA,UAAA,IAAA,EAAA,QAAA,EAAA,UAAA,IAAA,EAAA,QAAA,EAAA,UAAA,KAAA,MAAA,EAAA,UAAA,GAAA,KAAA,GAAA,WAAA,IAAA,EAAA,QAAA,KAAA,KAAA,IAAA,GAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,QAAA,GAAA,IAAA,EAAA,aAAA,EAAA,WAAA,KAAA,EAAA,EAAA,MAAA,GAAA,IAAA,GAAA,MAAA,GAAA,OAAA,GAAA,OAAA,KAAA,KAAA,QAAA,EAAA,MAAA,EAAA,SAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,CAAA,EAAA,WAAA,EAAA,GAAA,EAAA,QAAA,YAAA,EAAA,IAAA,EAAA,OAAA,EAAA,QAAA,IAAA,EAAA,WAAA,WAAA,EAAA,MAAA,YAAA,EAAA,SAAA,KAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,QAAA,GAAA,GAAA,eAAA,OAAA,IAAA,QAAA,SAAA,EAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,EAAA,EAAA,SAAA,UAAA,SAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,OAAA,EAAA,aAAA,EAAA,MAAA,MAAA,QAAA,SAAA,EAAA,GAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,MAAA,GAAA,WAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,MAAA,IAAA,EAAA,KAAA,EAAA,SAAA,EAAA,KAAA,EAAA,QAAA,OAAA,EAAA,SAAA,SAAA,GAAA,MAAA,GAAA,MAAA,IAAA,EAAA,KAAA,MAAA,SAAA,SAAA,OAAA,EAAA,QAAA,EAAA,UAAA,KAAA,EAAA,GAAA,QAAA,QAAA,SAAA,GAAA,GAAA,EAAA,OAAA,GAAA,WAAA,GAAA,KAAA,KAAA,SAAA,GAAA,EAAA,MAAA,QAAA,EAAA,KAAA,KAAA,OAAA,KAAA,KAAA,EAAA,EAAA,EAAA,KAAA,GAAA,eAAA,GAAA,GAAA,OAAA,GAAA,KAAA,GAAA,YAAA,EAAA,aAAA,KAAA,IAAA,EAAA,IAAA,WAAA,IAAA,GAAA,GAAA,KAAA,EAAA,mBAAA,EAAA,EAAA,iBAAA,OAAA,KAAA,OAAA,OAAA,OAAA,UAAA,SAAA,GAAA,MAAA,MAAA,KAAA,EAAA,WAAA,GAAA,SAAA,GAAA,EAAA,MAAA,UAAA,EAAA,KAAA,KAAA,KAAA,WAAA,GAAA,GAAA,EAAA,MAAA,EAAA,EAAA,UAAA,GAAA,OAAA,EAAA,QAAA,GAAA,EAAA,OAAA,MAAA,KAAA,SAAA,GAAA,GAAA,GAAA,EAAA,WAAA,EAAA,OAAA,MAAA,KAAA,SAAA,GAAA,EAAA,MAAA,QAAA,EAAA,EAAA,KAAA,KAAA,GAAA,MAAA,OAAA,WAAA,MAAA,MAAA,SAAA,KAAA,WAAA,EAAA,SAAA,KAAA,SAAA,EAAA,MAAA,YAAA,KAAA,cAAA,SAAA,EAAA,KAAA,QAAA,OAAA,SAAA,GAAA,MAAA,GAAA,aAAA,GAAA,EAAA,cAAA,GAAA,EAAA,KAAA,QAAA,QAAA,SAAA,GAAA,OAAA,EAAA,KAAA,QAAA,OAAA,GAAA,IAAA,IAAA,OAAA,GAAA,QAAA,GAAA,SAAA,GAAA,wCAAA,GAAA,oCAAA,GAAA,MAAA,SAAA,EAAA,GAAA,GAAA,GAAA,KAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,WAAA,GAAA,IAAA,MAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,mBAAA,GAAA,IAAA,mBAAA,GAAA,IAAA,SAAA,IAAA,EAAA,EAAA,cAAA,EAAA,aAAA,aAAA,EAAA,QAAA,IAAA,EAAA,SAAA,EAAA,cAAA,GAAA,EAAA,KAAA,EAAA,WAAA,EAAA,KAAA,KAAA,KAAA,aAAA,KAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,OAAA,GAAA,KAAA,KAAA,QAAA,GAAA,MAAA,EAAA,GAAA,QAAA,UAAA,WAAA,MAAA,GAAA,MAAA,KAAA,mBAAA,eAAA,WAAA,MAAA,MAAA,IAAA,WAAA,GAAA,GAAA,EAAA,KAAA,KAAA,WAAA,OAAA,GAAA,EAAA,UAAA,GAAA,OAAA,OAAA,WAAA,GAAA,GAAA,KAAA,IAAA,OAAA,MAAA,OAAA,EAAA,MAAA,GAAA,cAAA,GAAA,KAAA,KAAA,YAAA,GAAA,KAAA,KAAA,KAAA,UAAA,GAAA,KAAA,MAAA,IAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,MAAA,KAAA,OAAA,OAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,IAAA,EAAA,SAAA,GAAA,OAAA,KAAA,EAAA,KAAA,MAAA,EAAA,QAAA,GAAA,YAAA,KAAA,EAAA,KAAA,MAAA,EAAA,QAAA,GAAA,WAAA,SAAA,EAAA,aAAA,IAAA,WAAA,IAAA,MAAA,IAAA,gBAAA,MAAA,KAAA,IAAA,IAAA,EAAA,MAAA,IAAA,EAAA,IAAA,KAAA,KAAA,GAAA,EAAA,aAAA,KAAA,GAAA,aAAA,EAAA,YAAA,WAAA,WAAA,IAAA,GAAA,KAAA,IAAA,GAAA,OAAA,EAAA,OAAA,IAAA,mBAAA,IAAA,EAAA,KAAA,KAAA,GAAA,EAAA,cAAA,SAAA,GAAA,GAAA,EAAA,OAAA,GAAA,MAAA,KAAA,EAAA,aAAA,KAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,MAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,UAAA,EAAA,GAAA,EAAA,UAAA,EAAA,GAAA,UAAA,EAAA,kBAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,aAAA,EAAA,sBAAA,EAAA,oBAAA,iBAAA,KAAA,IAAA,GAAA,EAAA,iBAAA,EAAA,EAAA,GAAA,GAAA,SAAA,GAAA,MAAA,YAAA,UAAA,IAAA,GAAA,EAAA,EAAA,OAAA,EAAA,QAAA,KAAA,UAAA,EAAA,EAAA,QAAA,UAAA,EAAA,EAAA,EAAA,OAAA,EAAA,YAAA,EAAA,GAAA,EAAA,SAAA,EAAA,OAAA,EAAA,WAAA,gBAAA,GAAA,cAAA,KAAA,EAAA,cAAA,OAAA,EAAA,4BAAA,EAAA,OAAA,IAAA,EAAA,QAAA,EAAA,SAAA,EAAA,GAAA,GAAA,EAAA,QAAA,KAAA,EAAA,KAAA,EAAA,YAAA,EAAA,MAAA,MAAA,MAAA,GAAA,GAAA,EAAA,KAAA,KAAA,MAAA,WAAA,GAAA,MAAA,SAAA,EAAA,WAAA,SAAA,OAAA,6FAAA,UAAA,OAAA,uBAAA,YAAA,cAAA,SAAA,GAAA,MAAA,GAAA,WAAA,GAAA,MAAA,EAAA,cAAA,SAAA,SAAA,GAAA,SAAA,EAAA,QAAA,EAAA,OAAA,GAAA,EAAA,cAAA,EAAA,KAAA,SAAA,EAAA,cAAA,SAAA,SAAA,GAAA,GAAA,EAAA,YAAA,CAAA,GAAA,GAAA,CAAA,QAAA,KAAA,SAAA,EAAA,GAAA,EAAA,EAAA,YAAA,MAAA,OAAA,EAAA,QAAA,EAAA,cAAA,IAAA,EAAA,MAAA,GAAA,aAAA,EAAA,SAAA,GAAA,EAAA,SAAA,EAAA,KAAA,GAAA,EAAA,UAAA,EAAA,KAAA,IAAA,IAAA,EAAA,QAAA,EAAA,KAAA,YAAA,EAAA,KAAA,MAAA,WAAA,GAAA,QAAA,IAAA,OAAA,GAAA,mBAAA,GAAA,WAAA,MAAA,WAAA,cAAA,WAAA,GAAA,GAAA,GAAA,OAAA,EAAA,QAAA,IAAA,IAAA,OAAA,MAAA,IAAA,EAAA,KAAA,EAAA,cAAA,aAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,SAAA,IAAA,GAAA,KAAA,EAAA,KAAA,MAAA,gBAAA,GAAA,QAAA,EAAA,aAAA,IAAA,QAAA,sCAAA,GAAA,KAAA,EAAA,OAAA,OAAA;MAAA,IAAA,UAAA,EAAA,UAAA,IAAA,EAAA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,EAAA,GAAA,EAAA,GAAA,QAAA,GAAA,KAAA,GAAA,EAAA,SAAA,IAAA,EAAA,MAAA,GAAA,KAAA,EAAA,KAAA,IAAA,KAAA,EAAA,MAAA,IAAA,GAAA,EAAA,WAAA,eAAA,WAAA,MAAA,IAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,UAAA,GAAA,OAAA,EAAA,EAAA,GAAA,EAAA,GAAA,WAAA,EAAA,WAAA,EAAA,OAAA,WAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,cAAA,EAAA,cAAA,GAAA,KAAA,IAAA,GAAA,EAAA,WAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,UAAA,SAAA,EAAA,UAAA,SAAA,EAAA,EAAA,GAAA,IAAA,GAAA,gBAAA,GAAA,MAAA,KAAA,kBAAA,KAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,CAAA,IAAA,GAAA,GAAA,KAAA,GAAA,GAAA,KAAA,OAAA,IAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,eAAA,GAAA,EAAA,GAAA,GAAA,EAAA,QAAA,EAAA,GAAA,SAAA,EAAA,SAAA,EAAA,aAAA,IAAA,IAAA,EAAA,GAAA,IAAA,GAAA,GAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,gBAAA,IAAA,GAAA,MAAA,IAAA,MAAA,KAAA,UAAA,IAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,IAAA,OAAA,IAAA,IAAA,EAAA,EAAA,KAAA,EAAA,MAAA,IAAA,EAAA,EAAA,MAAA,EAAA,IAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,QAAA,GAAA,gBAAA,KAAA,EAAA,QAAA,EAAA,OAAA,GAAA,EAAA,MAAA,IAAA,EAAA,KAAA,EAAA,SAAA,OAAA,KAAA,IAAA,KAAA,SAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,EAAA,SAAA,OAAA,EAAA,UAAA,IAAA,KAAA,GAAA,KAAA,SAAA,GAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,MAAA,EAAA,MAAA,YAAA,WAAA,eAAA,YAAA,cAAA,YAAA,SAAA,EAAA,GAAA,EAAA,GAAA,GAAA,SAAA,GAAA,MAAA,MAAA,GAAA,EAAA,MAAA,EAAA,KAAA,QAAA,SAAA,SAAA,GAAA,MAAA,GAAA,KAAA,EAAA,OAAA,SAAA,GAAA,MAAA,KAAA,EAAA,OAAA,OAAA,IAAA,IAAA,EAAA,SAAA,eAAA,GAAA,QAAA,UAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAA,EAAA,EAAA,GAAA,IAAA,YAAA,IAAA,EAAA,MAAA,SAAA,YAAA,EAAA,EAAA,SAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,QAAA,GAAA,aAAA,GAAA,UAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,GAAA,EAAA,EAAA,WAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,WAAA,IAAA,GAAA,EAAA,WAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,MAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,GAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,EAAA,IAAA,KAAA,EAAA,GAAA,QAAA,OAAA,SAAA,GAAA,GAAA,UAAA,OAAA,MAAA,UAAA,EAAA,KAAA,KAAA,KAAA,SAAA,GAAA,EAAA,OAAA,UAAA,KAAA,EAAA,IAAA,IAAA,GAAA,EAAA,EAAA,KAAA,GAAA,GAAA,IAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,aAAA,OAAA,IAAA,EAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,UAAA,GAAA,wBAAA,KAAA,EAAA,EAAA,yBAAA,EAAA,EAAA,IAAA,IAAA,EAAA,IAAA,EAAA,YAAA,EAAA,UAAA,KAAA,EAAA,KAAA,EAAA,YAAA,EAAA,aAAA,GAAA,QAAA,SAAA,WAAA,GAAA,KAAA,GAAA,CAAA,GAAA,GAAA,EAAA,EAAA,KAAA,GAAA,GAAA,IAAA,EAAA,KAAA,EAAA,OAAA,UAAA,EAAA,IAAA,EAAA,YAAA,EAAA,EAAA,yBAAA,EAAA,KAAA,eAAA,EAAA,KAAA,SAAA,EAAA,SAAA,EAAA,GAAA,UAAA,EAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,kBAAA,GAAA,EAAA,MAAA,EAAA,IAAA,EAAA,GAAA,mBAAA,KAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,aAAA,GAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,cAAA,MAAA,aAAA,WAAA,MAAA,MAAA,IAAA,WAAA,IAAA,GAAA,GAAA,KAAA,cAAA,GAAA,IAAA,EAAA,SAAA,EAAA,SAAA,WAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,YAAA,OAAA,IAAA,QAAA,EAAA,MAAA,WAAA,cAAA,UAAA,eAAA,SAAA,EAAA,GAAA,GAAA,GAAA,gBAAA,CAAA,GAAA,GAAA,GAAA,SAAA,GAAA,MAAA,IAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,OAAA,UAAA,EAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,EAAA,YAAA,EAAA,EAAA,EAAA,EAAA,aAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,SAAA,EAAA,MAAA,MAAA,QAAA,SAAA,EAAA,GAAA,EAAA,SAAA,GAAA,EAAA,EAAA,cAAA,SAAA,EAAA,GAAA,MAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,KAAA,GAAA,EAAA,GAAA,WAAA,GAAA,KAAA,GAAA,WAAA,EAAA,MAAA,OAAA,SAAA,MAAA,SAAA,SAAA,EAAA,GAAA,EAAA,MAAA,QAAA,QAAA,EAAA,QAAA,EAAA,GAAA,QAAA,GAAA,SAAA,EAAA,GAAA,EAAA,GAAA,GAAA,SAAA,EAAA,GAAA,GAAA,GAAA,UAAA,SAAA,GAAA,iBAAA,IAAA,EAAA,IAAA,KAAA,GAAA,KAAA,EAAA,SAAA,SAAA,OAAA,IAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,GAAA,SAAA,GAAA,EAAA,SAAA,gBAAA,SAAA,GAAA,IAAA,EAAA,UAAA,EAAA,EAAA,gBAAA,KAAA,IAAA,EAAA,KAAA,SAAA,GAAA,EAAA,SAAA,GAAA,EAAA,KAAA,SAAA,GAAA,EAAA,SAAA,GAAA,EAAA,SAAA,KAAA,SAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,WAAA,EAAA,GAAA,KAAA,WAAA,MAAA,MAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,kBAAA,SAAA,OAAA,KAAA,OAAA,YAAA,WAAA,MAAA,IAAA,IAAA,IAAA,EAAA,OAAA,GAAA,EAAA,CAAA,OAAA,GAAA,WAAA,SAAA,GAAA,MAAA,GAAA,IAAA,IAAA,EAAA,EAAA,IAAA,GAAA,EAAA,SAAA,IAAA,EAAA,OAAA,IAAA,SAAA,KAAA,KAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAEA,OCLA,aAAA,SAAA,eAAA,UAAA,SAAA,EAAA,EAAA,GAGA,GAAA,GAAA,+HASA,EAAA,SAAA,GACA,GAAA,GAAA,EAAA,OACA,OAAA,CAEA,IAAA,EAAA,OAAA,EAAA,CACA,GAAA,EAAA,MAAA,MAAA,OAAA,EAEA,OAAA,CAEA,IAAA,EAAA,MAAA,MAAA,QAAA,EACA,OAAA,IAKA,EAAA,SAAA,GAIA,IAAA,GAFA,GADA,EAAA,EAAA,MAAA,QAGA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,GAAA,GAAA,EAAA,GAAA,MAAA,KAEA,IAAA,IAAA,EAAA,CACA,GAAA,GAAA,EAAA,GAAA,MAAA,IACA,GAAA,SAAA,QAAA,EAAA,SAAA,EAAA,IAAA,EAAA,GAAA,EAAA,SAAA,QACA,EAAA,SAAA,QAAA,EAAA,SAAA,EAAA,IAAA,EAAA,GAAA,EAAA,SAAA,QACA,EAAA,EAAA,YAAA,WAAA,EAAA,GAAA,EAAA,QAGA,GAAA,EAAA,YAAA,WAAA,EAAA,GAAA,EAAA,GAGA,GAAA,WAAA,OAAA,MAAA,EAAA,UAIA,EAAA,WACA,GAAA,GAAA,SAAA,eAAA,SAAA,KACA,GAAA,sBAAA,MAAA,WACA,QAAA,IAAA,aAAA,GACA,EAAA,IACA,EAAA,GACA,SAAA,eAAA,SAAA,MAAA,IAGA,EAAA,WAAA,KAAA,KAKA,QACA,iBAAA,EACA,KAAA,KAIA,QCpEA,QACA,MACA,YACA,QAAA,MAGA,OACA,WAAA,gCACA,OAAA,qCAIA,SAAA,eAAA,YAAA,UAAA,SAAA,EAAA,GAEA,EAAA,SAMA,OAAA,OAAA","sourcesContent":["//     Underscore.js 1.5.0\n//     http://underscorejs.org\n//     (c) 2009-2011 Jeremy Ashkenas, DocumentCloud Inc.\n//     (c) 2011-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n!function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,v=e.reduce,h=e.reduceRight,d=e.filter,g=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,_=Object.keys,w=i.bind,j=function(n){return n instanceof j?n:this instanceof j?(this._wrapped=n,void 0):new j(n)};\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=j),exports._=j):n._=j,j.VERSION=\"1.5.0\";var A=j.each=j.forEach=function(n,t,e){if(null!=n)if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a in n)if(j.has(n,a)&&t.call(e,n[a],a,n)===r)return};j.map=j.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e.push(t.call(r,n,u,i))}),e)};var E=\"Reduce of empty array with no initial value\";j.reduce=j.foldl=j.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduce===v)return e&&(t=j.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(E);return r},j.reduceRight=j.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduceRight===h)return e&&(t=j.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=j.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(E);return r},j.find=j.detect=function(n,t,r){var e;return O(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},j.filter=j.select=function(n,t,r){var e=[];return null==n?e:d&&n.filter===d?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&e.push(n)}),e)},j.reject=function(n,t,r){return j.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},j.every=j.all=function(n,t,e){t||(t=j.identity);var u=!0;return null==n?u:g&&n.every===g?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var O=j.some=j.any=function(n,t,e){t||(t=j.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};j.contains=j.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:O(n,function(n){return n===t})},j.invoke=function(n,t){var r=o.call(arguments,2),e=j.isFunction(t);return j.map(n,function(n){return(e?t:n[t]).apply(n,r)})},j.pluck=function(n,t){return j.map(n,function(n){return n[t]})},j.where=function(n,t,r){return j.isEmpty(t)?r?void 0:[]:j[r?\"find\":\"filter\"](n,function(n){for(var r in t)if(t[r]!==n[r])return!1;return!0})},j.findWhere=function(n,t){return j.where(n,t,!0)},j.max=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.max.apply(Math,n);if(!t&&j.isEmpty(n))return-1/0;var e={computed:-1/0,value:-1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a>e.computed&&(e={value:n,computed:a})}),e.value},j.min=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.min.apply(Math,n);if(!t&&j.isEmpty(n))return 1/0;var e={computed:1/0,value:1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a<e.computed&&(e={value:n,computed:a})}),e.value},j.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=j.random(r++),e[r-1]=e[t],e[t]=n}),e};var F=function(n){return j.isFunction(n)?n:function(t){return t[n]}};j.sortBy=function(n,t,r){var e=F(t);return j.pluck(j.map(n,function(n,t,u){return{value:n,index:t,criteria:e.call(r,n,t,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index<t.index?-1:1}),\"value\")};var k=function(n,t,r,e){var u={},i=F(null==t?j.identity:t);return A(n,function(t,a){var o=i.call(r,t,a,n);e(u,o,t)}),u};j.groupBy=function(n,t,r){return k(n,t,r,function(n,t,r){(j.has(n,t)?n[t]:n[t]=[]).push(r)})},j.countBy=function(n,t,r){return k(n,t,r,function(n,t){j.has(n,t)||(n[t]=0),n[t]++})},j.sortedIndex=function(n,t,r,e){r=null==r?j.identity:F(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;r.call(e,n[o])<u?i=o+1:a=o}return i},j.toArray=function(n){return n?j.isArray(n)?o.call(n):n.length===+n.length?j.map(n,j.identity):j.values(n):[]},j.size=function(n){return null==n?0:n.length===+n.length?n.length:j.keys(n).length},j.first=j.head=j.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:o.call(n,0,t)},j.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},j.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},j.rest=j.tail=j.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},j.compact=function(n){return j.filter(n,j.identity)};var R=function(n,t,r){return t&&j.every(n,j.isArray)?c.apply(r,n):(A(n,function(n){j.isArray(n)||j.isArguments(n)?t?a.apply(r,n):R(n,t,r):r.push(n)}),r)};j.flatten=function(n,t){return R(n,t,[])},j.without=function(n){return j.difference(n,o.call(arguments,1))},j.uniq=j.unique=function(n,t,r,e){j.isFunction(t)&&(e=r,r=t,t=!1);var u=r?j.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:j.contains(a,r))||(a.push(r),i.push(n[e]))}),i},j.union=function(){return j.uniq(j.flatten(arguments,!0))},j.intersection=function(n){var t=o.call(arguments,1);return j.filter(j.uniq(n),function(n){return j.every(t,function(t){return j.indexOf(t,n)>=0})})},j.difference=function(n){var t=c.apply(e,o.call(arguments,1));return j.filter(n,function(n){return!j.contains(t,n)})},j.zip=function(){return j.unzip.apply(j,o.call(arguments))},j.unzip=function(){for(var n=j.max(j.pluck(arguments,\"length\").concat(0)),t=new Array(n),r=0;n>r;r++)t[r]=j.pluck(arguments,\"\"+r);return t},j.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},j.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if(\"number\"!=typeof r)return e=j.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},j.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},j.range=function(n,t,r){arguments.length<=1&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=new Array(e);e>u;)i[u++]=n,n+=r;return i};var M=function(){};j.bind=function(n,t){var r,e;if(w&&n.bind===w)return w.apply(n,o.call(arguments,1));if(!j.isFunction(n))throw new TypeError;return r=o.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(o.call(arguments)));M.prototype=n.prototype;var u=new M;M.prototype=null;var i=n.apply(u,r.concat(o.call(arguments)));return Object(i)===i?i:u}},j.partial=function(n){var t=o.call(arguments,1);return function(){return n.apply(this,t.concat(o.call(arguments)))}},j.bindAll=function(n){var t=o.call(arguments,1);if(0===t.length)throw new Error(\"bindAll must be passed function names\");return A(t,function(t){n[t]=j.bind(n[t],n)}),n},j.memoize=function(n,t){var r={};return t||(t=j.identity),function(){var e=t.apply(this,arguments);return j.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},j.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},j.defer=function(n){return j.delay.apply(j,[n,1].concat(o.call(arguments,1)))},j.throttle=function(n,t,r){var e,u,i,a=null,o=0;r||(r={});var c=function(){o=new Date,a=null,i=n.apply(e,u)};return function(){var l=new Date;o||r.leading!==!1||(o=l);var f=t-(l-o);return e=this,u=arguments,0>=f?(clearTimeout(a),a=null,o=l,i=n.apply(e,u)):a||r.trailing===!1||(a=setTimeout(c,f)),i}},j.debounce=function(n,t,r){var e,u=null;return function(){var i=this,a=arguments,o=function(){u=null,r||(e=n.apply(i,a))},c=r&&!u;return clearTimeout(u),u=setTimeout(o,t),c&&(e=n.apply(i,a)),e}},j.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},j.wrap=function(n,t){return function(){var r=[n];return a.apply(r,arguments),t.apply(this,r)}},j.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},j.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},j.keys=_||function(n){if(n!==Object(n))throw new TypeError(\"Invalid object\");var t=[];for(var r in n)j.has(n,r)&&t.push(r);return t},j.values=function(n){var t=[];for(var r in n)j.has(n,r)&&t.push(n[r]);return t},j.pairs=function(n){var t=[];for(var r in n)j.has(n,r)&&t.push([r,n[r]]);return t},j.invert=function(n){var t={};for(var r in n)j.has(n,r)&&(t[n[r]]=r);return t},j.functions=j.methods=function(n){var t=[];for(var r in n)j.isFunction(n[r])&&t.push(r);return t.sort()},j.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},j.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},j.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)j.contains(r,u)||(t[u]=n[u]);return t},j.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]===void 0&&(n[r]=t[r])}),n},j.clone=function(n){return j.isObject(n)?j.isArray(n)?n.slice():j.extend({},n):n},j.tap=function(n,t){return t(n),n};var S=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof j&&(n=n._wrapped),t instanceof j&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case\"[object String]\":return n==String(t);case\"[object Number]\":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case\"[object Date]\":case\"[object Boolean]\":return+n==+t;case\"[object RegExp]\":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if(\"object\"!=typeof n||\"object\"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;var a=n.constructor,o=t.constructor;if(a!==o&&!(j.isFunction(a)&&a instanceof a&&j.isFunction(o)&&o instanceof o))return!1;r.push(n),e.push(t);var c=0,f=!0;if(\"[object Array]\"==u){if(c=n.length,f=c==t.length)for(;c--&&(f=S(n[c],t[c],r,e)););}else{for(var s in n)if(j.has(n,s)&&(c++,!(f=j.has(t,s)&&S(n[s],t[s],r,e))))break;if(f){for(s in t)if(j.has(t,s)&&!c--)break;f=!c}}return r.pop(),e.pop(),f};j.isEqual=function(n,t){return S(n,t,[],[])},j.isEmpty=function(n){if(null==n)return!0;if(j.isArray(n)||j.isString(n))return 0===n.length;for(var t in n)if(j.has(n,t))return!1;return!0},j.isElement=function(n){return!(!n||1!==n.nodeType)},j.isArray=x||function(n){return\"[object Array]\"==l.call(n)},j.isObject=function(n){return n===Object(n)},A([\"Arguments\",\"Function\",\"String\",\"Number\",\"Date\",\"RegExp\"],function(n){j[\"is\"+n]=function(t){return l.call(t)==\"[object \"+n+\"]\"}}),j.isArguments(arguments)||(j.isArguments=function(n){return!(!n||!j.has(n,\"callee\"))}),\"function\"!=typeof/./&&(j.isFunction=function(n){return\"function\"==typeof n}),j.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},j.isNaN=function(n){return j.isNumber(n)&&n!=+n},j.isBoolean=function(n){return n===!0||n===!1||\"[object Boolean]\"==l.call(n)},j.isNull=function(n){return null===n},j.isUndefined=function(n){return n===void 0},j.has=function(n,t){return f.call(n,t)},j.noConflict=function(){return n._=t,this},j.identity=function(n){return n},j.times=function(n,t,r){for(var e=Array(Math.max(0,n)),u=0;n>u;u++)e[u]=t.call(r,u);return e},j.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))};var I={escape:{\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"/\":\"&#x2F;\"}};I.unescape=j.invert(I.escape);var T={escape:new RegExp(\"[\"+j.keys(I.escape).join(\"\")+\"]\",\"g\"),unescape:new RegExp(\"(\"+j.keys(I.unescape).join(\"|\")+\")\",\"g\")};j.each([\"escape\",\"unescape\"],function(n){j[n]=function(t){return null==t?\"\":(\"\"+t).replace(T[n],function(t){return I[n][t]})}}),j.result=function(n,t){if(null==n)return void 0;var r=n[t];return j.isFunction(r)?r.call(n):r},j.mixin=function(n){A(j.functions(n),function(t){var r=j[t]=n[t];j.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),D.call(this,r.apply(j,n))}})};var N=0;j.uniqueId=function(n){var t=++N+\"\";return n?n+t:t},j.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g};var q=/(.)^/,B={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\t\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},z=/\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;j.template=function(n,t,r){var e;r=j.defaults({},r,j.templateSettings);var u=new RegExp([(r.escape||q).source,(r.interpolate||q).source,(r.evaluate||q).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(z,function(n){return\"\\\\\"+B[n]}),r&&(a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\"),e&&(a+=\"'+\\n((__t=(\"+e+\"))==null?'':__t)+\\n'\"),u&&(a+=\"';\\n\"+u+\"\\n__p+='\"),i=o+t.length,t}),a+=\"';\\n\",r.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{e=new Function(r.variable||\"obj\",\"_\",a)}catch(o){throw o.source=a,o}if(t)return e(t,j);var c=function(n){return e.call(this,n,j)};return c.source=\"function(\"+(r.variable||\"obj\")+\"){\\n\"+a+\"}\",c},j.chain=function(n){return j(n).chain()};var D=function(n){return this._chain?j(n).chain():n};j.mixin(j),A([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){var t=e[n];j.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),\"shift\"!=n&&\"splice\"!=n||0!==r.length||delete r[0],D.call(this,r)}}),A([\"concat\",\"join\",\"slice\"],function(n){var t=e[n];j.prototype[n]=function(){return D.call(this,t.apply(this._wrapped,arguments))}}),j.extend(j.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}.call(this);\n//# sourceMappingURL=underscore-min.map;\ndefine(\"underscore\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global._;\n    };\n}(this)));\n\n","define('common',[\"underscore\"], function(_) {\n\t\"use strict\";\n\t\n\tvar defaults = {\n\t\txBounds: 5, yBounds: 3, maxCoord: 50, maxInstruction: 100\n\t};\n\t\n\t/* \n\t * [1-9] check if value is a positive number \n\t * [0-9] check if value greater than 0\n\t */\n\tvar isNumber = function(value) {\n\t\tif(/^(\\-|\\+)?([1-9]+|Infinity)$/.test(value))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\t\n\tvar defaultsObj = function(xBounds, yBounds, maxCoord, maxInstruction) {\n\t\tthis.xBounds = isNumber(xBounds) ? 5 : parseInt(xBounds, 10);\n\t\tthis.yBounds = isNumber(yBounds) ? 3 : parseInt(yBounds, 10);\n\t\tthis.maxCord = isNumber(maxCord) ? 50 : parseInt(maxCord, 10);\n\t\tthis.maxInstruction = isNumber(maxInstruction) ? 100 : parseInt(maxInstruction, 10);\n\t}\n\t\n\tvar isPosSafe = function(pos, posBounds) {\n\t\tif(pos < 0 || pos > parseInt(posBounds, 10)) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\treturn true;\n\t\t}\n\t};\n\t\n\treturn {\n\t\tisNumber: isNumber,\n\t\tdefaults: defaults,\n\t\tisPosSafe: isPosSafe\n\t}\n});\n","define('robot',[\"common\"], function(common) {\n\t\"use strict\";\n\n\t// robot definition\n\tvar robot = function(name, xPos, yPos, orientation, isAlive) {\n\t\tthis.name = name;\n\t\tthis.xPos = parseInt(xPos, 10);\n\t\tthis.yPos = parseInt(yPos, 10);\n\t\t\n\t\tthis.coords = function() {\n\t\t\treturn this.xPos + \", \" + this.yPos;\n\t\t};\n\t\t\n\t\tthis.orientation = orientation.toUpperCase();\n\t\tthis.isAlive = isAlive;\n\t\t\n\t\tthis.isAliveStr = function() {\n\t\t\treturn (!this.isAlive) ? \" LOST\" : \"\";\n\t\t};\n\t\t\n\t\tthis.output = function() {\n\t\t\tvar outputStr = this.xPos + \" \" + this.yPos + \" \" + this.orientation + this.isAliveStr();\n\t\t\treturn outputStr;\n\t\t};\n\t\t\n\t\tthis.isBotValid = function() {\n\t\t\tif(!common.isPosSafe(this.xPos , common.defaults.maxCoord) || !common.isPosSafe(this.yPos, common.defaults.maxCoord)) {\n\t\t\t\tconsole.log(\"Error creating '%s'. A single coordinate must be a positive number less than %s!\", this.name, common.defaults.maxCoord);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t};\n\t\n\treturn {\n\t\trobot: robot\n\t}\n\t\n});\n","define('robotActions',[\"underscore\", \"common\", \"robot\"], function(_, common, robotObj) {\n\t\"use strict\";\n\n\tvar _lostList = []; //manages grid points of lost robots\n\n\t// cardinal points \"map\" with handy lookup methods\n\tvar _cardinalPoints = { \n\t\tpoints: { N:0, E:90, S:180, W:270 },\n\n\t\tgetPointName: function(findDegree) {\n\t\t\tfor (var p in this.points) {\n\t\t\t\tif (findDegree === this.points[p]) {\n\t\t\t\t\treturn p;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetDegree: function(findPoint) {\n\t\t\tfor (var p in this.points) {\n\t\t\t\tif (findPoint === p) {\n\t\t\t\t\treturn this.points[p];\n\t\t\t\t}\n\t\t\t}  \n\t\t}\n\t};\n\n\t// parse and process bot instructions\n\tvar instructBot = function (botName, positionStr, instructionsStr) {\n\t\tvar posArr = positionStr.split(\" \");\n\n\t\tvar bot = new robotObj.robot(botName, posArr[0], posArr[1], posArr[2], true); // create a new robot based on instructions\n\n\t\t// only process instructions if the bot is valid\n\t\tif (bot.isBotValid()) {\n\t\t\tinstructionsStr = instructionsStr.substring(0, common.defaults.maxInstruction);\n\n\t\t\tfor (var i = 0; i < instructionsStr.length; i++) {\n\t\t\t\tif(_processCommands(instructionsStr.charAt(i).toUpperCase(), bot) === false) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn bot.output();\n\t\t}\n\t\telse {\n\t\t\treturn \"Failed to create '\" + botName + \"', please view logs.\";\n\t\t}\n\t};\n\n\t// determines which type of move to execute: L/R/F\n\tvar _processCommands = function (char, bot) {\n\t\tswitch (char) {\n\t\t\tcase \"L\":\n\t\t\tcase \"R\":\n\t\t\t\tbot.orientation = _robotCommands.turnBot(bot.orientation, char);\n\t\t\t\tbreak;\n\t\t\tcase \"F\":\n\t\t\t\t_robotCommands.moveBot(bot);\n\t\t\t\tbreak;\n\t\t\tdefault: \n\t\t\t\tconsole.log(\"Invalid command received while processing '\" + bot.name + \"', moving to next character.\");\n\t\t}\n\n\t\treturn bot.isAlive; // dealbreaking flag, halts looping on false\n\t};\n\n\t// store command types in this object; this should support \"bolting\" on future commands. \n\t// _processCommands will need new keys to call new command types\n\tvar _robotCommands = {\n\t\tturnBot: function(orientation, char) {\n\t\t\treturn _turnBot(orientation, char);\n\t\t},\n\t\tmoveBot: function(bot) {\n\t\t\t_moveBot(bot);\n\t\t}\n\t};\n\n\t// turn bot L/R and return new orientaion\n\tvar _turnBot = function(orientation, direction) {\n\t\tvar angle = _cardinalPoints.getDegree(orientation);\n\n\t\tif(direction.toUpperCase() === \"R\") {\n\t\t\tangle = (angle === 270) ? 0 : angle + 90; // make sure angle never becomes 360 since that value is not mapped\n\t\t}\n\t\telse if (direction.toUpperCase() === \"L\") {\n\t\t\tangle = (angle === 0) ? 270 : angle - 90; // make sure angle never becomes 360 since that value is not mapped\n\t\t}\n\n\t\treturn _cardinalPoints.getPointName(angle); // orientation is defined in cardinal points so lets go back to that instead of angles\n\t};\n\n\tvar _processMotion = function(bot, tempPos, axis) {\n    axis = axis.toLowerCase();\n    switch (_hasScent(bot.coords(), tempPos, common.defaults[axis + \"Bounds\"])) {\n        case true:\n          break;\n        case false:\n          bot.isAlive = false;\n          _lostList.push(bot.xPos + \", \" + bot.yPos);\n          break;\n        case null:\n          bot[axis + \"Pos\"] = tempPos;\n          break;\n      }\n  };\n  \n  var _moveBot = function(bot) {\n\n\t\t// orientation determines which axis to increment/decrement along\n\t\tswitch (bot.orientation) {\n\t\t\t\tcase \"N\":\n          _processMotion(bot, (bot.yPos + 1), \"y\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"S\":\n\t\t\t\t\t_processMotion(bot, (bot.yPos - 1), \"y\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"E\":\n\t\t\t\t\t_processMotion(bot, (bot.xPos + 1), \"x\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"W\":\n\t\t\t\t\t_processMotion(bot, (bot.xPos - 1), \"x\");\n\t\t\t\t\tbreak;\n\t\t}\n\n\t};\n\n\tvar _hasScent = function(posStr, tempPos, posBounds) {\n\n\t\tif (_.contains(_lostList, posStr) && !common.isPosSafe(tempPos,posBounds)) {\n\t\t\treturn true; \n//      check if location has scent by looking in the lost list\n//      then if the next move is fatal, don't move robot\n\t\t}\n\t\telse {\n\t\t\tif(!common.isPosSafe(tempPos,posBounds)) {\n\t\t\t\treturn false; \n//         if location does NOT have a scent and the next move is fatal let it happen, \n//        but add the location to the lost list and update the bot status to LOST\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn null; // if the next move is safe let it happen\n\t\t\t}\n\t\t}\n\n\t};\n\n\treturn {\n\t\tdefaults: common.defaults,\n\t\tinstructBot: instructBot\n\t};\n});\n","/*! jQuery v2.1.3 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */\n!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.3\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=hb(),z=hb(),A=hb(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",L=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",M=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",N=M.replace(\"w\",\"w#\"),O=\"\\\\[\"+L+\"*(\"+M+\")(?:\"+L+\"*([*^$|!~]?=)\"+L+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+N+\"))|)\"+L+\"*\\\\]\",P=\":(\"+M+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+O+\")*)|.*)\\\\)|)\",Q=new RegExp(L+\"+\",\"g\"),R=new RegExp(\"^\"+L+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+L+\"+$\",\"g\"),S=new RegExp(\"^\"+L+\"*,\"+L+\"*\"),T=new RegExp(\"^\"+L+\"*([>+~]|\"+L+\")\"+L+\"*\"),U=new RegExp(\"=\"+L+\"*([^\\\\]'\\\"]*?)\"+L+\"*\\\\]\",\"g\"),V=new RegExp(P),W=new RegExp(\"^\"+N+\"$\"),X={ID:new RegExp(\"^#(\"+M+\")\"),CLASS:new RegExp(\"^\\\\.(\"+M+\")\"),TAG:new RegExp(\"^(\"+M.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+O),PSEUDO:new RegExp(\"^\"+P),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+L+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+L+\"*(?:([+-]|)\"+L+\"*(\\\\d+)|))\"+L+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+K+\")$\",\"i\"),needsContext:new RegExp(\"^\"+L+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+L+\"*((?:-\\\\d)?\\\\d*)\"+L+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ab=/[+~]/,bb=/'|\\\\/g,cb=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+L+\"?|(\"+L+\")|.)\",\"ig\"),db=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},eb=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fb){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function gb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,\"string\"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(bb,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+rb(o[l]);w=ab.test(a)&&pb(b.parentNode)||b,x=o.join(\",\")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function hb(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ib(a){return a[u]=!0,a}function jb(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function kb(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function lb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function nb(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function ob(a){return ib(function(b){return b=+b,ib(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pb(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=gb.support={},f=gb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=gb.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener(\"unload\",eb,!1):e.attachEvent&&e.attachEvent(\"onunload\",eb)),p=!f(g),c.attributes=jb(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=jb(function(a){return a.appendChild(g.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=jb(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(jb(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\f]' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+L+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+L+\"*(?:value|\"+K+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),jb(function(a){var b=g.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+L+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&jb(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",P)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return lb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?lb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},gb.matches=function(a,b){return gb(a,null,null,b)},gb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return gb(b,n,null,[a]).length>0},gb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},gb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},gb.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},gb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=gb.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=gb.selectors={cacheLength:50,createPseudo:ib,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||\"\").replace(cb,db),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||gb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&gb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+L+\")\"+a+\"(\"+L+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=gb.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(Q,\" \")+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||gb.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ib(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ib(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?ib(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ib(function(a){return function(b){return gb(a,b).length>0}}),contains:ib(function(a){return a=a.replace(cb,db),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ib(function(a){return W.test(a||\"\")||gb.error(\"unsupported lang: \"+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:ob(function(){return[0]}),last:ob(function(a,b){return[b-1]}),eq:ob(function(a,b,c){return[0>c?c+b:c]}),even:ob(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:ob(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:ob(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:ob(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=mb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=nb(b);function qb(){}qb.prototype=d.filters=d.pseudos,d.setFilters=new qb,g=gb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?gb.error(a):z(a,i).slice(0)};function rb(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function sb(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function tb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ub(a,b,c){for(var d=0,e=b.length;e>d;d++)gb(a,b[d],c);return c}function vb(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wb(a,b,c,d,e,f){return d&&!d[u]&&(d=wb(d)),e&&!e[u]&&(e=wb(e,f)),ib(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ub(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:vb(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=vb(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=vb(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=sb(function(a){return a===b},h,!0),l=sb(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sb(tb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wb(i>1&&tb(m),i>1&&rb(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&xb(a.slice(i,e)),f>e&&xb(a=a.slice(e)),f>e&&rb(a))}m.push(c)}return tb(m)}function yb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=vb(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&gb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ib(f):f}return h=gb.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,yb(e,d)),f.selector=a}return f},i=gb.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&pb(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&rb(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&pb(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=jb(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),jb(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||kb(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&jb(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||kb(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),jb(function(a){return null==a.getAttribute(\"disabled\")})||kb(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),gb}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)\n},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bb=/<([\\w:]+)/,cb=/<|&#?\\w+;/,db=/<(?:script|style|link)/i,eb=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fb=/^$|\\/(?:java|ecma)script/i,gb=/^true\\/(.*)/,hb=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ib={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function kb(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,\"script\"),g.length>0&&mb(g,!i&&ob(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(bb.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),\"script\"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(ab,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,\"script\"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),\"none\"!==c&&c||(qb=(qb||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wb=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Bb=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Cb={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Db={letterSpacing:\"0\",fontWeight:\"400\"},Eb=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Hb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ib(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",tb(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),\"normal\"===e&&b in Db&&(e=Db[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xb,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pb=/queueHooks$/,Qb=[Vb],Rb={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||tb(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?tb(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb(\"show\"),slideUp:Tb(\"hide\"),slideToggle:Tb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))\n},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ac,\" \").indexOf(b)>=0)return!0;return!1}});var bc=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bc,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cc=n.now(),dc=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var ec=/#.*$/,fc=/([?&])_=[^&]*/,gc=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,hc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ic=/^(?:GET|HEAD)$/,jc=/^\\/\\//,kc=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,lc={},mc={},nc=\"*/\".concat(\"*\"),oc=a.location.href,pc=kc.exec(oc.toLowerCase())||[];function qc(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rc(a,b,c,d){var e={},f=a===mc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function sc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function uc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:oc,type:\"GET\",isLocal:hc.test(pc[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":nc,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sc(sc(a,n.ajaxSettings),b):sc(n.ajaxSettings,a)},ajaxPrefilter:qc(lc),ajaxTransport:qc(mc),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gc.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||oc)+\"\").replace(ec,\"\").replace(jc,pc[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=kc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pc[1]&&h[2]===pc[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(pc[3]||(\"http:\"===pc[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rc(lc,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!ic.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=fc.test(d)?d.replace(fc,\"$1_=\"+cc++):d+(dc.test(d)?\"&\":\"?\")+\"_=\"+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+nc+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rc(mc,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tc(k,v,f)),u=uc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vc=/%20/g,wc=/\\[\\]$/,xc=/\\r?\\n/g,yc=/^(?:submit|button|image|reset|file)$/i,zc=/^(?:input|select|textarea|keygen)/i;function Ac(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wc.test(a)?d(a,e):Ac(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Ac(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ac(c,a[c],b,e);return d.join(\"&\").replace(vc,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&zc.test(this.nodeName)&&!yc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xc,\"\\r\\n\")}}):{name:b.name,value:c.replace(xc,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bc=0,Cc={},Dc={0:200,1223:204},Ec=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent(\"onunload\",function(){for(var a in Cc)Cc[a]()}),k.cors=!!Ec&&\"withCredentials\"in Ec,k.ajax=Ec=!!Ec,n.ajaxTransport(function(a){var b;return k.cors||Ec&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cc[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Dc[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Cc[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fc=[],Gc=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Fc.pop()||n.expando+\"_\"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gc.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Gc.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gc,\"$1\"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hc=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Hc)return Hc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ic=a.document.documentElement;function Jc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ic;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Ic})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Kc=a.jQuery,Lc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lc),b&&a.jQuery===n&&(a.jQuery=Kc),n},typeof b===U&&(a.jQuery=a.$=n),n});\n\n","define('interface',[\"jquery\", \"robotActions\", \"common\"], function($, robotActions, common) {\n\t\"use strict\";\n\t\n\tvar errorStr = \"Your instructions are incorrectly formatted. Please remember that the first line of input is used as the upper-right bounds.\";\n\t\n\t/*\n\t * this function does NOT validate instructions.\n\t * a readable instruction is one that has at least 3 lines. \n\t * 1. upper bounds\n\t * 2. robot position\n\t * 3. robot movement instructions \n\t */ \n\tvar isInstructionReadable = function(inputStr) {\n\t\tif(inputStr.length == 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif(inputStr.length > 0) {\n\t\t\tif(inputStr.split(\"\\n\").length < 3) {\n\t\t\t\t//we need at least 3 lines to try and do anything valuable\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(inputStr.split(\"\\n\").length >= 3) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar readTextArea = function(inputStr) {\n\t\tvar inputArr = inputStr.split(\"\\n\\n\");\n\t\tvar output;\n\n\t\tfor(var i = 0; i < inputArr.length; i++) {\n\t\t\tvar currentInstructionSet = inputArr[i].split(\"\\n\");\n\t\t\t// the first line of the first instruction sets the bounds\n\t\t\tif (i === 0) {\n\t\t\t\t\tvar defaultsArr = currentInstructionSet[0].split(\" \");\n\t\t\t\t\tcommon.defaults.xBounds = common.isNumber(defaultsArr[0]) ? defaultsArr[0] : common.defaults.xBounds;\n\t\t\t\t\tcommon.defaults.yBounds = common.isNumber(defaultsArr[1]) ? defaultsArr[1] : common.defaults.yBounds;\n\t\t\t\t\toutput = robotActions.instructBot(\"Bot ${i}\", currentInstructionSet[1], currentInstructionSet[2]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutput = robotActions.instructBot(\"Bot ${i}\", currentInstructionSet[0], currentInstructionSet[1]);\n\t\t\t}\n\n\t\t\t$(\"#output\").append(\"<p>\" + output + \"</p>\");\n\t\t}\n\t}\n\t\n\tvar init = function() {\n\t\tvar inputStr = document.getElementById(\"input\").value;\n\t\t$(\"#read-instructions\").click(function() {\n\t\t\tconsole.log(\"Before: %s\", inputStr);\n\t\t\tif(isInstructionReadable(inputStr)) {\n\t\t\t\treadTextArea(inputStr);\n\t\t\t\tdocument.getElementById(\"input\").value = \"\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$(\"#output\").html(errorStr);\n\t\t\t}\n\t\t});\n\t}\n\t\t\n\treturn {\n\t\ttestInstructions: isInstructionReadable,\n\t\tinit: init\n\t}\n\t\n});\n","require.config({\n\tshim: {\n\t\t'underscore': {\n\t\t\texports: \"_\"\n\t\t}\n\t},\n\tpaths: {\n\t\tunderscore: \"../third-party/underscore-min\",\n\t\tjquery: \"../third-party/jquery-2.1.3.min\"\n\t}\n});\n\nrequire([\"robotActions\", \"interface\", \"common\"], function(robotActions, interface, common) {\n\t\n\tinterface.init();\n//\tconsole.log(robotActions.instructBot(\"bot1\", \"1 1 E\", \"RFRFRFRF\"));\n//\tconsole.log(robotActions.instructBot(\"bot2\", \"3 2 N\", \"FRRFLLFFRRFLL\"));\n//\tconsole.log(robotActions.instructBot(\"bot3\", \"0 3 W\", \"LLFFFLFLFL\"));\n\t\n});\ndefine(\"main\", function(){});\n\n"]}